<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lesson 14 問題集 on Northern Wind</title>
    <link>https://www.chunfuchao.com/cs291/lesson-14/</link>
    <description>Recent content in Lesson 14 問題集 on Northern Wind</description>
    <generator>Hugo</generator>
    <language>zh-TW</language>
    <atom:link href="https://www.chunfuchao.com/cs291/lesson-14/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>01 全向光</title>
      <link>https://www.chunfuchao.com/cs291/lesson-14/01-omni-light/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://www.chunfuchao.com/cs291/lesson-14/01-omni-light/</guid>
      <description>&lt;iframe id=&#34;video&#34; width=&#34;100%&#34; height=&#34;400&#34; src=&#34;https://www.youtube.com/embed/NA0zhkkXacQ?cc_load_policy=0&#34; frameborder=&#34;0&#34; allowfullscreen=&#34;true&#34;&gt;&#xD;&#xA;&lt;/iframe&gt;&#xD;&#xA;&lt;script src=&#34;https://www.chunfuchao.com/js/youtube.external.subtitle.min.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://www.chunfuchao.com/js/subtitles.parser.min.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://www.chunfuchao.com/js/loadsrt.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;  loadSRT(&#39;/cs291/srt/Lesson 14\/01 Omni Light - Interactive 3D Graphics-NA0zhkkXacQ.srt&#39;, function(subtitles) {&#xD;&#xA;    var youtubeExternalSubtitle = new YoutubeExternalSubtitle.Subtitle(document.getElementById(&#39;video&#39;), subtitles);&#xD;&#xA;  });&#xD;&#xA;&lt;/script&gt;</description>
    </item>
    <item>
      <title>01A 全向光（解答）</title>
      <link>https://www.chunfuchao.com/cs291/lesson-14/01a-omni-light/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://www.chunfuchao.com/cs291/lesson-14/01a-omni-light/</guid>
      <description>&lt;iframe id=&#34;video&#34; width=&#34;100%&#34; height=&#34;400&#34; src=&#34;https://www.youtube.com/embed/Ec86qBgKCTI?cc_load_policy=0&#34; frameborder=&#34;0&#34; allowfullscreen=&#34;true&#34;&gt;&#xD;&#xA;&lt;/iframe&gt;&#xD;&#xA;&lt;script src=&#34;https://www.chunfuchao.com/js/youtube.external.subtitle.min.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://www.chunfuchao.com/js/subtitles.parser.min.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://www.chunfuchao.com/js/loadsrt.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;  loadSRT(&#39;/cs291/srt/Lesson 14\/01A Omni Light - Interactive 3D Graphics-Ec86qBgKCTI.srt&#39;, function(subtitles) {&#xD;&#xA;    var youtubeExternalSubtitle = new YoutubeExternalSubtitle.Subtitle(document.getElementById(&#39;video&#39;), subtitles);&#xD;&#xA;  });&#xD;&#xA;&lt;/script&gt;</description>
    </item>
    <item>
      <title>02 旋轉式燈控制</title>
      <link>https://www.chunfuchao.com/cs291/lesson-14/02-swivel-light-control/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://www.chunfuchao.com/cs291/lesson-14/02-swivel-light-control/</guid>
      <description>&lt;iframe id=&#34;video&#34; width=&#34;100%&#34; height=&#34;400&#34; src=&#34;https://www.youtube.com/embed/wRN_PT6wXJI?cc_load_policy=0&#34; frameborder=&#34;0&#34; allowfullscreen=&#34;true&#34;&gt;&#xD;&#xA;&lt;/iframe&gt;&#xD;&#xA;&lt;script src=&#34;https://www.chunfuchao.com/js/youtube.external.subtitle.min.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://www.chunfuchao.com/js/subtitles.parser.min.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://www.chunfuchao.com/js/loadsrt.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;  loadSRT(&#39;/cs291/srt/Lesson 14\/02 Swivel Light Control - Interactive 3D Graphics-wRN_PT6wXJI.srt&#39;, function(subtitles) {&#xD;&#xA;    var youtubeExternalSubtitle = new YoutubeExternalSubtitle.Subtitle(document.getElementById(&#39;video&#39;), subtitles);&#xD;&#xA;  });&#xD;&#xA;&lt;/script&gt;&#xA;&lt;p&gt;譯註：請移動到下一頁開始解題。&lt;/p&gt;</description>
    </item>
    <item>
      <title>02 旋轉式燈控制（程式）</title>
      <link>https://www.chunfuchao.com/cs291/lesson-14/02p-swivel-light-control/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://www.chunfuchao.com/cs291/lesson-14/02p-swivel-light-control/</guid>
      <description>&lt;html&gt;&#xD;&#xA;&#xD;&#xA;&lt;head&gt;&#xD;&#xA;  &lt;link rel=&#34;stylesheet&#34; href=&#34;https://www.chunfuchao.com/codemirror/6.65.7/codemirror.min.css&#34;&gt;&#xD;&#xA;  &lt;script src=&#34;https://www.chunfuchao.com/codemirror/6.65.7/codemirror.min.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;  &lt;script src=&#34;https://www.chunfuchao.com/codemirror/6.65.7/mode/javascript/javascript.min.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;  &lt;script&gt;&#xD;&#xA;    document.addEventListener(&#34;DOMContentLoaded&#34;, function () {&#xD;&#xA;      var editor = CodeMirror.fromTextArea(document.getElementById(&#34;editor&#34;), {&#xD;&#xA;        lineNumbers: true,&#xD;&#xA;        mode: &#34;javascript&#34;,&#xD;&#xA;        theme: &#34;default&#34;&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      var frame = document.getElementById(&#34;preview&#34;);&#xD;&#xA;      var doc = frame.contentDocument || frame.contentWindow.document;&#xD;&#xA;&#xD;&#xA;      editor.on(&#34;change&#34;, function (instance) {&#xD;&#xA;        var content = instance.getValue();&#xD;&#xA;        updatePreview(content);&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      editor.setSize(null, document.body.clientHeight)&#xD;&#xA;&#xD;&#xA;      function updatePreview(scriptContent) {&#xD;&#xA;        var fullHTML = `&#xD;&#xA;            &lt;!DOCTYPE html&gt;&#xD;&#xA;            &lt;html&gt;&#xD;&#xA;            &lt;head&gt;&#xD;&#xA;                \r\n\u003cscript src=\u0022\/js\/cs291\/lib\/jquery-1.8.3.min.js\u0022\u003e\u003c\/script\u003e\r\n\u003cscript src=\u0022\/js\/cs291\/lib\/three.min.js\u0022\u003e\u003c\/script\u003e\r\n\u003cscript src=\u0022\/js\/cs291\/lib\/Coordinates.js\u0022\u003e\u003c\/script\u003e\r\n\u003cscript src=\u0022\/js\/cs291\/lib\/OrbitAndPanControls.js\u0022\u003e\u003c\/script\u003e\r\n\u003cscript src=\u0022\/js\/cs291\/lib\/dat.gui.min.js\u0022\u003e\u003c\/script\u003e\r\n\u003cscript src=\u0022\/js\/cs291\/lib\/uclass_BeveledBlockGeometry.js\u0022\u003e\u003c\/script\u003e\r\n&#xD;&#xA;                \x3Cscript&gt;&#xD;&#xA;                    try {&#xD;&#xA;                            ${scriptContent}&#xD;&#xA;                        } catch (e) {&#xD;&#xA;                            console.error(e);&#xD;&#xA;                        }&#xD;&#xA;                &lt;\/script&gt;&#xD;&#xA;            &lt;/head&gt;&#xD;&#xA;            &lt;body style=&#34;margin: 0; padding: 0; overflow: hidden&#34;&gt;&#xD;&#xA;                &lt;div id=&#34;container&#34;&gt;&lt;/div&gt;&#xD;&#xA;            &lt;/body&gt;&#xD;&#xA;            &lt;/html&gt;&#xD;&#xA;        `;&#xD;&#xA;&#xD;&#xA;        doc.open();&#xD;&#xA;        try {&#xD;&#xA;          doc.write(fullHTML);&#xD;&#xA;        } catch (e) {&#xD;&#xA;          console.error(e);&#xD;&#xA;        }&#xD;&#xA;        doc.close();&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      updatePreview(editor.getValue());&#xD;&#xA;    });&#xD;&#xA;  &lt;/script&gt;&#xD;&#xA;&lt;/head&gt;&#xD;&#xA;&#xD;&#xA;&lt;body style=&#34;height: 100%; margin: 0&#34;&gt;&#xD;&#xA;  &lt;div style=&#34;display: flex; flex-direction: row; height: 100vh&#34;&gt;&#xD;&#xA;    &lt;form style=&#34;width:50%&#34;&gt;&#xD;&#xA;      &lt;textarea id=&#34;editor&#34;&gt;&#xD;&#xA;&amp;#34;use strict&amp;#34;; // 參考 https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode&#xD;&#xA;////////////////////////////////////////////////////////////////////////////////&#xD;&#xA;// 製作旋轉式燈作業&#xD;&#xA;////////////////////////////////////////////////////////////////////////////////&#xD;&#xA;&#xD;&#xA;var camera, scene, renderer;&#xD;&#xA;var cameraControls, effectController;&#xD;&#xA;var clock = new THREE.Clock();&#xD;&#xA;&#xD;&#xA;var light;&#xD;&#xA;&#xD;&#xA;function fillScene() {&#xD;&#xA;&#x9;scene = new THREE.Scene();&#xD;&#xA;&#x9;scene.fog = new THREE.Fog( 0xAAAAAA, 2000, 4000 );&#xD;&#xA;&#xD;&#xA;&#x9;// 光源&#xD;&#xA;&#x9;scene.add( new THREE.AmbientLight( 0x222222 ) );&#xD;&#xA;&#xD;&#xA;&#x9;light = new THREE.DirectionalLight( 0xFFFFFF, 1.5 );&#xD;&#xA;&#x9;light.position.set( 1, 1, 0 );&#xD;&#xA;&#xD;&#xA;&#x9;scene.add( light );&#xD;&#xA;&#xD;&#xA;&#x9;// 材質&#xD;&#xA;&#x9;var headMaterial = new THREE.MeshLambertMaterial( );&#xD;&#xA;&#x9;headMaterial.color.r = 104/255;&#xD;&#xA;&#x9;headMaterial.color.g = 1/255;&#xD;&#xA;&#x9;headMaterial.color.b = 5/255;&#xD;&#xA;&#x9;headMaterial.ambient.copy( headMaterial.color );&#xD;&#xA;&#xD;&#xA;&#x9;var hatMaterial = new THREE.MeshPhongMaterial( { shininess: 100 } );&#xD;&#xA;&#x9;hatMaterial.color.r = 24/255;&#xD;&#xA;&#x9;hatMaterial.color.g = 38/255;&#xD;&#xA;&#x9;hatMaterial.color.b = 77/255;&#xD;&#xA;&#x9;hatMaterial.specular.setRGB( 0.5, 0.5, 0.5 );&#xD;&#xA;&#x9;hatMaterial.ambient.copy( hatMaterial.color );&#xD;&#xA;&#xD;&#xA;&#x9;var bodyMaterial = new THREE.MeshPhongMaterial( { shininess: 100 } );&#xD;&#xA;&#x9;bodyMaterial.color.setRGB( 31/255, 86/255, 169/255 );&#xD;&#xA;&#x9;bodyMaterial.specular.setRGB( 0.5, 0.5, 0.5 );&#xD;&#xA;&#x9;bodyMaterial.ambient.copy( bodyMaterial.color );&#xD;&#xA;&#xD;&#xA;&#x9;var glassMaterial = new THREE.MeshPhongMaterial( { color: 0x0, specular: 0xFFFFFF, shininess: 100, opacity: 0.3, transparent: true } );&#xD;&#xA;&#x9;glassMaterial.ambient.copy( glassMaterial.color );&#xD;&#xA;&#xD;&#xA;&#x9;var legMaterial = new THREE.MeshPhongMaterial( { shininess: 4 } );&#xD;&#xA;&#x9;legMaterial.color.setHex( 0xAdA79b );&#xD;&#xA;&#x9;legMaterial.specular.setRGB( 0.5, 0.5, 0.5 );&#xD;&#xA;&#x9;legMaterial.ambient.copy( legMaterial.color );&#xD;&#xA;&#xD;&#xA;&#x9;var footMaterial = new THREE.MeshPhongMaterial( { color: 0x960f0b, shininess: 30 } );&#xD;&#xA;&#x9;footMaterial.specular.setRGB( 0.5, 0.5, 0.5 );&#xD;&#xA;&#x9;footMaterial.ambient.copy( footMaterial.color );&#xD;&#xA;&#xD;&#xA;&#x9;var crossbarMaterial = new THREE.MeshPhongMaterial( { color: 0x808080, specular: 0xFFFFFF, shininess: 400 } );&#xD;&#xA;&#x9;crossbarMaterial.ambient.copy( crossbarMaterial.color );&#xD;&#xA;&#x9;var eyeMaterial = new THREE.MeshPhongMaterial( { color: 0x000000, specular: 0x303030, shininess: 4 } );&#xD;&#xA;&#x9;eyeMaterial.ambient.copy( eyeMaterial.color );&#xD;&#xA;&#xD;&#xA;&#x9;var sphere, cylinder, cube;&#xD;&#xA;&#xD;&#xA;&#x9;var bevelRadius = 1.9;&#x9;// TODO: 2.0 會造成幾何問題&#xD;&#xA;&#xD;&#xA;&#x9;// 建模&#xD;&#xA;&#x9;// 基底&#xD;&#xA;&#x9;cube = new THREE.Mesh(&#xD;&#xA;&#x9;&#x9;new THREE.BeveledBlockGeometry( 20&amp;#43;64&amp;#43;110, 4, 2*77&amp;#43;12, bevelRadius ), footMaterial );&#xD;&#xA;&#x9;cube.position.x = -45;&#x9;// (20&amp;#43;32) - 寬度的一半 (20&amp;#43;64&amp;#43;110)/2&#xD;&#xA;&#x9;cube.position.y = 4/2;&#x9;// 高的的一半&#xD;&#xA;&#x9;cube.position.z = 0;&#x9;// 中心在原點&#xD;&#xA;&#x9;scene.add( cube );&#xD;&#xA;&#xD;&#xA;&#x9;// 腳掌&#xD;&#xA;&#x9;cube = new THREE.Mesh(&#xD;&#xA;&#x9;&#x9;new THREE.BeveledBlockGeometry( 20&amp;#43;64&amp;#43;110, 52, 6, bevelRadius ), footMaterial );&#xD;&#xA;&#x9;cube.position.x = -45;&#x9;// (20&amp;#43;32) - 寬度的一半 (20&amp;#43;64&amp;#43;110)/2&#xD;&#xA;&#x9;cube.position.y = 52/2;&#x9;// 高的的一半&#xD;&#xA;&#x9;cube.position.z = 77 &amp;#43; 6/2;&#x9;// 偏移 77 &amp;#43; 深度的一半 6/2&#xD;&#xA;&#x9;scene.add( cube );&#xD;&#xA;&#xD;&#xA;&#x9;cube = new THREE.Mesh(&#xD;&#xA;&#x9;&#x9;new THREE.BeveledBlockGeometry( 20&amp;#43;64&amp;#43;110, 52, 6, bevelRadius ), footMaterial );&#xD;&#xA;&#x9;cube.position.x = -45;&#x9;// (20&amp;#43;32) - 寬度的一半 (20&amp;#43;64&amp;#43;110)/2&#xD;&#xA;&#x9;cube.position.y = 52/2;&#x9;// 高的的一半&#xD;&#xA;&#x9;cube.position.z = -(77 &amp;#43; 6/2);&#x9;// 負的偏移 77 &amp;#43; 深度的一半 6/2&#xD;&#xA;&#x9;scene.add( cube );&#xD;&#xA;&#xD;&#xA;&#x9;cube = new THREE.Mesh(&#xD;&#xA;&#x9;&#x9;new THREE.BeveledBlockGeometry( 64, 104, 6, bevelRadius ), footMaterial );&#xD;&#xA;&#x9;cube.position.x = 0;&#x9;// X 方向在原點&#xD;&#xA;&#x9;cube.position.y = 104/2;&#xD;&#xA;&#x9;cube.position.z = 77 &amp;#43; 6/2;&#x9;// 負的偏移 77 &amp;#43; 深度的一半 6/2&#xD;&#xA;&#x9;scene.add( cube );&#xD;&#xA;&#xD;&#xA;&#x9;cube = new THREE.Mesh(&#xD;&#xA;&#x9;&#x9;new THREE.BeveledBlockGeometry( 64, 104, 6, bevelRadius ), footMaterial );&#xD;&#xA;&#x9;cube.position.x = 0;&#x9;// X 方向在原點&#xD;&#xA;&#x9;cube.position.y = 104/2;&#xD;&#xA;&#x9;cube.position.z = -(77 &amp;#43; 6/2);&#x9;// 負的偏移 77 &amp;#43; 深度的一半 6/2&#xD;&#xA;&#x9;scene.add( cube );&#xD;&#xA;&#xD;&#xA;&#x9;// 腳&#xD;&#xA;&#x9;cube = new THREE.Mesh(&#xD;&#xA;&#x9;&#x9;new THREE.BeveledBlockGeometry( 60, 282&amp;#43;4, 4, bevelRadius ), legMaterial );&#xD;&#xA;&#x9;cube.position.x = 0;&#x9;// X 方向在原點&#xD;&#xA;&#x9;cube.position.y = 104 &amp;#43; 282/2 - 2;&#xD;&#xA;&#x9;cube.position.z = 77 &amp;#43; 6/2;&#x9;// 負的偏移 77 &amp;#43; 深度的一半 6/2&#xD;&#xA;&#x9;scene.add( cube );&#xD;&#xA;&#xD;&#xA;&#x9;cube = new THREE.Mesh(&#xD;&#xA;&#x9;&#x9;new THREE.BeveledBlockGeometry( 60, 282&amp;#43;4, 4, bevelRadius ), legMaterial );&#xD;&#xA;&#x9;cube.position.x = 0;&#x9;// X 方向在原點&#xD;&#xA;&#x9;cube.position.y = 104 &amp;#43; 282/2 - 2;&#xD;&#xA;&#x9;cube.position.z = -(77 &amp;#43; 6/2);&#x9;// 負的偏移 77 &amp;#43; 深度的一半 6/2&#xD;&#xA;&#x9;scene.add( cube );&#xD;&#xA;&#xD;&#xA;&#x9;// 身體&#xD;&#xA;&#x9;sphere = new THREE.Mesh(&#xD;&#xA;&#x9;&#x9;new THREE.SphereGeometry( 104/2, 32, 16, 0, Math.PI * 2, Math.PI/2, Math.PI ), bodyMaterial );&#xD;&#xA;&#x9;sphere.position.x = 0;&#xD;&#xA;&#x9;sphere.position.y = 160;&#xD;&#xA;&#x9;sphere.position.z = 0;&#xD;&#xA;&#x9;scene.add( sphere );&#xD;&#xA;&#xD;&#xA;&#x9;// 半球的上蓋&#xD;&#xA;&#x9;cylinder = new THREE.Mesh(&#xD;&#xA;&#x9;&#x9;new THREE.CylinderGeometry( 104/2, 104/2, 0, 32 ), bodyMaterial );&#xD;&#xA;&#x9;cylinder.position.x = 0;&#xD;&#xA;&#x9;cylinder.position.y = 160;&#xD;&#xA;&#x9;cylinder.position.z = 0;&#xD;&#xA;&#x9;scene.add( cylinder );&#xD;&#xA;&#xD;&#xA;&#x9;cylinder = new THREE.Mesh(&#xD;&#xA;&#x9;&#x9;new THREE.CylinderGeometry( 12/2, 12/2, 390 - 100, 32 ), bodyMaterial );&#xD;&#xA;&#x9;cylinder.position.x = 0;&#xD;&#xA;&#x9;cylinder.position.y = 160 &amp;#43; 390/2 - 100;&#xD;&#xA;&#x9;cylinder.position.z = 0;&#xD;&#xA;&#x9;scene.add( cylinder );&#xD;&#xA;&#xD;&#xA;&#x9;// 玻璃&#xD;&#xA;&#x9;sphere = new THREE.Mesh(&#xD;&#xA;&#x9;&#x9;new THREE.SphereGeometry( 116/2, 32, 16 ), glassMaterial );&#xD;&#xA;&#x9;sphere.position.x = 0;&#xD;&#xA;&#x9;sphere.position.y = 160;&#xD;&#xA;&#x9;sphere.position.z = 0;&#xD;&#xA;&#x9;scene.add( sphere );&#xD;&#xA;&#xD;&#xA;&#x9;cylinder = new THREE.Mesh(&#xD;&#xA;&#x9;&#x9;new THREE.CylinderGeometry( 24/2, 24/2, 390, 32 ), glassMaterial );&#xD;&#xA;&#x9;cylinder.position.x = 0;&#xD;&#xA;&#x9;cylinder.position.y = 160 &amp;#43; 390/2;&#xD;&#xA;&#x9;cylinder.position.z = 0;&#xD;&#xA;&#x9;scene.add( cylinder );&#xD;&#xA;&#xD;&#xA;&#x9;// 頭&#xD;&#xA;&#x9;sphere = new THREE.Mesh(&#xD;&#xA;&#x9;&#x9;new THREE.SphereGeometry( 104/2, 32, 16 ), headMaterial );&#xD;&#xA;&#x9;sphere.position.x = 0;&#xD;&#xA;&#x9;sphere.position.y = 160 &amp;#43; 390;&#xD;&#xA;&#x9;sphere.position.z = 0;&#xD;&#xA;&#x9;scene.add( sphere );&#xD;&#xA;&#xD;&#xA;&#x9;// 帽子&#xD;&#xA;&#x9;cylinder = new THREE.Mesh(&#xD;&#xA;&#x9;&#x9;new THREE.CylinderGeometry( 142/2, 142/2, 10, 32 ), hatMaterial );&#xD;&#xA;&#x9;cylinder.position.x = 0;&#xD;&#xA;&#x9;cylinder.position.y = 160 &amp;#43; 390 &amp;#43; 40 &amp;#43; 10/2;&#xD;&#xA;&#x9;cylinder.position.z = 0;&#xD;&#xA;&#x9;scene.add( cylinder );&#xD;&#xA;&#xD;&#xA;&#x9;cylinder = new THREE.Mesh(&#xD;&#xA;&#x9;&#x9;new THREE.CylinderGeometry( 80/2, 80/2, 70, 32 ), hatMaterial );&#xD;&#xA;&#x9;cylinder.position.x = 0;&#xD;&#xA;&#x9;cylinder.position.y = 160 &amp;#43; 390 &amp;#43; 40 &amp;#43; 10 &amp;#43; 70/2;&#xD;&#xA;&#x9;cylinder.position.z = 0;&#xD;&#xA;&#x9;scene.add( cylinder );&#xD;&#xA;&#xD;&#xA;&#x9;// 橫桿&#xD;&#xA;&#x9;cylinder = new THREE.Mesh(&#xD;&#xA;&#x9;&#x9;new THREE.CylinderGeometry( 5, 5, 200, 32 ), crossbarMaterial );&#xD;&#xA;&#x9;cylinder.position.set( 0, 360, 0 );&#xD;&#xA;&#x9;cylinder.rotation.x = 90 * Math.PI / 180.0;&#xD;&#xA;&#x9;scene.add( cylinder );&#xD;&#xA;&#xD;&#xA;&#x9;// 鼻子&#xD;&#xA;&#x9;cylinder = new THREE.Mesh(&#xD;&#xA;&#x9;&#x9;new THREE.CylinderGeometry( 6, 14, 70, 32 ), headMaterial );&#xD;&#xA;&#x9;cylinder.position.set( -70, 530, 0 );&#xD;&#xA;&#x9;cylinder.rotation.z = 90 * Math.PI / 180.0;&#xD;&#xA;&#x9;scene.add( cylinder );&#xD;&#xA;&#xD;&#xA;&#x9;// 眼睛&#xD;&#xA;&#x9;var sphGeom = new THREE.SphereGeometry( 10, 32, 16 );&#xD;&#xA;&#xD;&#xA;&#x9;// 左眼&#xD;&#xA;&#x9;sphere = new THREE.Mesh( sphGeom, eyeMaterial );&#xD;&#xA;&#x9;sphere.position.set( -48, 560, 0 );&#xD;&#xA;&#x9;var eye = new THREE.Object3D();&#xD;&#xA;&#x9;eye.add( sphere );&#xD;&#xA;&#x9;eye.rotation.y = 20 * Math.PI / 180.0;&#xD;&#xA;&#x9;scene.add( eye );&#xD;&#xA;&#xD;&#xA;&#x9;// 右眼&#xD;&#xA;&#x9;sphere = new THREE.Mesh( sphGeom, eyeMaterial );&#xD;&#xA;&#x9;sphere.position.set( -48, 560, 0 );&#xD;&#xA;&#x9;eye = new THREE.Object3D();&#xD;&#xA;&#x9;eye.add( sphere );&#xD;&#xA;&#x9;eye.rotation.y = -20 * Math.PI / 180.0;&#xD;&#xA;&#x9;scene.add( eye );&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function init() {&#xD;&#xA;&#x9;var canvasWidth = window.innerWidth;&#xD;&#xA;&#x9;var canvasHeight = window.innerHeight;&#xD;&#xA;&#xD;&#xA;&#x9;// RENDERER&#xD;&#xA;&#x9;renderer = new THREE.WebGLRenderer( { antialias: true } );&#xD;&#xA;&#x9;renderer.gammaInput = true;&#xD;&#xA;&#x9;renderer.gammaOutput = true;&#xD;&#xA;&#x9;renderer.setSize(canvasWidth, canvasHeight);&#xD;&#xA;&#x9;renderer.setClearColorHex( 0xAAAAAA, 1.0 );&#xD;&#xA;&#xD;&#xA;&#x9;// 攝影機&#xD;&#xA;&#x9;camera = new THREE.PerspectiveCamera( 35, canvasWidth/ canvasHeight, 1, 4000 );&#xD;&#xA;&#x9;camera.position.set( -1160, 350, -600 );&#xD;&#xA;&#xD;&#xA;&#x9;// 控制&#xD;&#xA;&#x9;cameraControls = new THREE.OrbitAndPanControls(camera, renderer.domElement);&#xD;&#xA;&#x9;cameraControls.target.set(0,310,0);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function drawHelpers() {&#xD;&#xA;&#x9;Coordinates.drawGround({size:10000});&#xD;&#xA;&#x9;Coordinates.drawGrid({size:10000,scale:0.01});&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function addToDOM() {&#xD;&#xA;&#x9;var container = document.getElementById(&amp;#39;container&amp;#39;);&#xD;&#xA;&#x9;var canvas = container.getElementsByTagName(&amp;#39;canvas&amp;#39;);&#xD;&#xA;&#x9;if (canvas.length&amp;gt;0) {&#xD;&#xA;&#x9;&#x9;container.removeChild(canvas[0]);&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;container.appendChild( renderer.domElement );&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function animate() {&#xD;&#xA;&#x9;window.requestAnimationFrame(animate);&#xD;&#xA;&#x9;render();&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function render() {&#xD;&#xA;&#x9;var delta = clock.getDelta();&#xD;&#xA;&#x9;cameraControls.update(delta);&#xD;&#xA;&#x9;renderer.render(scene, camera);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setupGui() {&#xD;&#xA;&#x9;effectController = {&#xD;&#xA;&#x9;&#x9;angle: 160&#xD;&#xA;&#x9;};&#xD;&#xA;&#x9;var gui = new dat.GUI();&#xD;&#xA;&#x9;gui.add( effectController, &amp;#34;angle&amp;#34;, 0.0, 360.0 ).name(&amp;#34;旋轉角度&amp;#34;);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;document.addEventListener(&amp;#34;DOMContentLoaded&amp;#34;, function () {&#xD;&#xA;&#x9;try {&#xD;&#xA;&#x9;&#x9;init();&#xD;&#xA;&#x9;&#x9;fillScene();&#xD;&#xA;&#x9;&#x9;setupGui();&#xD;&#xA;&#x9;&#x9;drawHelpers();&#xD;&#xA;&#x9;&#x9;addToDOM();&#xD;&#xA;&#x9;&#x9;animate();&#xD;&#xA;&#x9;} catch(e) {&#xD;&#xA;&#x9;&#x9;var errorReport = &amp;#34;你的程式遇到不可復原的錯誤，無法繪製 Canvas。錯誤是：&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;&amp;#34;;&#xD;&#xA;&#x9;&#x9;$(&amp;#39;#container&amp;#39;).append(errorReport&amp;#43;e);&#xD;&#xA;&#x9;}&#xD;&#xA;})&#xD;&#xA;&lt;/textarea&gt;&#xD;&#xA;    &lt;/form&gt;&#xD;&#xA;    &lt;iframe id=&#34;preview&#34; src=&#34;about:blank&#34; style=&#34;flex-grow: 1&#34;&gt;&lt;/iframe&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&lt;/body&gt;&#xD;&#xA;&#xD;&#xA;&lt;/html&gt;</description>
    </item>
    <item>
      <title>02A 旋轉式燈控制（解答）</title>
      <link>https://www.chunfuchao.com/cs291/lesson-14/02a-swivel-light-control/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://www.chunfuchao.com/cs291/lesson-14/02a-swivel-light-control/</guid>
      <description>&lt;iframe id=&#34;video&#34; width=&#34;100%&#34; height=&#34;400&#34; src=&#34;https://www.youtube.com/embed/uEBmi2M-eBw?cc_load_policy=0&#34; frameborder=&#34;0&#34; allowfullscreen=&#34;true&#34;&gt;&#xD;&#xA;&lt;/iframe&gt;&#xD;&#xA;&lt;script src=&#34;https://www.chunfuchao.com/js/youtube.external.subtitle.min.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://www.chunfuchao.com/js/subtitles.parser.min.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://www.chunfuchao.com/js/loadsrt.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;  loadSRT(&#39;/cs291/srt/Lesson 14\/02A Swivel Light Control - Interactive 3D Graphics-uEBmi2M-eBw.srt&#39;, function(subtitles) {&#xD;&#xA;    var youtubeExternalSubtitle = new YoutubeExternalSubtitle.Subtitle(document.getElementById(&#39;video&#39;), subtitles);&#xD;&#xA;  });&#xD;&#xA;&lt;/script&gt;&#xA;&lt;p&gt;&lt;strong&gt;解答：&lt;/strong&gt; 在 &lt;code&gt;render()&lt;/code&gt; 呼叫 &lt;code&gt;renderer.render&lt;/code&gt; 之前加入：&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;light.position.x = Math.cos( effectController.angle * Math.PI/180.0 );&#xD;&#xA;light.position.z = Math.sin( effectController.angle * Math.PI/180.0 );&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>03 旋轉傾斜式燈控制</title>
      <link>https://www.chunfuchao.com/cs291/lesson-14/03-swivel-and-tilt-light-control/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://www.chunfuchao.com/cs291/lesson-14/03-swivel-and-tilt-light-control/</guid>
      <description>&lt;iframe id=&#34;video&#34; width=&#34;100%&#34; height=&#34;400&#34; src=&#34;https://www.youtube.com/embed/Bzz5352_oo8?cc_load_policy=0&#34; frameborder=&#34;0&#34; allowfullscreen=&#34;true&#34;&gt;&#xD;&#xA;&lt;/iframe&gt;&#xD;&#xA;&lt;script src=&#34;https://www.chunfuchao.com/js/youtube.external.subtitle.min.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://www.chunfuchao.com/js/subtitles.parser.min.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://www.chunfuchao.com/js/loadsrt.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;  loadSRT(&#39;/cs291/srt/Lesson 14\/03 Swivel and Tilt Light Control - Interactive 3D Graphics-Bzz5352_oo8.srt&#39;, function(subtitles) {&#xD;&#xA;    var youtubeExternalSubtitle = new YoutubeExternalSubtitle.Subtitle(document.getElementById(&#39;video&#39;), subtitles);&#xD;&#xA;  });&#xD;&#xA;&lt;/script&gt;&#xA;&lt;p&gt;譯註：請移動到下一頁開始解題。&lt;/p&gt;&#xA;&lt;p&gt;仰角–方位角圖來自 &lt;a href=&#34;http://en.wikipedia.org/wiki/File:Azimuth-Altitude_schematic.svg&#34;&gt;維基&lt;/a&gt;。&lt;/p&gt;</description>
    </item>
    <item>
      <title>03 旋轉傾斜式燈控制（程式）</title>
      <link>https://www.chunfuchao.com/cs291/lesson-14/03p-swivel-and-tilt-light-control/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://www.chunfuchao.com/cs291/lesson-14/03p-swivel-and-tilt-light-control/</guid>
      <description>&lt;html&gt;&#xD;&#xA;&#xD;&#xA;&lt;head&gt;&#xD;&#xA;  &lt;link rel=&#34;stylesheet&#34; href=&#34;https://www.chunfuchao.com/codemirror/6.65.7/codemirror.min.css&#34;&gt;&#xD;&#xA;  &lt;script src=&#34;https://www.chunfuchao.com/codemirror/6.65.7/codemirror.min.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;  &lt;script src=&#34;https://www.chunfuchao.com/codemirror/6.65.7/mode/javascript/javascript.min.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;  &lt;script&gt;&#xD;&#xA;    document.addEventListener(&#34;DOMContentLoaded&#34;, function () {&#xD;&#xA;      var editor = CodeMirror.fromTextArea(document.getElementById(&#34;editor&#34;), {&#xD;&#xA;        lineNumbers: true,&#xD;&#xA;        mode: &#34;javascript&#34;,&#xD;&#xA;        theme: &#34;default&#34;&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      var frame = document.getElementById(&#34;preview&#34;);&#xD;&#xA;      var doc = frame.contentDocument || frame.contentWindow.document;&#xD;&#xA;&#xD;&#xA;      editor.on(&#34;change&#34;, function (instance) {&#xD;&#xA;        var content = instance.getValue();&#xD;&#xA;        updatePreview(content);&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      editor.setSize(null, document.body.clientHeight)&#xD;&#xA;&#xD;&#xA;      function updatePreview(scriptContent) {&#xD;&#xA;        var fullHTML = `&#xD;&#xA;            &lt;!DOCTYPE html&gt;&#xD;&#xA;            &lt;html&gt;&#xD;&#xA;            &lt;head&gt;&#xD;&#xA;                \r\n\u003cscript src=\u0022\/js\/cs291\/lib\/jquery-1.8.3.min.js\u0022\u003e\u003c\/script\u003e\r\n\u003cscript src=\u0022\/js\/cs291\/lib\/three.min.js\u0022\u003e\u003c\/script\u003e\r\n\u003cscript src=\u0022\/js\/cs291\/lib\/Coordinates.js\u0022\u003e\u003c\/script\u003e\r\n\u003cscript src=\u0022\/js\/cs291\/lib\/OrbitAndPanControls.js\u0022\u003e\u003c\/script\u003e\r\n\u003cscript src=\u0022\/js\/cs291\/lib\/dat.gui.min.js\u0022\u003e\u003c\/script\u003e\r\n\u003cscript src=\u0022\/js\/cs291\/lib\/uclass_BeveledBlockGeometry.js\u0022\u003e\u003c\/script\u003e\r\n&#xD;&#xA;                \x3Cscript&gt;&#xD;&#xA;                    try {&#xD;&#xA;                            ${scriptContent}&#xD;&#xA;                        } catch (e) {&#xD;&#xA;                            console.error(e);&#xD;&#xA;                        }&#xD;&#xA;                &lt;\/script&gt;&#xD;&#xA;            &lt;/head&gt;&#xD;&#xA;            &lt;body style=&#34;margin: 0; padding: 0; overflow: hidden&#34;&gt;&#xD;&#xA;                &lt;div id=&#34;container&#34;&gt;&lt;/div&gt;&#xD;&#xA;            &lt;/body&gt;&#xD;&#xA;            &lt;/html&gt;&#xD;&#xA;        `;&#xD;&#xA;&#xD;&#xA;        doc.open();&#xD;&#xA;        try {&#xD;&#xA;          doc.write(fullHTML);&#xD;&#xA;        } catch (e) {&#xD;&#xA;          console.error(e);&#xD;&#xA;        }&#xD;&#xA;        doc.close();&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      updatePreview(editor.getValue());&#xD;&#xA;    });&#xD;&#xA;  &lt;/script&gt;&#xD;&#xA;&lt;/head&gt;&#xD;&#xA;&#xD;&#xA;&lt;body style=&#34;height: 100%; margin: 0&#34;&gt;&#xD;&#xA;  &lt;div style=&#34;display: flex; flex-direction: row; height: 100vh&#34;&gt;&#xD;&#xA;    &lt;form style=&#34;width:50%&#34;&gt;&#xD;&#xA;      &lt;textarea id=&#34;editor&#34;&gt;&#xD;&#xA;&amp;#34;use strict&amp;#34;; // 參考 https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode&#xD;&#xA;////////////////////////////////////////////////////////////////////////////////&#xD;&#xA;// 製作旋轉傾斜式燈作業&#xD;&#xA;////////////////////////////////////////////////////////////////////////////////&#xD;&#xA;&#xD;&#xA;var camera, scene, renderer;&#xD;&#xA;var cameraControls, effectController;&#xD;&#xA;var clock = new THREE.Clock();&#xD;&#xA;&#xD;&#xA;var light;&#xD;&#xA;&#xD;&#xA;function fillScene() {&#xD;&#xA;&#x9;scene = new THREE.Scene();&#xD;&#xA;&#x9;scene.fog = new THREE.Fog( 0xAAAAAA, 2000, 4000 );&#xD;&#xA;&#xD;&#xA;&#x9;// 光源&#xD;&#xA;&#x9;scene.add( new THREE.AmbientLight( 0x222222 ) );&#xD;&#xA;&#xD;&#xA;&#x9;light = new THREE.DirectionalLight( 0xFFFFFF, 1.5 );&#xD;&#xA;&#x9;light.position.set( 1, 1, 0 );&#xD;&#xA;&#xD;&#xA;&#x9;scene.add( light );&#xD;&#xA;&#xD;&#xA;&#x9;// 材質&#xD;&#xA;&#x9;var headMaterial = new THREE.MeshLambertMaterial( );&#xD;&#xA;&#x9;headMaterial.color.r = 104/255;&#xD;&#xA;&#x9;headMaterial.color.g = 1/255;&#xD;&#xA;&#x9;headMaterial.color.b = 5/255;&#xD;&#xA;&#x9;headMaterial.ambient.copy( headMaterial.color );&#xD;&#xA;&#xD;&#xA;&#x9;var hatMaterial = new THREE.MeshPhongMaterial( { shininess: 100 } );&#xD;&#xA;&#x9;hatMaterial.color.r = 24/255;&#xD;&#xA;&#x9;hatMaterial.color.g = 38/255;&#xD;&#xA;&#x9;hatMaterial.color.b = 77/255;&#xD;&#xA;&#x9;hatMaterial.specular.setRGB( 0.5, 0.5, 0.5 );&#xD;&#xA;&#x9;hatMaterial.ambient.copy( hatMaterial.color );&#xD;&#xA;&#xD;&#xA;&#x9;var bodyMaterial = new THREE.MeshPhongMaterial( { shininess: 100 } );&#xD;&#xA;&#x9;bodyMaterial.color.setRGB( 31/255, 86/255, 169/255 );&#xD;&#xA;&#x9;bodyMaterial.specular.setRGB( 0.5, 0.5, 0.5 );&#xD;&#xA;&#x9;bodyMaterial.ambient.copy( bodyMaterial.color );&#xD;&#xA;&#xD;&#xA;&#x9;var glassMaterial = new THREE.MeshPhongMaterial( { color: 0x0, specular: 0xFFFFFF, shininess: 100, opacity: 0.3, transparent: true } );&#xD;&#xA;&#x9;glassMaterial.ambient.copy( glassMaterial.color );&#xD;&#xA;&#xD;&#xA;&#x9;var legMaterial = new THREE.MeshPhongMaterial( { shininess: 4 } );&#xD;&#xA;&#x9;legMaterial.color.setHex( 0xAdA79b );&#xD;&#xA;&#x9;legMaterial.specular.setRGB( 0.5, 0.5, 0.5 );&#xD;&#xA;&#x9;legMaterial.ambient.copy( legMaterial.color );&#xD;&#xA;&#xD;&#xA;&#x9;var footMaterial = new THREE.MeshPhongMaterial( { color: 0x960f0b, shininess: 30 } );&#xD;&#xA;&#x9;footMaterial.specular.setRGB( 0.5, 0.5, 0.5 );&#xD;&#xA;&#x9;footMaterial.ambient.copy( footMaterial.color );&#xD;&#xA;&#xD;&#xA;&#x9;var crossbarMaterial = new THREE.MeshPhongMaterial( { color: 0x808080, specular: 0xFFFFFF, shininess: 400 } );&#xD;&#xA;&#x9;crossbarMaterial.ambient.copy( crossbarMaterial.color );&#xD;&#xA;&#x9;var eyeMaterial = new THREE.MeshPhongMaterial( { color: 0x000000, specular: 0x303030, shininess: 4 } );&#xD;&#xA;&#x9;eyeMaterial.ambient.copy( eyeMaterial.color );&#xD;&#xA;&#xD;&#xA;&#x9;var sphere, cylinder, cube;&#xD;&#xA;&#xD;&#xA;&#x9;var bevelRadius = 1.9;&#x9;// TODO: 2.0 會造成幾何問題&#xD;&#xA;&#xD;&#xA;&#x9;// 建模&#xD;&#xA;&#x9;// 基底&#xD;&#xA;&#x9;cube = new THREE.Mesh(&#xD;&#xA;&#x9;&#x9;new THREE.BeveledBlockGeometry( 20&amp;#43;64&amp;#43;110, 4, 2*77&amp;#43;12, bevelRadius ), footMaterial );&#xD;&#xA;&#x9;cube.position.x = -45;&#x9;// (20&amp;#43;32) - 寬度的一半 (20&amp;#43;64&amp;#43;110)/2&#xD;&#xA;&#x9;cube.position.y = 4/2;&#x9;// 高的的一半&#xD;&#xA;&#x9;cube.position.z = 0;&#x9;// 中心在原點&#xD;&#xA;&#x9;scene.add( cube );&#xD;&#xA;&#xD;&#xA;&#x9;// 腳掌&#xD;&#xA;&#x9;cube = new THREE.Mesh(&#xD;&#xA;&#x9;&#x9;new THREE.BeveledBlockGeometry( 20&amp;#43;64&amp;#43;110, 52, 6, bevelRadius ), footMaterial );&#xD;&#xA;&#x9;cube.position.x = -45;&#x9;// (20&amp;#43;32) - 寬度的一半 (20&amp;#43;64&amp;#43;110)/2&#xD;&#xA;&#x9;cube.position.y = 52/2;&#x9;// 高的的一半&#xD;&#xA;&#x9;cube.position.z = 77 &amp;#43; 6/2;&#x9;// 偏移 77 &amp;#43; 深度的一半 6/2&#xD;&#xA;&#x9;scene.add( cube );&#xD;&#xA;&#xD;&#xA;&#x9;cube = new THREE.Mesh(&#xD;&#xA;&#x9;&#x9;new THREE.BeveledBlockGeometry( 20&amp;#43;64&amp;#43;110, 52, 6, bevelRadius ), footMaterial );&#xD;&#xA;&#x9;cube.position.x = -45;&#x9;// (20&amp;#43;32) - 寬度的一半 (20&amp;#43;64&amp;#43;110)/2&#xD;&#xA;&#x9;cube.position.y = 52/2;&#x9;// 高的的一半&#xD;&#xA;&#x9;cube.position.z = -(77 &amp;#43; 6/2);&#x9;// 負的偏移 77 &amp;#43; 深度的一半 6/2&#xD;&#xA;&#x9;scene.add( cube );&#xD;&#xA;&#xD;&#xA;&#x9;cube = new THREE.Mesh(&#xD;&#xA;&#x9;&#x9;new THREE.BeveledBlockGeometry( 64, 104, 6, bevelRadius ), footMaterial );&#xD;&#xA;&#x9;cube.position.x = 0;&#x9;// X 方向在原點&#xD;&#xA;&#x9;cube.position.y = 104/2;&#xD;&#xA;&#x9;cube.position.z = 77 &amp;#43; 6/2;&#x9;// 負的偏移 77 &amp;#43; 深度的一半 6/2&#xD;&#xA;&#x9;scene.add( cube );&#xD;&#xA;&#xD;&#xA;&#x9;cube = new THREE.Mesh(&#xD;&#xA;&#x9;&#x9;new THREE.BeveledBlockGeometry( 64, 104, 6, bevelRadius ), footMaterial );&#xD;&#xA;&#x9;cube.position.x = 0;&#x9;// X 方向在原點&#xD;&#xA;&#x9;cube.position.y = 104/2;&#xD;&#xA;&#x9;cube.position.z = -(77 &amp;#43; 6/2);&#x9;// 負的偏移 77 &amp;#43; 深度的一半 6/2&#xD;&#xA;&#x9;scene.add( cube );&#xD;&#xA;&#xD;&#xA;&#x9;// 腳&#xD;&#xA;&#x9;cube = new THREE.Mesh(&#xD;&#xA;&#x9;&#x9;new THREE.BeveledBlockGeometry( 60, 282&amp;#43;4, 4, bevelRadius ), legMaterial );&#xD;&#xA;&#x9;cube.position.x = 0;&#x9;// X 方向在原點&#xD;&#xA;&#x9;cube.position.y = 104 &amp;#43; 282/2 - 2;&#xD;&#xA;&#x9;cube.position.z = 77 &amp;#43; 6/2;&#x9;// 負的偏移 77 &amp;#43; 深度的一半 6/2&#xD;&#xA;&#x9;scene.add( cube );&#xD;&#xA;&#xD;&#xA;&#x9;cube = new THREE.Mesh(&#xD;&#xA;&#x9;&#x9;new THREE.BeveledBlockGeometry( 60, 282&amp;#43;4, 4, bevelRadius ), legMaterial );&#xD;&#xA;&#x9;cube.position.x = 0;&#x9;// X 方向在原點&#xD;&#xA;&#x9;cube.position.y = 104 &amp;#43; 282/2 - 2;&#xD;&#xA;&#x9;cube.position.z = -(77 &amp;#43; 6/2);&#x9;// 負的偏移 77 &amp;#43; 深度的一半 6/2&#xD;&#xA;&#x9;scene.add( cube );&#xD;&#xA;&#xD;&#xA;&#x9;// 身體&#xD;&#xA;&#x9;sphere = new THREE.Mesh(&#xD;&#xA;&#x9;&#x9;new THREE.SphereGeometry( 104/2, 32, 16, 0, Math.PI * 2, Math.PI/2, Math.PI ), bodyMaterial );&#xD;&#xA;&#x9;sphere.position.x = 0;&#xD;&#xA;&#x9;sphere.position.y = 160;&#xD;&#xA;&#x9;sphere.position.z = 0;&#xD;&#xA;&#x9;scene.add( sphere );&#xD;&#xA;&#xD;&#xA;&#x9;// 半球的上蓋&#xD;&#xA;&#x9;cylinder = new THREE.Mesh(&#xD;&#xA;&#x9;&#x9;new THREE.CylinderGeometry( 104/2, 104/2, 0, 32 ), bodyMaterial );&#xD;&#xA;&#x9;cylinder.position.x = 0;&#xD;&#xA;&#x9;cylinder.position.y = 160;&#xD;&#xA;&#x9;cylinder.position.z = 0;&#xD;&#xA;&#x9;scene.add( cylinder );&#xD;&#xA;&#xD;&#xA;&#x9;cylinder = new THREE.Mesh(&#xD;&#xA;&#x9;&#x9;new THREE.CylinderGeometry( 12/2, 12/2, 390 - 100, 32 ), bodyMaterial );&#xD;&#xA;&#x9;cylinder.position.x = 0;&#xD;&#xA;&#x9;cylinder.position.y = 160 &amp;#43; 390/2 - 100;&#xD;&#xA;&#x9;cylinder.position.z = 0;&#xD;&#xA;&#x9;scene.add( cylinder );&#xD;&#xA;&#xD;&#xA;&#x9;// 玻璃&#xD;&#xA;&#x9;sphere = new THREE.Mesh(&#xD;&#xA;&#x9;&#x9;new THREE.SphereGeometry( 116/2, 32, 16 ), glassMaterial );&#xD;&#xA;&#x9;sphere.position.x = 0;&#xD;&#xA;&#x9;sphere.position.y = 160;&#xD;&#xA;&#x9;sphere.position.z = 0;&#xD;&#xA;&#x9;scene.add( sphere );&#xD;&#xA;&#xD;&#xA;&#x9;cylinder = new THREE.Mesh(&#xD;&#xA;&#x9;&#x9;new THREE.CylinderGeometry( 24/2, 24/2, 390, 32 ), glassMaterial );&#xD;&#xA;&#x9;cylinder.position.x = 0;&#xD;&#xA;&#x9;cylinder.position.y = 160 &amp;#43; 390/2;&#xD;&#xA;&#x9;cylinder.position.z = 0;&#xD;&#xA;&#x9;scene.add( cylinder );&#xD;&#xA;&#xD;&#xA;&#x9;// 頭&#xD;&#xA;&#x9;sphere = new THREE.Mesh(&#xD;&#xA;&#x9;&#x9;new THREE.SphereGeometry( 104/2, 32, 16 ), headMaterial );&#xD;&#xA;&#x9;sphere.position.x = 0;&#xD;&#xA;&#x9;sphere.position.y = 160 &amp;#43; 390;&#xD;&#xA;&#x9;sphere.position.z = 0;&#xD;&#xA;&#x9;scene.add( sphere );&#xD;&#xA;&#xD;&#xA;&#x9;// 帽子&#xD;&#xA;&#x9;cylinder = new THREE.Mesh(&#xD;&#xA;&#x9;&#x9;new THREE.CylinderGeometry( 142/2, 142/2, 10, 32 ), hatMaterial );&#xD;&#xA;&#x9;cylinder.position.x = 0;&#xD;&#xA;&#x9;cylinder.position.y = 160 &amp;#43; 390 &amp;#43; 40 &amp;#43; 10/2;&#xD;&#xA;&#x9;cylinder.position.z = 0;&#xD;&#xA;&#x9;scene.add( cylinder );&#xD;&#xA;&#xD;&#xA;&#x9;cylinder = new THREE.Mesh(&#xD;&#xA;&#x9;&#x9;new THREE.CylinderGeometry( 80/2, 80/2, 70, 32 ), hatMaterial );&#xD;&#xA;&#x9;cylinder.position.x = 0;&#xD;&#xA;&#x9;cylinder.position.y = 160 &amp;#43; 390 &amp;#43; 40 &amp;#43; 10 &amp;#43; 70/2;&#xD;&#xA;&#x9;cylinder.position.z = 0;&#xD;&#xA;&#x9;scene.add( cylinder );&#xD;&#xA;&#xD;&#xA;&#x9;// 橫桿&#xD;&#xA;&#x9;cylinder = new THREE.Mesh(&#xD;&#xA;&#x9;&#x9;new THREE.CylinderGeometry( 5, 5, 200, 32 ), crossbarMaterial );&#xD;&#xA;&#x9;cylinder.position.set( 0, 360, 0 );&#xD;&#xA;&#x9;cylinder.rotation.x = 90 * Math.PI / 180.0;&#xD;&#xA;&#x9;scene.add( cylinder );&#xD;&#xA;&#xD;&#xA;&#x9;// 鼻子&#xD;&#xA;&#x9;cylinder = new THREE.Mesh(&#xD;&#xA;&#x9;&#x9;new THREE.CylinderGeometry( 6, 14, 70, 32 ), headMaterial );&#xD;&#xA;&#x9;cylinder.position.set( -70, 530, 0 );&#xD;&#xA;&#x9;cylinder.rotation.z = 90 * Math.PI / 180.0;&#xD;&#xA;&#x9;scene.add( cylinder );&#xD;&#xA;&#xD;&#xA;&#x9;// 眼睛&#xD;&#xA;&#x9;var sphGeom = new THREE.SphereGeometry( 10, 32, 16 );&#xD;&#xA;&#xD;&#xA;&#x9;// 左眼&#xD;&#xA;&#x9;sphere = new THREE.Mesh( sphGeom, eyeMaterial );&#xD;&#xA;&#x9;sphere.position.set( -48, 560, 0 );&#xD;&#xA;&#x9;var eye = new THREE.Object3D();&#xD;&#xA;&#x9;eye.add( sphere );&#xD;&#xA;&#x9;eye.rotation.y = 20 * Math.PI / 180.0;&#xD;&#xA;&#x9;scene.add( eye );&#xD;&#xA;&#xD;&#xA;&#x9;// 右眼&#xD;&#xA;&#x9;sphere = new THREE.Mesh( sphGeom, eyeMaterial );&#xD;&#xA;&#x9;sphere.position.set( -48, 560, 0 );&#xD;&#xA;&#x9;eye = new THREE.Object3D();&#xD;&#xA;&#x9;eye.add( sphere );&#xD;&#xA;&#x9;eye.rotation.y = -20 * Math.PI / 180.0;&#xD;&#xA;&#x9;scene.add( eye );&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function init() {&#xD;&#xA;&#x9;var canvasWidth = window.innerWidth;&#xD;&#xA;&#x9;var canvasHeight = window.innerHeight;&#xD;&#xA;&#xD;&#xA;&#x9;// RENDERER&#xD;&#xA;&#x9;renderer = new THREE.WebGLRenderer( { antialias: true } );&#xD;&#xA;&#x9;renderer.gammaInput = true;&#xD;&#xA;&#x9;renderer.gammaOutput = true;&#xD;&#xA;&#x9;renderer.setSize(canvasWidth, canvasHeight);&#xD;&#xA;&#x9;renderer.setClearColorHex( 0xAAAAAA, 1.0 );&#xD;&#xA;&#xD;&#xA;&#x9;// 攝影機&#xD;&#xA;&#x9;camera = new THREE.PerspectiveCamera( 35, canvasWidth/ canvasHeight, 1, 4000 );&#xD;&#xA;&#x9;camera.position.set( -1160, 350, -600 );&#xD;&#xA;&#xD;&#xA;&#x9;// 控制&#xD;&#xA;&#x9;cameraControls = new THREE.OrbitAndPanControls(camera, renderer.domElement);&#xD;&#xA;&#x9;cameraControls.target.set(0,310,0);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function drawHelpers() {&#xD;&#xA;&#x9;Coordinates.drawGround({size:10000});&#xD;&#xA;&#x9;Coordinates.drawGrid({size:10000,scale:0.01});&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function addToDOM() {&#xD;&#xA;&#x9;var container = document.getElementById(&amp;#39;container&amp;#39;);&#xD;&#xA;&#x9;var canvas = container.getElementsByTagName(&amp;#39;canvas&amp;#39;);&#xD;&#xA;&#x9;if (canvas.length&amp;gt;0) {&#xD;&#xA;&#x9;&#x9;container.removeChild(canvas[0]);&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;container.appendChild( renderer.domElement );&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function animate() {&#xD;&#xA;&#x9;window.requestAnimationFrame(animate);&#xD;&#xA;&#x9;render();&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function render() {&#xD;&#xA;&#x9;var delta = clock.getDelta();&#xD;&#xA;&#x9;cameraControls.update(delta);&#xD;&#xA;&#x9;renderer.render(scene, camera);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setupGui() {&#xD;&#xA;&#x9;effectController = {&#xD;&#xA;&#x9;&#x9;azimuth: 160,&#xD;&#xA;&#x9;&#x9;altitude: 60&#xD;&#xA;&#x9;};&#xD;&#xA;&#x9;var gui = new dat.GUI();&#xD;&#xA;&#x9;gui.add( effectController, &amp;#34;azimuth&amp;#34;, 0.0, 360.0 ).name(&amp;#34;方位角&amp;#34;);&#xD;&#xA;&#x9;gui.add( effectController, &amp;#34;altitude&amp;#34;, -90.0, 90.0 ).name(&amp;#34;高度&amp;#34;);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;document.addEventListener(&amp;#34;DOMContentLoaded&amp;#34;, function () {&#xD;&#xA;&#x9;try {&#xD;&#xA;&#x9;&#x9;init();&#xD;&#xA;&#x9;&#x9;fillScene();&#xD;&#xA;&#x9;&#x9;setupGui();&#xD;&#xA;&#x9;&#x9;drawHelpers();&#xD;&#xA;&#x9;&#x9;addToDOM();&#xD;&#xA;&#x9;&#x9;animate();&#xD;&#xA;&#x9;} catch(e) {&#xD;&#xA;&#x9;&#x9;var errorReport = &amp;#34;你的程式遇到不可復原的錯誤，無法繪製 Canvas。錯誤是：&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;&amp;#34;;&#xD;&#xA;&#x9;&#x9;$(&amp;#39;#container&amp;#39;).append(errorReport&amp;#43;e);&#xD;&#xA;&#x9;}&#xD;&#xA;})&#xD;&#xA;&lt;/textarea&gt;&#xD;&#xA;    &lt;/form&gt;&#xD;&#xA;    &lt;iframe id=&#34;preview&#34; src=&#34;about:blank&#34; style=&#34;flex-grow: 1&#34;&gt;&lt;/iframe&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&lt;/body&gt;&#xD;&#xA;&#xD;&#xA;&lt;/html&gt;</description>
    </item>
    <item>
      <title>03A 旋轉傾斜式燈控制（解答）</title>
      <link>https://www.chunfuchao.com/cs291/lesson-14/03a-swivel-and-tilt-light-control/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://www.chunfuchao.com/cs291/lesson-14/03a-swivel-and-tilt-light-control/</guid>
      <description>&lt;iframe id=&#34;video&#34; width=&#34;100%&#34; height=&#34;400&#34; src=&#34;https://www.youtube.com/embed/DBtFImUZYDA?cc_load_policy=0&#34; frameborder=&#34;0&#34; allowfullscreen=&#34;true&#34;&gt;&#xD;&#xA;&lt;/iframe&gt;&#xD;&#xA;&lt;script src=&#34;https://www.chunfuchao.com/js/youtube.external.subtitle.min.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://www.chunfuchao.com/js/subtitles.parser.min.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://www.chunfuchao.com/js/loadsrt.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;  loadSRT(&#39;/cs291/srt/Lesson 14\/03A Swivel and Tilt Light Control - Interactive 3D Graphics-DBtFImUZYDA.srt&#39;, function(subtitles) {&#xD;&#xA;    var youtubeExternalSubtitle = new YoutubeExternalSubtitle.Subtitle(document.getElementById(&#39;video&#39;), subtitles);&#xD;&#xA;  });&#xD;&#xA;&lt;/script&gt;&#xA;&lt;p&gt;&lt;strong&gt;解答：&lt;/strong&gt; 將以下加到 &lt;code&gt;render()&lt;/code&gt; &lt;code&gt;renderer.render&lt;/code&gt; 之前：&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// 仰角&#xD;&#xA;light.position.y = Math.sin( effectController.altitude * Math.PI/180.0 );&#xD;&#xA;// 方位角&#xD;&#xA;var length = Math.sqrt(1 - light.position.y * light.position.y);&#xD;&#xA;light.position.x = length * Math.cos( effectController.azimuth * Math.PI/180.0 );&#xD;&#xA;light.position.z = length * Math.sin( effectController.azimuth * Math.PI/180.0 );&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;影片中的解答有個 bug &lt;code&gt;var length&lt;/code&gt; 一行少了 &lt;code&gt;Math.sqrt&lt;/code&gt;，這裡的程式才是對的。&lt;em&gt;（感謝 Sven Mika 指正）&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>04 光的屬性</title>
      <link>https://www.chunfuchao.com/cs291/lesson-14/04-light-characteristics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://www.chunfuchao.com/cs291/lesson-14/04-light-characteristics/</guid>
      <description>&lt;iframe id=&#34;video&#34; width=&#34;100%&#34; height=&#34;400&#34; src=&#34;https://www.youtube.com/embed/KQGkoKF7JCI?cc_load_policy=0&#34; frameborder=&#34;0&#34; allowfullscreen=&#34;true&#34;&gt;&#xD;&#xA;&lt;/iframe&gt;&#xD;&#xA;&lt;script src=&#34;https://www.chunfuchao.com/js/youtube.external.subtitle.min.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://www.chunfuchao.com/js/subtitles.parser.min.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://www.chunfuchao.com/js/loadsrt.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;  loadSRT(&#39;/cs291/srt/Lesson 14\/04 Light Characteristics - Interactive 3D Graphics-KQGkoKF7JCI.srt&#39;, function(subtitles) {&#xD;&#xA;    var youtubeExternalSubtitle = new YoutubeExternalSubtitle.Subtitle(document.getElementById(&#39;video&#39;), subtitles);&#xD;&#xA;  });&#xD;&#xA;&lt;/script&gt;&#xA;&lt;p&gt;Three.js 函式庫的 &lt;code&gt;AmbientLight&lt;/code&gt; API 在課程錄製後有了改變。請參考 &lt;a href=&#34;http://www.realtimerendering.com/three.js-r56/docs/index.html&#34;&gt;舊版文件&lt;/a&gt; 以作答。&lt;/p&gt;</description>
    </item>
    <item>
      <title>04A 光的屬性（解答）</title>
      <link>https://www.chunfuchao.com/cs291/lesson-14/04a-light-characteristics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://www.chunfuchao.com/cs291/lesson-14/04a-light-characteristics/</guid>
      <description>&lt;iframe id=&#34;video&#34; width=&#34;100%&#34; height=&#34;400&#34; src=&#34;https://www.youtube.com/embed/wj0HPXKnHZI?cc_load_policy=0&#34; frameborder=&#34;0&#34; allowfullscreen=&#34;true&#34;&gt;&#xD;&#xA;&lt;/iframe&gt;&#xD;&#xA;&lt;script src=&#34;https://www.chunfuchao.com/js/youtube.external.subtitle.min.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://www.chunfuchao.com/js/subtitles.parser.min.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://www.chunfuchao.com/js/loadsrt.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;  loadSRT(&#39;/cs291/srt/Lesson 14\/04A Light Characteristics - Interactive 3D Graphics-wj0HPXKnHZI.srt&#39;, function(subtitles) {&#xD;&#xA;    var youtubeExternalSubtitle = new YoutubeExternalSubtitle.Subtitle(document.getElementById(&#39;video&#39;), subtitles);&#xD;&#xA;  });&#xD;&#xA;&lt;/script&gt;&#xA;&lt;p&gt;這個課程使用的 Three.js 版本，&lt;code&gt;AmbientLight&lt;/code&gt; 沒有強度，所以那格沒有勾。其他的答案應該一樣。&lt;/p&gt;</description>
    </item>
    <item>
      <title>05 消失的聚光燈</title>
      <link>https://www.chunfuchao.com/cs291/lesson-14/05-the-disappearing-spotlight/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://www.chunfuchao.com/cs291/lesson-14/05-the-disappearing-spotlight/</guid>
      <description>&lt;iframe id=&#34;video&#34; width=&#34;100%&#34; height=&#34;400&#34; src=&#34;https://www.youtube.com/embed/kJs5AHruxTk?cc_load_policy=0&#34; frameborder=&#34;0&#34; allowfullscreen=&#34;true&#34;&gt;&#xD;&#xA;&lt;/iframe&gt;&#xD;&#xA;&lt;script src=&#34;https://www.chunfuchao.com/js/youtube.external.subtitle.min.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://www.chunfuchao.com/js/subtitles.parser.min.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://www.chunfuchao.com/js/loadsrt.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;  loadSRT(&#39;/cs291/srt/Lesson 14\/05 The Disappearing Spotlight - Interactive 3D Graphics-kJs5AHruxTk.srt&#39;, function(subtitles) {&#xD;&#xA;    var youtubeExternalSubtitle = new YoutubeExternalSubtitle.Subtitle(document.getElementById(&#39;video&#39;), subtitles);&#xD;&#xA;  });&#xD;&#xA;&lt;/script&gt;</description>
    </item>
    <item>
      <title>05A 消失的聚光燈（解答）</title>
      <link>https://www.chunfuchao.com/cs291/lesson-14/05a-the-disappearing-spotlight/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://www.chunfuchao.com/cs291/lesson-14/05a-the-disappearing-spotlight/</guid>
      <description>&lt;iframe id=&#34;video&#34; width=&#34;100%&#34; height=&#34;400&#34; src=&#34;https://www.youtube.com/embed/Z6kiRugtnyA?cc_load_policy=0&#34; frameborder=&#34;0&#34; allowfullscreen=&#34;true&#34;&gt;&#xD;&#xA;&lt;/iframe&gt;&#xD;&#xA;&lt;script src=&#34;https://www.chunfuchao.com/js/youtube.external.subtitle.min.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://www.chunfuchao.com/js/subtitles.parser.min.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://www.chunfuchao.com/js/loadsrt.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;  loadSRT(&#39;/cs291/srt/Lesson 14\/05A The Disappearing Spotlight - Interactive 3D Graphics-Z6kiRugtnyA.srt&#39;, function(subtitles) {&#xD;&#xA;    var youtubeExternalSubtitle = new YoutubeExternalSubtitle.Subtitle(document.getElementById(&#39;video&#39;), subtitles);&#xD;&#xA;  });&#xD;&#xA;&lt;/script&gt;</description>
    </item>
  </channel>
</rss>
