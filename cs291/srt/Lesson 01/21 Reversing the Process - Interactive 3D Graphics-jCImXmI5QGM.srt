1
00:00:00,190 --> 00:00:03,650
我們已經見識過要追蹤場景裡所有光子有多麼昂貴

2
00:00:03,706 --> 00:00:08,383
為了避免這麼龐大的計算量，電腦圖學做了一些簡化

3
00:00:08,518 --> 00:00:12,914
首先，我們只需要抵達攝影機的光子來計算圖像

4
00:00:12,986 --> 00:00:15,335
這些光子才是我們想計算的

5
00:00:15,422 --> 00:00:19,827
我們知道能看到哪些物件，但怎麼事先知道哪些光子有用？

6
00:00:19,899 --> 00:00:23,509
每個光子由光源出發，但我們不知道最後到哪裡

7
00:00:23,538 --> 00:00:25,079
所以我們反轉整個過程

8
00:00:25,121 --> 00:00:29,726
與其從光源發射光子，我們反過來從眼睛發射射線

9
00:00:29,750 --> 00:00:31,967
通過每一個像素來「看」外面有什麼

10
00:00:32,046 --> 00:00:37,085
當某個表面被「看到」，我們直接計算各光源對它的作用

11
00:00:37,124 --> 00:00:41,341
把每個光源的作用加總，我們就得到這個表面樣貌的合理近似

12
00:00:41,401 --> 00:00:44,887
另一個簡化可以用在這些光上：沒有東西阻擋光

13
00:00:44,932 --> 00:00:48,940
每個表面都可以被光照到，除非這個表面背向光源

14
00:00:48,965 --> 00:00:51,369
換句話說：沒有東西有影子

15
00:00:51,393 --> 00:00:53,909
這個簡化能替我們省下許多計算

16
00:00:54,003 --> 00:00:56,303
繪圖還能更加簡化

17
00:00:56,428 --> 00:01:01,407
舉例來說，你可以不管光把所有物件都畫上實色

18
00:01:01,478 --> 00:01:06,991
然而有沒有光的效果差別很大，光對真實感還有 3D 感有很大的貢獻

19
00:01:07,086 --> 00:01:10,246
來看看有跟沒有光的場景

20
00:01:10,349 --> 00:01:15,484
這裡有兩種極端
第一種極端是光子從光源到場景被詳盡地追蹤

21
00:01:15,555 --> 00:01:17,636
給我們接近真實的影像

22
00:01:17,670 --> 00:01:23,387
另一種極端只給我們物體可見的範圍還有概略的光照

23
00:01:23,426 --> 00:01:25,476
這種作法效果很假

24
00:01:25,580 --> 00:01:27,548
但是計算速度超快

25
00:01:27,596 --> 00:01:32,538
我們先從第二種極端開始，然後漸漸移除或修改化簡的部份

26
00:01:32,563 --> 00:01:36,571
使得結果更接近光子的行為，像是打出陰影

