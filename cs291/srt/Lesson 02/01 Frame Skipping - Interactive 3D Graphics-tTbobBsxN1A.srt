1
00:00:00,087 --> 00:00:03,895
如果你試過 FPS 的展示，可能會注意到某個奇怪的現象

2
00:00:03,920 --> 00:00:08,448
如果你將每秒 30 格往上調到 59 格

3
00:00:08,504 --> 00:00:13,170
左上角的影格率會是穩定的每格 32 毫秒

4
00:00:13,241 --> 00:00:18,698
當你來到每秒 60 格時會掉到每格 16 或 17 毫秒

5
00:00:18,730 --> 00:00:23,524
這是因為新的一格要等到舊的一格顯示出來才會開始計算

6
00:00:23,549 --> 00:00:26,849
舉例來說，假設一格圖像需要 12 毫秒的計算

7
00:00:26,880 --> 00:00:30,190
這在 60 FPS 每格最多 16.6 毫秒的要求內

8
00:00:30,215 --> 00:00:32,329
所以每一格都會展示新圖像

9
00:00:32,361 --> 00:00:37,805
如果圖像需要 21 毫秒計算，這比達到 60 FPS 要求的間隔還大

10
00:00:37,830 --> 00:00:41,064
有點像火車定時出發

11
00:00:41,142 --> 00:00:46,463
如果你錯過了這一格，就要等到下一格

12
00:00:46,502 --> 00:00:49,846
我們最快一秒能顯示 60 格

13
00:00:49,871 --> 00:00:55,299
所以當圖像花超過 1/60 秒計算，就會錯過第一格

14
00:00:55,355 --> 00:00:58,595
這讓實際有效的影格率降到 30

15
00:00:58,631 --> 00:01:01,357
因為每兩格才更新一次圖像

16
00:01:01,420 --> 00:01:06,127
情況不一定總是如此，需要看應用程式的實作

17
00:01:06,159 --> 00:01:10,629
這個問題假設新的一格會等舊的一格展示後才開始計算

18
00:01:10,709 --> 00:01:16,321
請問如果你剛好錯過每秒 30 格的更新時間，那有效的影格率是多少？

19
00:01:16,377 --> 00:01:23,722
換句話說，假設你計算的時間比 1/30 秒略高，則你展示圖像的頻率為何？

