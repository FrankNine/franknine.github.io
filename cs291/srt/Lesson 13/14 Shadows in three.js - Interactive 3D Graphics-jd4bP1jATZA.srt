1
00:00:00,001 --> 00:00:03,412
為場景開啟影子在 Three.js 還蠻直覺的

2
00:00:03,437 --> 00:00:07,306
在 renderer 物件啟動 Shadow Map，然後叫聚光燈投射影子

3
00:00:07,331 --> 00:00:11,202
各個物件有兩個選項，可以要投射影子或不投射影子

4
00:00:11,227 --> 00:00:14,196
要接受其他物件的影子或不接受

5
00:00:14,221 --> 00:00:21,193
舉例來說，像是地面不會投射影子，可以把它的投射影子選項關掉節省資源

6
00:00:21,218 --> 00:00:26,954
Three.js 的特性之一是你要替各個幾何設定 castShadow 和 receiveShadow

7
00:00:26,979 --> 00:00:31,828
如果一個 Object3D 包含三個網格，每個網格都要設定一次

8
00:00:31,853 --> 00:00:34,729
設定在 Object3D 上沒有作用

9
00:00:34,754 --> 00:00:38,384
這其實是場景圖系統一直遇到的糾結，哪邊為準？

10
00:00:38,409 --> 00:00:44,015
如果我同時在父物件跟子物件設定屬性，哪個說了算？

11
00:00:44,040 --> 00:00:47,664
Three.js 讓父物件完全沒有影響來迴避這個問題

12
00:00:47,689 --> 00:00:50,860
要遍歷所有物件設定開關非常瑣碎

13
00:00:50,884 --> 00:00:53,199
尤其像是喝水鳥這種物件

14
00:00:53,224 --> 00:00:58,221
幸好 Three.js 有遍歷用的方法，會經過物件還有底下所有物件

15
00:00:58,246 --> 00:01:01,332
子物件，子物件的子物件，對它們做你要的操作

16
00:01:01,357 --> 00:01:02,744
這是我用的片段

17
00:01:02,769 --> 00:01:07,935
這段程式打開喝水鳥所有零件投射影子跟接受影子的開關

18
00:01:07,960 --> 00:01:09,654
其實做了一點多餘的功

19
00:01:09,679 --> 00:01:13,831
在沒有網格的父物件設定開關是沒有用的

20
00:01:13,856 --> 00:01:18,354
這是改良的程式，使用 JavaScript 來判斷物件有沒有網格

21
00:01:18,379 --> 00:01:21,484
如果有，影子的開關就有意義，我們就設定

22
00:01:21,509 --> 00:01:25,618
試著打開有聚光燈的喝水鳥場景的影子

23
00:01:25,643 --> 00:01:29,642
我好心地設定了喝水鳥投射跟接受影子的開關

24
00:01:29,667 --> 00:01:31,190
但沒有動地面

25
00:01:31,215 --> 00:01:35,292
我把在哪裡呼叫開啟陰影的問題留給你

26
00:01:35,317 --> 00:01:39,278
在這個作業裡我還加了一個小球代表光源

27
00:01:39,303 --> 00:01:41,452
拉遠會看到它在空中

28
00:01:41,477 --> 00:01:45,000
這麼做能方便你搞清楚光放在哪裡

