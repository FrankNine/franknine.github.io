1
00:00:00,031 --> 00:00:02,650
設想你晚上在房間裡，桌上有盞檯燈

2
00:00:02,674 --> 00:00:04,578
你掉了一枝鉛筆到桌子下

3
00:00:04,603 --> 00:00:10,459
你看得到鉛筆的原因是檯燈的光從牆壁、天花板之類的表面反彈

4
00:00:10,484 --> 00:00:13,838
有些許光跑到桌子下再進到你的眼

5
00:00:13,863 --> 00:00:18,984
我們不讓光隨距離平方衰減的原因之一是我們的光不會在場景中不斷反彈

6
00:00:19,008 --> 00:00:21,118
只會影響直接打到的物件

7
00:00:21,143 --> 00:00:25,815
因為不會反彈，所以光在我們的簡化系統中很快就消失了

8
00:00:25,840 --> 00:00:29,784
我們為了補償缺少這種間接照明（Indirect Illumination）的反射光

9
00:00:29,809 --> 00:00:32,500
加入了一個假的元素－環境光

10
00:00:32,524 --> 00:00:35,537
在 Three.js 我們用顏色設定這個光

11
00:00:35,562 --> 00:00:40,254
光的顏色乘上材質的環境光色得到最後的填充實色

12
00:00:40,279 --> 00:00:44,915
記得環境光色是 Three.js 材質的另一組顏色設定

13
00:00:44,940 --> 00:00:50,258
如果不設定預設是白色，環境光會為物件加上一點灰色

14
00:00:50,283 --> 00:00:54,310
灰色是可以接受，但是最好將環境光色設定成跟漫射顏色相同

15
00:00:54,335 --> 00:00:58,507
接著你能用環境光強度改變整個場景的感覺

