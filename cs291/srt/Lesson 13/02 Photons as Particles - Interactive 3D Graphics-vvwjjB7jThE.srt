1
00:00:00,001 --> 00:00:05,030
「光使事物正確」，我喜歡這段 Andrew Glassner 在 1980 年代創造的短語

2
00:00:05,055 --> 00:00:08,290
它精簡地捕捉到電腦圖學的本質

3
00:00:08,315 --> 00:00:12,815
當你越能判斷光在場景中的移動方式，你的結果就會越好

4
00:00:12,840 --> 00:00:17,055
我有稍微提過光如何在場景裡彈射，最後到達眼睛

5
00:00:17,080 --> 00:00:20,983
概念上是各個光源，又稱發射體（Emitter）發射出光子

6
00:00:21,008 --> 00:00:24,310
光子的命運是被吸收，或是反射

7
00:00:24,335 --> 00:00:28,253
物件會吸收光，事實上所有東西都會至少會吸收一點光

8
00:00:28,278 --> 00:00:31,959
即使是最高級的鏡子也無法反射 100% 的光

9
00:00:31,984 --> 00:00:34,990
數字可能介於 90% 到 95% 的範圍

10
00:00:35,015 --> 00:00:39,512
光在行進中可能被灰塵、水滴或是其他空氣中的粒子吸收

11
00:00:39,537 --> 00:00:42,133
也可能被半透明物件吸收

12
00:00:42,158 --> 00:00:46,739
這個簡化的光子模型忽略了像是偏振（Polarization）跟螢光（Fluorescence）效應

13
00:00:46,763 --> 00:00:49,298
但是在電腦圖學通常忽略沒有問題

14
00:00:49,323 --> 00:00:50,734
事情已經夠複雜了

15
00:00:50,759 --> 00:00:54,994
我們能精確地看到物件就是因為光子最終從物件抵達眼睛

16
00:00:55,019 --> 00:01:00,126
物件有不同顏色的原因是各自反射的光的波長分佈不同

17
00:01:00,151 --> 00:01:03,395
在電腦圖學我們能選擇要跟隨哪條光線路徑

18
00:01:03,420 --> 00:01:06,956
我們使用的到現在一直使用的兩條路徑是「光到物件」跟「物件到眼睛」

19
00:01:06,981 --> 00:01:09,189
我們對表面到眼的探討較多

20
00:01:09,214 --> 00:01:12,599
並且容許路徑上的透明過濾片改變顏色

