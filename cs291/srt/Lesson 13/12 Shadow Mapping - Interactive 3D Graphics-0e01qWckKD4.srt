1
00:00:00,001 --> 00:00:05,975
在希臘與埃及神話裡，藝術是有人在岩壁上描繪人的影子發明的

2
00:00:06,000 --> 00:00:08,447
影子給了場景真實感與實體感

3
00:00:08,472 --> 00:00:12,613
物件的影子強調了它與周遭的位置關係

4
00:00:12,638 --> 00:00:17,583
柵格化專注在從眼睛繪圖，所以要產生影子就要多費工

5
00:00:17,608 --> 00:00:20,624
其中一種熱門方法叫 Shadow Mapping

6
00:00:20,649 --> 00:00:25,300
這個演算法歷史悠久，最早由 Lance Williams 在 1978 描述

7
00:00:25,324 --> 00:00:28,212
概念是從光的角度繪製場景

8
00:00:28,237 --> 00:00:30,412
光看得到的就是亮的

9
00:00:30,437 --> 00:00:34,636
記得有人類大眼的螢火蟲嗎？這裡就是應用了它的答案

10
00:00:34,661 --> 00:00:38,474
如果光看不到表面，那個表面就是在影子中

11
00:00:38,499 --> 00:00:41,248
事實上最基本的演算法就只有這樣

12
00:00:41,273 --> 00:00:46,027
場景由光的角度繪製，在各像素上最接近的物件的距離被儲存下來

13
00:00:46,052 --> 00:00:49,786
因為要光看向某個方向且視野要有限

14
00:00:49,811 --> 00:00:53,135
通常套用 Shadow Mapping 的是類似聚光燈的光源

15
00:00:53,160 --> 00:00:56,710
聚光燈有指向性且視野範圍有限

16
00:00:56,735 --> 00:01:01,250
在 Three.js 只有聚光燈跟定向光能產生影子

17
00:01:01,275 --> 00:01:04,666
定向光要設定光張開的幅度多大

