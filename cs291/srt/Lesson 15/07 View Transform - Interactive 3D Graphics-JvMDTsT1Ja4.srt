1
00:00:00,001 --> 00:00:03,484
我們剛剛看到如何在世界座標位移旋轉攝影機

2
00:00:03,509 --> 00:00:07,972
如果我們施加這個矩陣 C 到攝影機上，則這攝影機會在世界中就定位

3
00:00:07,997 --> 00:00:10,694
但是我們想要的是相反的效果

4
00:00:10,719 --> 00:00:13,448
我們不想要攝影機相對於世界去做移動

5
00:00:13,473 --> 00:00:16,073
我們希望世界相對於攝影機移動

6
00:00:16,098 --> 00:00:18,937
想想發生了什麼事，場景中有些物件

7
00:00:18,962 --> 00:00:22,110
可能施加了幾個模型座標變換

8
00:00:22,135 --> 00:00:24,740
這些物件現在都在世界座標空間

9
00:00:24,765 --> 00:00:28,346
現在要做的是將世界變換到攝影機的參考座標

10
00:00:28,371 --> 00:00:33,222
這裡有攝影機跟模型，假設我們沿著世界的 X 軸移動攝影機 5 單位

11
00:00:33,247 --> 00:00:39,279
以攝影機的角度，所有東西都減去世界座標 5 單位也會有正確的相對位置

12
00:00:39,304 --> 00:00:43,782
總之我們使用的是攝影機在世界定位的矩陣的反矩陣

13
00:00:43,807 --> 00:00:46,877
反轉基本上是說：一切都以我，攝影機為中心

14
00:00:46,902 --> 00:00:50,148
所有東西的定位都是相對於我

15
00:00:50,172 --> 00:00:53,159
這個反矩陣叫做視角矩陣（View Matrix）

16
00:00:53,184 --> 00:00:57,190
因為如此，視角矩陣有時寫成攝影機矩陣的反轉

17
00:00:57,215 --> 00:01:00,333
攝影機矩陣即移動攝影機到其世界座標的矩陣

18
00:01:00,358 --> 00:01:04,860
另一種思考視角座標變換的方式是當成最後一個模型矩陣

19
00:01:04,885 --> 00:01:10,619
M 矩陣代表將物件帶往世界座標的所有座標變換，即模型座標變換

20
00:01:10,644 --> 00:01:16,812
最後一個座標變換：矩陣 V 將物件從世界座標系變換到攝影機的參考座標

21
00:01:16,837 --> 00:01:19,574
如果你直接操作 WebGL 或是 OpenGL

22
00:01:19,599 --> 00:01:24,037
你會看到這兩個矩陣合併為單一矩陣稱為模型視角矩陣（Model-View Matrix）

23
00:01:24,062 --> 00:01:28,753
施加這個矩陣在物件上會將它直接從自己的模型空間變換到視角空間

