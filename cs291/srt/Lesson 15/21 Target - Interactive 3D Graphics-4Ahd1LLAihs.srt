1
00:00:00,001 --> 00:00:02,722
有許多在場景中移動攝影機的方式

2
00:00:02,747 --> 00:00:06,588
可以步行、飛行，可以看向一邊走向另一邊之類

3
00:00:06,613 --> 00:00:10,403
這裡我們向前看，但是向斜前走

4
00:00:10,428 --> 00:00:15,153
我通常將攝影機想成「以觀眾為中心」或是「以物件為中心」兩種模式之一

5
00:00:15,178 --> 00:00:18,688
以觀眾為中心時，觀眾在世界中移動

6
00:00:18,713 --> 00:00:24,564
以物件為中心時，有個特定物件被觀眾以各種角度觀察

7
00:00:24,589 --> 00:00:27,960
在這模式我們移動時將攝影機焦點專注在特定位置

8
00:00:27,985 --> 00:00:31,938
我們注視的位置在 Three.js 叫做目標（Target），其他系統亦同

9
00:00:31,963 --> 00:00:37,503
雖然我們不需要目標位置來建構 Three.js 裡各種矩陣

10
00:00:37,528 --> 00:00:40,232
目標比較是跟使用者意圖有關

11
00:00:40,257 --> 00:00:46,554
因為目標是很有用的概念，許多攝影機控制系統支援目標的概念

12
00:00:46,579 --> 00:00:49,909
要設定目標，我們使用 cameraControls 的 target 參數

13
00:00:49,934 --> 00:00:55,506
我們設定過這個參數，它提供攝影機看向的點，連帶設定了視角矩陣

14
00:00:55,531 --> 00:00:59,785
設定 cameraControls 的 target 不只設定了攝影機的視角座標變換

15
00:00:59,810 --> 00:01:02,952
你將攝影機指向這裡形成環視

16
00:01:02,977 --> 00:01:07,309
如果物體在移動，你可以逐格更新 target 達到跟拍的效果

