1
00:00:00,001 --> 00:00:03,169
乘法產生的四個值是 X, Y, Z 和 W

2
00:00:03,194 --> 00:00:06,740
它們叫做齊次坐標（Homogeneous Coordinate），被應用在投影上

3
00:00:06,765 --> 00:00:11,604
我們接下來將所有座標值都除以 W

4
00:00:11,629 --> 00:00:15,038
這叫透視除法（Prospective Divide）或是齊次除法（Homogeneous Divide）

5
00:00:15,063 --> 00:00:19,866
這三個點裡我們有像 (0, 0, -1, 1)

6
00:00:19,890 --> 00:00:21,742
除以 1 很簡單

7
00:00:21,767 --> 00:00:24,294
結果是 (0, 0, -1)

8
00:00:24,319 --> 00:00:30,211
除完後不需要寫出 W，因為 W 除 W 總是 1

9
00:00:30,236 --> 00:00:36,067
下一個點 W 是 11，所有座標除 11 是 (0, 1, 1)

10
00:00:36,092 --> 00:00:43,283
最後一個點稍微有趣一些，除以 W 結果是 (0, 0.67, 0.83)

11
00:00:43,308 --> 00:00:47,754
我在視角空間標出原來的點，右邊是新位置

12
00:00:47,779 --> 00:00:51,359
注意到負 Z 軸在視錐指向右邊

13
00:00:51,384 --> 00:00:54,008
除完的結果右邊是正 Z

14
00:00:54,033 --> 00:00:56,877
看看這些點如何座標變換的

15
00:00:56,902 --> 00:00:59,701
它們原本在視錐內或是邊上

16
00:00:59,726 --> 00:01:03,373
經過乘上投影矩陣跟除以 W

17
00:01:03,398 --> 00:01:06,420
結果是在 Normalized Device Coordinates

18
00:01:06,445 --> 00:01:11,233
任何 X, Y, Z 在 -1 到 1 的東西都在可見範圍內

19
00:01:11,258 --> 00:01:17,392
我們來看另一個例子，有三個在世界座標大小相同物件但其距離不同

20
00:01:17,417 --> 00:01:22,893
當我們座標變換到 Normalized Device Coordinates，靠近近平面的物件佔據螢幕比例差不多沒變

21
00:01:22,918 --> 00:01:29,405
即近的物件佔據在視錐視角佔據螢幕一半高，變換成在 NDC 空間占據一半高

22
00:01:29,430 --> 00:01:32,906
第二個物件較遠而變得較小

23
00:01:32,931 --> 00:01:38,524
第三個物件貼在視錐背面上，在 Normalized Device Coordinates 裡變最小

24
00:01:38,549 --> 00:01:42,247
你可能注意到第二個物件的深度變化

25
00:01:42,272 --> 00:01:44,975
它本來在中間結果往後移

26
00:01:45,000 --> 00:01:47,746
這蠻重要的我們等下會提

