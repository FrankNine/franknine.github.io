1
00:00:00,001 --> 00:00:05,157
我們來細看這個空間中的盒子如何就定位，內部又是如何定義的

2
00:00:05,182 --> 00:00:08,770
我們首先定義攝影機物件看向世界的負 Z 軸

3
00:00:08,795 --> 00:00:12,679
然後頂面面向正 Y 軸

4
00:00:12,704 --> 00:00:15,502
攝影機一開始在原點，和其他物件相同

5
00:00:15,527 --> 00:00:19,041
第一步是移動相機到我們想成像的地方

6
00:00:19,066 --> 00:00:21,536
我們也旋轉傾斜攝影機

7
00:00:21,561 --> 00:00:24,285
這跟我們調整物件面向沒有什麼差別

8
00:00:24,310 --> 00:00:28,141
我們定義旋轉跟平移讓攝影機到定位

9
00:00:28,166 --> 00:00:31,230
我們忽略縮放，主要是攝影機在空間的移動

10
00:00:31,255 --> 00:00:33,628
給攝影機位置不難

11
00:00:33,653 --> 00:00:38,289
要計算旋轉我們需要一個叫看向（Look At）的系統

12
00:00:38,313 --> 00:00:40,065
跟字面上的意思差不多

13
00:00:40,090 --> 00:00:43,416
定義一個目標位置來決定攝影機要看向哪裡

14
00:00:43,441 --> 00:00:48,689
如此就定義出攝影機參考坐標系的負 Z 軸方向，即它在世界的指向

15
00:00:48,714 --> 00:00:53,025
這裡我有個真的攝影機，甚至能拍照

16
00:00:53,050 --> 00:00:55,813
我的 Z 軸在這裡

17
00:00:55,838 --> 00:00:59,511
它告訴我該指向哪裡，但不幸的是我不知道哪邊是上

18
00:00:59,535 --> 00:01:02,001
還有一個自由度無法決定

19
00:01:02,026 --> 00:01:05,717
所以我們定義某種向上向量

20
00:01:05,742 --> 00:01:09,417
這個向量引導我們設定攝影機往上的方向

21
00:01:09,442 --> 00:01:15,051
在 Three.js 我們通常傳入像是 (0, 1, 0)，正 Y 軸作為向上向量

22
00:01:15,076 --> 00:01:17,427
有了視角向量跟向上向量

23
00:01:17,452 --> 00:01:21,409
我們要替攝影機參考座標定義一個矩陣

24
00:01:21,434 --> 00:01:26,644
Z 軸看向方向是已知，但還要求攝影機的 Y 與 X 軸

25
00:01:26,669 --> 00:01:29,360
有了大致的向上向量，我們這麼做：

26
00:01:29,385 --> 00:01:34,352
假設我們有攝影機指向某個方向，沿著其負 Z 軸看

27
00:01:34,377 --> 00:01:39,855
如果有向上方向，我們能求得攝影機向右的方向，即 X 軸的方向

28
00:01:39,880 --> 00:01:43,373
做法是求 Z 軸跟向上向量的外積

29
00:01:43,398 --> 00:01:47,320
現在我們確定了攝影機的 Z 軸跟 X 軸

30
00:01:47,345 --> 00:01:50,447
我們可以求取攝影機真正的往上向量，即攝影機的 Y 軸

31
00:01:50,472 --> 00:01:53,725
由 X 軸跟 Z 軸的外積算出

32
00:01:53,750 --> 00:01:58,555
記得兩向量的外積會得到垂直於兩者的向量

33
00:01:58,580 --> 00:02:01,825
這聽起來有點怪又麻煩但很常見

34
00:02:01,850 --> 00:02:04,686
這個可能是我最常用外積的情境

35
00:02:04,711 --> 00:02:08,730
這裡的目標是由一個看向的方向跟一個大致的向上向量作為提示

36
00:02:08,755 --> 00:02:10,869
我們能得到相機的參考座標系

37
00:02:10,894 --> 00:02:15,250
我們通常用世界座標的正 Y 軸作為提示，但其實要看情況

38
00:02:15,275 --> 00:02:19,060
假設我們是老鷹，往正下方看地面

39
00:02:19,084 --> 00:02:21,647
這是往世界座標 Y 軸的下方看

40
00:02:21,672 --> 00:02:25,105
這樣用世界座標的正 Y 軸做提示不合理

41
00:02:25,130 --> 00:02:28,155
我們定義攝影機看向的方向作負 Z 軸

42
00:02:28,180 --> 00:02:33,462
Y 軸作為攝影機向上方向，結果兩個在這裡互為相反方向

43
00:02:33,486 --> 00:02:35,066
這樣不是很有用

44
00:02:35,091 --> 00:02:40,357
這裡向上方向比較像是老鷹頭頂的方向，即其飛行方向

45
00:02:40,382 --> 00:02:45,357
現在向上方向跟看向方向不再平行，我們才能求取老鷹的參考座標

