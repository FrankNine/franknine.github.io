1
00:00:00,001 --> 00:00:02,682
透視攝影機是事情開始有趣的地方

2
00:00:02,707 --> 00:00:06,644
這個比較像真實的攝影機，較遠的東西看起來較小

3
00:00:06,669 --> 00:00:09,953
但它的流程跟之前都一樣

4
00:00:09,978 --> 00:00:14,274
內部跟正交攝影機一樣定義投影矩陣

5
00:00:14,299 --> 00:00:16,907
只是投影矩陣的構成不同

6
00:00:16,932 --> 00:00:21,757
在透視視角的世界，物件離觀察者越遠在成像上的大小就會越小

7
00:00:21,782 --> 00:00:28,728
另一種說法是如果有東西比較遠，如果在螢幕上想要跟較近的東西一樣大，就必須在世界空間中更大

8
00:00:28,752 --> 00:00:31,259
這是相似三角形的概念

9
00:00:31,284 --> 00:00:36,216
Y2 / Z2 會等於 Y1 / Z1，以此類推

10
00:00:36,241 --> 00:00:38,928
因此透視投影需要進行除法

11
00:00:38,953 --> 00:00:44,097
但是向量乘矩陣只是一堆內積，一連串乘法跟加法

12
00:00:44,122 --> 00:00:47,427
這是我們的點第四個座標發揮功能的地方

13
00:00:47,452 --> 00:00:50,848
直到現在這個值一直是 1

14
00:00:50,873 --> 00:00:56,252
一個點經過多次模型座標變換都不會把座標第四個元素變成 1 以外的值

15
00:00:56,277 --> 00:00:58,730
到了透視投影一切都會改變

