1
00:00:00,001 --> 00:00:04,372
現在你有機會搭建個樓梯，不是通往天國，但至少是金盃

2
00:00:04,396 --> 00:00:06,030
虛擬的金盃

3
00:00:06,031 --> 00:00:10,885
這個作業會帶你熟悉大部分 Three.js Geometry 物件的運作

4
00:00:10,910 --> 00:00:15,022
你大部分時間會花在修改這個 createStairs 函式

5
00:00:15,047 --> 00:00:18,563
我們會用 CubeGeometry 方法創造兩個盒子作為一階

6
00:00:18,588 --> 00:00:21,154
一個垂直、一個水平

7
00:00:21,179 --> 00:00:26,434
CubeGeometry 這個名字不好，因為 Cube（立方體）指的是邊長都相同

8
00:00:26,459 --> 00:00:28,924
BoxGeometry 可能會更好，但不是那麼嚴重

9
00:00:28,949 --> 00:00:31,932
這是定義我們階梯兩個幾何的程式

10
00:00:31,970 --> 00:00:36,579
使用 CubeGeometry 的方法是給定 X Y Z 大小

11
00:00:36,611 --> 00:00:40,714
這樣會創造一群三角形，形成一個盒子邊長跟你給定的一樣

12
00:00:40,739 --> 00:00:46,188
當你有了這個 Geometry 物件，可以重複利用多次來創造 Three.js 網格

13
00:00:46,213 --> 00:00:49,157
網格包含幾何跟材質

14
00:00:49,182 --> 00:00:52,876
你可以用 Mesh 物件上 position 屬性移動盒子

15
00:00:52,901 --> 00:00:55,344
在作業中你需要移動盒子

16
00:00:55,369 --> 00:00:58,234
當盒子創造出來時，中心在原點

17
00:00:58,234 --> 00:01:02,530
垂直那塊我們希望它底面切齊地面

18
00:01:02,555 --> 00:01:07,554
為了達到這樣的效果，我們將這塊往上移動半個高度

19
00:01:07,579 --> 00:01:09,983
這樣底面就會對齊地面

20
00:01:10,008 --> 00:01:13,871
這段程式創造了階梯平的一塊

21
00:01:13,896 --> 00:01:18,350
這次我們先往上移動它的半個厚度，讓它在地面上

22
00:01:18,375 --> 00:01:22,470
然後再移動垂直那塊的高度，讓它待在上面

23
00:01:22,494 --> 00:01:24,651
Z 軸位置也要修改

24
00:01:24,676 --> 00:01:27,312
先把一邊對齊原點

25
00:01:27,337 --> 00:01:32,271
然後往回拉一點讓它切齊垂直的一塊，像是這裡展示的

26
00:01:32,296 --> 00:01:33,518
都做到了嗎？

27
00:01:33,543 --> 00:01:36,264
執行程式你會看到階梯的兩塊

28
00:01:36,288 --> 00:01:38,721
垂直一塊停在地平面上

29
00:01:38,746 --> 00:01:41,152
還有一些程式功能

30
00:01:41,184 --> 00:01:43,283
這裡有些選項

31
00:01:43,307 --> 00:01:46,508
格線能幫助你了解各軸方向的距離

32
00:01:46,533 --> 00:01:48,846
每 100 單位有一條線

33
00:01:48,870 --> 00:01:52,155
格線平面有標記其座標軸

34
00:01:52,180 --> 00:01:55,285
因為場景裡 Y 是上

35
00:01:55,310 --> 00:01:57,754
X Z 格線在地平面上

36
00:01:57,779 --> 00:02:03,150
你的目標是造出一組階梯，一個在另一個上面直到抵達金盃

37
00:02:03,183 --> 00:02:05,095
完成後應該會這樣

38
00:02:05,120 --> 00:02:09,747
不要建造多餘的階梯，要不然我會要你付時間跟材料的錢

39
00:02:09,772 --> 00:02:11,325
作業也不會過

40
00:02:11,326 --> 00:02:15,999
我建議你先調整 position 參數，看看它對模型的作用

41
00:02:16,024 --> 00:02:20,119
將位置設定成 0 展示它以原點為中心的樣子

42
00:02:20,144 --> 00:02:22,119
你也該試著使用迴圈

43
00:02:22,144 --> 00:02:25,154
學會迴圈長期來說比用暴力解好

44
00:02:25,178 --> 00:02:27,714
當個聰明的程式設計師能替你省下很多工作

45
00:02:27,739 --> 00:02:32,451
使用程式產生像是樓梯之類的模型我們稱之為程式建模（Procedural Modeling）

46
00:02:32,476 --> 00:02:36,292
因為我不會建模，所以我喜歡這樣建模

47
00:02:36,317 --> 00:02:39,762
好處在於幾行程式就能成產生很複雜的模型

48
00:02:39,787 --> 00:02:43,710
這是個我在 25 年前製造叫 Sphere Flake 的模型

49
00:02:43,735 --> 00:02:47,501
差不多的時間皮克斯創造了《Red's Dream》短片

50
00:02:47,525 --> 00:02:49,485
主要也是用程式建模

51
00:02:49,510 --> 00:02:53,013
因為當時沒有好的建模軟體

52
00:02:53,038 --> 00:02:59,476
參考課程資料以獲得這個模型的程式，還有其他資源的連結

53
00:02:59,501 --> 00:03:02,613
但不要分心了，先把樓梯搭起來

