1
00:00:00,025 --> 00:00:05,609
3D 電腦圖學使用背面剔除（Backface Culling）這個有趣的概念加速

2
00:00:05,634 --> 00:00:09,368
想像你在看一個盒子，這是側面 2D 圖

3
00:00:09,393 --> 00:00:13,057
只有面向你的面可見

4
00:00:13,082 --> 00:00:17,266
這兩個背面不需要繪製

5
00:00:17,291 --> 00:00:20,786
多邊形最快的畫法就是不去畫

6
00:00:20,811 --> 00:00:26,010
背面剔除可以拿掉將近一半的面，是很划算的最佳化

7
00:00:26,035 --> 00:00:28,679
舉例來說，這是個現實存在的盒子

8
00:00:28,704 --> 00:00:35,424
不管從哪個角度，你都只能看到其中幾個面，剩下的可以移除

9
00:00:35,449 --> 00:00:38,154
任何實心物體都背面都可以剔除

10
00:00:38,179 --> 00:00:44,327
這個 V 字形的物件有兩個面面向攝影機，我標上綠色

11
00:00:44,352 --> 00:00:47,714
其他兩個面可以直接丟掉不用繼續處理

12
00:00:47,739 --> 00:00:52,315
這一小段綠色會被前面的面擋住

13
00:00:52,340 --> 00:00:55,117
這個遮擋我們交給 Z 緩衝區處理

14
00:00:55,141 --> 00:00:58,234
背面剔除可以開關

15
00:00:58,259 --> 00:01:02,403
但三角形是怎麼區分正面與背面的？

16
00:01:02,428 --> 00:01:05,223
三角形只有三個點的資料

17
00:01:05,247 --> 00:01:07,998
沒有額外的旗標紀錄面向

18
00:01:08,023 --> 00:01:13,064
決定正反面的是三個點投影到螢幕上後的順序

19
00:01:13,089 --> 00:01:18,341
在 WebGL，如果三個點是逆時鐘則是正面

20
00:01:18,366 --> 00:01:20,571
順時鐘則是背面

21
00:01:20,596 --> 00:01:24,381
像這樣逆時鐘叫做右手規則

22
00:01:24,406 --> 00:01:28,182
右手四指依序繞過三個點

23
00:01:28,207 --> 00:01:32,323
如果拇指指向你，則這是正面

