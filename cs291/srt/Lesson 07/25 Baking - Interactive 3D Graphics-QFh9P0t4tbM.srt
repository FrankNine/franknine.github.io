1
00:00:00,015 --> 00:00:05,332
一種節省 GPU 計算的方法是將打光烘焙（Bake）到表面上

2
00:00:05,357 --> 00:00:07,851
假設場景內有一些漫射材質物件

3
00:00:07,876 --> 00:00:12,458
有各自的材質顏色，表面法向量儲存在頂點

4
00:00:12,483 --> 00:00:17,320
如果我能計算這個物件的著色一次並儲存這顏色取代法向量

5
00:00:17,345 --> 00:00:20,078
我可以省下每格的打光計算

6
00:00:20,103 --> 00:00:24,728
跟之前的假設一樣，每盞燈都很遠但能改變方向

7
00:00:24,753 --> 00:00:28,167
就像太陽相對於地面的角度會隨時間改變一樣

8
00:00:28,192 --> 00:00:33,941
Vertex Shader 的輸入通常是物件的位置，即頂點的位置

9
00:00:33,973 --> 00:00:39,005
還有法向量跟要施加在表面的光源資訊

10
00:00:39,030 --> 00:00:43,165
輸出是螢幕空間位置跟 RGB 顏色值

11
00:00:43,190 --> 00:00:48,559
如果不儲存法向量，什麼條件下我能計算光照一次

12
00:00:48,584 --> 00:00:53,092
將 RGB 顏色儲存在各頂點？

13
00:00:53,116 --> 00:00:57,912
第一個選項是：物件的面向方向不變

14
00:00:57,937 --> 00:01:02,998
物件面向指的是物件是否旋轉了

15
00:01:03,023 --> 00:01:09,311
第二個是眼睛的位置跟光的方向不變

16
00:01:09,336 --> 00:01:13,479
如果光的方向與物件的面向不變

17
00:01:13,504 --> 00:01:18,668
最後是眼睛位置與物件面向不變

18
00:01:18,693 --> 00:01:24,820
所以以上哪一個答案可以讓你在頂點上預先計算 RGB 顏色

19
00:01:24,845 --> 00:01:31,293
而不用每格計算光照？

