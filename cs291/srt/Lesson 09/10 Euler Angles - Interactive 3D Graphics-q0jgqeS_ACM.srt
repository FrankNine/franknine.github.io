1
00:00:00,023 --> 00:00:03,738
注意到 Three.js 物件上有三個旋轉角度

2
00:00:03,763 --> 00:00:07,647
你可以沿 X, Y, Z 軸旋轉

3
00:00:07,672 --> 00:00:11,494
如果你在操作飛機，X 軸旋轉又稱為俯仰角（Pitch Angle）

4
00:00:11,518 --> 00:00:13,796
因為它上下改變飛機俯仰方向

5
00:00:13,821 --> 00:00:16,646
Y 軸旋轉又稱為偏航角（Yaw Angle）或航向角（Heading Angle）

6
00:00:16,670 --> 00:00:18,670
因為是飛機前進方向

7
00:00:18,708 --> 00:00:22,894
Z 軸旋轉是滾轉角（Roll Angle），代表你沿飛機自己的軸心旋轉多少

8
00:00:22,919 --> 00:00:27,941
某些其他領域裡這些角被稱為 X-Roll、Y-Roll 跟 Z-Roll

9
00:00:27,966 --> 00:00:31,577
這些角一起使用時被稱為尤拉角（Euler Angle）

10
00:00:31,602 --> 00:00:36,445
它們以 Leonhard Euler 命名，他是 18 世紀的瑞士數學家和物理學家

11
00:00:36,470 --> 00:00:39,653
他是史上最多產的數學家之一

12
00:00:39,678 --> 00:00:43,789
如果你看過常數 e，這是尤拉常數（Euler Number）

13
00:00:43,814 --> 00:00:47,121
尤拉也發明了用希臘字母 Σ 代表加總

14
00:00:47,146 --> 00:00:51,559
要細數他的成就需要一節課才講得完，但你大概知道就好

15
00:00:51,584 --> 00:00:54,060
尤拉有段名言我覺得總結了他

16
00:00:54,085 --> 00:00:59,238
當他右眼失明時，他說：現在我的干擾更少了

17
00:00:59,263 --> 00:01:05,276
在 Three.js 尤拉角在模型上的作用順序是 Z, Y, X

18
00:01:05,301 --> 00:01:08,862
不同的應用程式會有不同順序

19
00:01:08,862 --> 00:01:13,276
像是機器人領域你會看到 Z, X, Z 順序

20
00:01:13,306 --> 00:01:16,454
如果你轉動兩個以上的軸會發生什麼事？

21
00:01:16,479 --> 00:01:20,481
簡短的答案是參考座標會隨每次旋轉改變

22
00:01:20,505 --> 00:01:22,857
用看的會比解釋好懂

23
00:01:22,882 --> 00:01:27,559
我在這裡旋轉 X 軸，你可以看到飛機上下俯仰

24
00:01:27,584 --> 00:01:29,620
然後再加入 Y 旋轉

25
00:01:29,645 --> 00:01:36,170
注意到我們不是沿著世界的 Y 軸旋轉，而是在 X 旋轉後的 X-Z 平面旋轉

26
00:01:36,195 --> 00:01:41,878
換句話說，Y 軸旋轉是施加在飛機的參考座標，不是世界參考座標

27
00:01:41,903 --> 00:01:45,175
實際上所有旋轉都是用飛機的參考座標

28
00:01:45,200 --> 00:01:48,386
一開始的 X 旋轉只是剛好跟世界參考座標重疊

29
00:01:48,411 --> 00:01:52,809
Z 軸旋轉明顯也是相對於飛機當前面向

30
00:01:52,834 --> 00:01:55,300
沿著它自己的軸滾轉

31
00:01:55,325 --> 00:02:00,887
尤拉角用在飛行模擬器、機器人應用程式和手機應用程式都很方便

32
00:02:00,912 --> 00:02:04,691
它可以用來描述手機的面向

33
00:02:04,716 --> 00:02:09,854
但尤拉角也有其侷限，像是有環架鎖定（Gimbal Lock）問題

34
00:02:09,879 --> 00:02:15,203
假如我將 Y 軸旋轉設為 90 度

35
00:02:15,228 --> 00:02:20,993
你會發現現在 X 軸旋轉跟 Z 軸旋轉作用完全一樣

36
00:02:21,018 --> 00:02:27,557
在這個情況下我們失去自由度（Degree of Freedom），使我們無法轉離這個面向

37
00:02:27,582 --> 00:02:30,550
我希望你操作一下接下來的展示

38
00:02:30,575 --> 00:02:34,623
感受一下這樣設定轉向的優點與缺點

39
00:02:34,648 --> 00:02:39,825
一定要試將設定 Y 成 90 度，看看環架鎖定的作用

