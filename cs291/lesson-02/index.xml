<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lesson 02 問題集 on Northern Wind</title>
    <link>https://franknine.github.io/cs291/lesson-02/</link>
    <description>Recent content in Lesson 02 問題集 on Northern Wind</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    
	<atom:link href="https://franknine.github.io/cs291/lesson-02/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>01 跳格</title>
      <link>https://franknine.github.io/cs291/lesson-02/01-frame-skipping/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://franknine.github.io/cs291/lesson-02/01-frame-skipping/</guid>
      <description>var loadSRT = function(url, callback) { var httpRequest = new XMLHttpRequest(); httpRequest.onreadystatechange = function() { if (httpRequest.readyState === XMLHttpRequest.DONE) { var subtitles = parser.fromSrt(httpRequest.responseText, true); for (var i in subtitles) { subtitles[i] = { start : subtitles[i].startTime / 1000, end : subtitles[i].endTime / 1000, text : subtitles[i].text }; } callback(subtitles); } }; httpRequest.open(&#39;GET&#39;, url, true); httpRequest.send(null); }; loadSRT(&#39;/cs291/srt/Lesson 02\/01 Frame Skipping - Interactive 3D Graphics-tTbobBsxN1A.srt&#39;, function(subtitles) { var youtubeExternalSubtitle =</description>
    </item>
    
    <item>
      <title>01A 跳格（解答）</title>
      <link>https://franknine.github.io/cs291/lesson-02/01a-frame-skipping/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://franknine.github.io/cs291/lesson-02/01a-frame-skipping/</guid>
      <description>var loadSRT = function(url, callback) { var httpRequest = new XMLHttpRequest(); httpRequest.onreadystatechange = function() { if (httpRequest.readyState === XMLHttpRequest.DONE) { var subtitles = parser.fromSrt(httpRequest.responseText, true); for (var i in subtitles) { subtitles[i] = { start : subtitles[i].startTime / 1000, end : subtitles[i].endTime / 1000, text : subtitles[i].text }; } callback(subtitles); } }; httpRequest.open(&#39;GET&#39;, url, true); httpRequest.send(null); }; loadSRT(&#39;/cs291/srt/Lesson 02\/01A Frame Skipping - Interactive 3D Graphics-kuAfX0lP5Io.srt&#39;, function(subtitles) { var youtubeExternalSubtitle =</description>
    </item>
    
    <item>
      <title>03 FPS vs. 毫秒</title>
      <link>https://franknine.github.io/cs291/lesson-02/03-fps-vs.-milliseconds/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://franknine.github.io/cs291/lesson-02/03-fps-vs.-milliseconds/</guid>
      <description>var loadSRT = function(url, callback) { var httpRequest = new XMLHttpRequest(); httpRequest.onreadystatechange = function() { if (httpRequest.readyState === XMLHttpRequest.DONE) { var subtitles = parser.fromSrt(httpRequest.responseText, true); for (var i in subtitles) { subtitles[i] = { start : subtitles[i].startTime / 1000, end : subtitles[i].endTime / 1000, text : subtitles[i].text }; } callback(subtitles); } }; httpRequest.open(&#39;GET&#39;, url, true); httpRequest.send(null); }; loadSRT(&#39;/cs291/srt/Lesson 02\/03 FPS vs. MIlliseconds - Interactive 3D Graphics-GpYyjb5mz48.srt&#39;, function(subtitles) { var youtubeExternalSubtitle</description>
    </item>
    
    <item>
      <title>03A FPS vs. 毫秒（解答）</title>
      <link>https://franknine.github.io/cs291/lesson-02/03a-fps-vs.-milliseconds/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://franknine.github.io/cs291/lesson-02/03a-fps-vs.-milliseconds/</guid>
      <description>var loadSRT = function(url, callback) { var httpRequest = new XMLHttpRequest(); httpRequest.onreadystatechange = function() { if (httpRequest.readyState === XMLHttpRequest.DONE) { var subtitles = parser.fromSrt(httpRequest.responseText, true); for (var i in subtitles) { subtitles[i] = { start : subtitles[i].startTime / 1000, end : subtitles[i].endTime / 1000, text : subtitles[i].text }; } callback(subtitles); } }; httpRequest.open(&#39;GET&#39;, url, true); httpRequest.send(null); }; loadSRT(&#39;/cs291/srt/Lesson 02\/03A FPS vs. MIlliseconds - Interactive 3D Graphics-El4teW4oP_I.srt&#39;, function(subtitles) { var youtubeExternalSubtitle</description>
    </item>
    
    <item>
      <title>04 繪圖成本</title>
      <link>https://franknine.github.io/cs291/lesson-02/04-rendering-costs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://franknine.github.io/cs291/lesson-02/04-rendering-costs/</guid>
      <description>var loadSRT = function(url, callback) { var httpRequest = new XMLHttpRequest(); httpRequest.onreadystatechange = function() { if (httpRequest.readyState === XMLHttpRequest.DONE) { var subtitles = parser.fromSrt(httpRequest.responseText, true); for (var i in subtitles) { subtitles[i] = { start : subtitles[i].startTime / 1000, end : subtitles[i].endTime / 1000, text : subtitles[i].text }; } callback(subtitles); } }; httpRequest.open(&#39;GET&#39;, url, true); httpRequest.send(null); }; loadSRT(&#39;/cs291/srt/Lesson 02\/04 Rendering Costs - Interactive 3D Graphics-jOH6Vfjy13Q.srt&#39;, function(subtitles) { var youtubeExternalSubtitle =</description>
    </item>
    
    <item>
      <title>04A 繪圖成本（解答）</title>
      <link>https://franknine.github.io/cs291/lesson-02/04a-rendering-costs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://franknine.github.io/cs291/lesson-02/04a-rendering-costs/</guid>
      <description>var loadSRT = function(url, callback) { var httpRequest = new XMLHttpRequest(); httpRequest.onreadystatechange = function() { if (httpRequest.readyState === XMLHttpRequest.DONE) { var subtitles = parser.fromSrt(httpRequest.responseText, true); for (var i in subtitles) { subtitles[i] = { start : subtitles[i].startTime / 1000, end : subtitles[i].endTime / 1000, text : subtitles[i].text }; } callback(subtitles); } }; httpRequest.open(&#39;GET&#39;, url, true); httpRequest.send(null); }; loadSRT(&#39;/cs291/srt/Lesson 02\/04A Rendering Costs - Interactive 3D Graphics-fEdgtfum6_c.srt&#39;, function(subtitles) { var youtubeExternalSubtitle =</description>
    </item>
    
    <item>
      <title>05 螢火蟲</title>
      <link>https://franknine.github.io/cs291/lesson-02/05-firefly/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://franknine.github.io/cs291/lesson-02/05-firefly/</guid>
      <description>var loadSRT = function(url, callback) { var httpRequest = new XMLHttpRequest(); httpRequest.onreadystatechange = function() { if (httpRequest.readyState === XMLHttpRequest.DONE) { var subtitles = parser.fromSrt(httpRequest.responseText, true); for (var i in subtitles) { subtitles[i] = { start : subtitles[i].startTime / 1000, end : subtitles[i].endTime / 1000, text : subtitles[i].text }; } callback(subtitles); } }; httpRequest.open(&#39;GET&#39;, url, true); httpRequest.send(null); }; loadSRT(&#39;/cs291/srt/Lesson 02\/05 Firefly - Interactive 3D Graphics-oWeox4HjQEM.srt&#39;, function(subtitles) { var youtubeExternalSubtitle = new</description>
    </item>
    
    <item>
      <title>05A 螢火蟲（解答）</title>
      <link>https://franknine.github.io/cs291/lesson-02/05a-firefly/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://franknine.github.io/cs291/lesson-02/05a-firefly/</guid>
      <description>var loadSRT = function(url, callback) { var httpRequest = new XMLHttpRequest(); httpRequest.onreadystatechange = function() { if (httpRequest.readyState === XMLHttpRequest.DONE) { var subtitles = parser.fromSrt(httpRequest.responseText, true); for (var i in subtitles) { subtitles[i] = { start : subtitles[i].startTime / 1000, end : subtitles[i].endTime / 1000, text : subtitles[i].text }; } callback(subtitles); } }; httpRequest.open(&#39;GET&#39;, url, true); httpRequest.send(null); }; loadSRT(&#39;/cs291/srt/Lesson 02\/05A Firefly - Interactive 3D Graphics-Om2itwxjRbU.srt&#39;, function(subtitles) { var youtubeExternalSubtitle = new</description>
    </item>
    
    <item>
      <title>06 光場維度</title>
      <link>https://franknine.github.io/cs291/lesson-02/06-light-field-dimensions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://franknine.github.io/cs291/lesson-02/06-light-field-dimensions/</guid>
      <description>var loadSRT = function(url, callback) { var httpRequest = new XMLHttpRequest(); httpRequest.onreadystatechange = function() { if (httpRequest.readyState === XMLHttpRequest.DONE) { var subtitles = parser.fromSrt(httpRequest.responseText, true); for (var i in subtitles) { subtitles[i] = { start : subtitles[i].startTime / 1000, end : subtitles[i].endTime / 1000, text : subtitles[i].text }; } callback(subtitles); } }; httpRequest.open(&#39;GET&#39;, url, true); httpRequest.send(null); }; loadSRT(&#39;/cs291/srt/Lesson 02\/06 Light Field Dimensions - Interactive 3D Graphics-ucsWmvKKqaM.srt&#39;, function(subtitles) { var youtubeExternalSubtitle</description>
    </item>
    
    <item>
      <title>06A 光場維度（解答）</title>
      <link>https://franknine.github.io/cs291/lesson-02/06a-light-field-dimensions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://franknine.github.io/cs291/lesson-02/06a-light-field-dimensions/</guid>
      <description>var loadSRT = function(url, callback) { var httpRequest = new XMLHttpRequest(); httpRequest.onreadystatechange = function() { if (httpRequest.readyState === XMLHttpRequest.DONE) { var subtitles = parser.fromSrt(httpRequest.responseText, true); for (var i in subtitles) { subtitles[i] = { start : subtitles[i].startTime / 1000, end : subtitles[i].endTime / 1000, text : subtitles[i].text }; } callback(subtitles); } }; httpRequest.open(&#39;GET&#39;, url, true); httpRequest.send(null); }; loadSRT(&#39;/cs291/srt/Lesson 02\/06A Light Field Dimensions - Interactive 3D Graphics-yXocZa2BF0E.srt&#39;, function(subtitles) { var youtubeExternalSubtitle</description>
    </item>
    
    <item>
      <title>07 第一個程式作業</title>
      <link>https://franknine.github.io/cs291/lesson-02/07-first-programming-exercise/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://franknine.github.io/cs291/lesson-02/07-first-programming-exercise/</guid>
      <description>var loadSRT = function(url, callback) { var httpRequest = new XMLHttpRequest(); httpRequest.onreadystatechange = function() { if (httpRequest.readyState === XMLHttpRequest.DONE) { var subtitles = parser.fromSrt(httpRequest.responseText, true); for (var i in subtitles) { subtitles[i] = { start : subtitles[i].startTime / 1000, end : subtitles[i].endTime / 1000, text : subtitles[i].text }; } callback(subtitles); } }; httpRequest.open(&#39;GET&#39;, url, true); httpRequest.send(null); }; loadSRT(&#39;/cs291/srt/Lesson 02\/07 First Programming Exercise - Interactive 3D Graphics-FCedbqJFOxk.srt&#39;, function(subtitles) { var youtubeExternalSubtitle</description>
    </item>
    
    <item>
      <title>07A 第一個程式作業（解答）</title>
      <link>https://franknine.github.io/cs291/lesson-02/07a-first-programming-exercise/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://franknine.github.io/cs291/lesson-02/07a-first-programming-exercise/</guid>
      <description>The following code fixes are needed: Line 30: 1 scene.add( cube ; to 1 scene.add( cube ); Line 65: 1 / draw the coordinate grid to 1 // draw the coordinate grid Line 67: 1 Coordinates.drawGrid(size:1000,scale:0.01, orientation:&amp;#34;y&amp;#34;}); to 1 Coordinates.drawGrid({size:1000,scale:0.01, orientation:&amp;#34;y&amp;#34;});</description>
    </item>
    
  </channel>
</rss>