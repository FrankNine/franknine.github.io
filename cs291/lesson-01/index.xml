<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lesson 01 簡介 on Northern Wind</title>
    <link>https://franknine.github.io/cs291/lesson-01/</link>
    <description>Recent content in Lesson 01 簡介 on Northern Wind</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language><atom:link href="https://franknine.github.io/cs291/lesson-01/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>00 3D 互動式圖學課程概覽</title>
      <link>https://franknine.github.io/cs291/lesson-01/00-interactive-3d-graphics-course-overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://franknine.github.io/cs291/lesson-01/00-interactive-3d-graphics-course-overview/</guid>
      <description></description>
    </item>
    
    <item>
      <title>01 介紹</title>
      <link>https://franknine.github.io/cs291/lesson-01/01-introduction/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://franknine.github.io/cs291/lesson-01/01-introduction/</guid>
      <description>第一個展示 - three.js WebGL materials demo，貼圖來自 Humus 第二個展示 - three.js WebGL materials bumpmap skin demo 模型來源 Lee Perry-Smith head 如果無法看見展示，請參照 WebGL Troubleshooting page。還是有問題？之後我們會談 WebGL</description>
    </item>
    
    <item>
      <title>02 互動式 3D 繪圖</title>
      <link>https://franknine.github.io/cs291/lesson-01/02-interactive-3d-rendering/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://franknine.github.io/cs291/lesson-01/02-interactive-3d-rendering/</guid>
      <description>本課程使用的圖像皆來自 Wikimedia Commons，除非另外註明。建築、XYZ 座標、互動式白板。 你可以自己嘗試 電腦斷層程式。Chrome 是最適合的瀏覽器</description>
    </item>
    
    <item>
      <title>03 第一堂小考</title>
      <link>https://franknine.github.io/cs291/lesson-01/03-first-quiz/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://franknine.github.io/cs291/lesson-01/03-first-quiz/</guid>
      <description>Angry Birds 使用 2.5D 繪圖</description>
    </item>
    
    <item>
      <title>03A 第一堂小考（解答）</title>
      <link>https://franknine.github.io/cs291/lesson-01/03a-first-quiz/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://franknine.github.io/cs291/lesson-01/03a-first-quiz/</guid>
      <description></description>
    </item>
    
    <item>
      <title>04 WebGL 設定</title>
      <link>https://franknine.github.io/cs291/lesson-01/04-webgl-setup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://franknine.github.io/cs291/lesson-01/04-webgl-setup/</guid>
      <description>你可以用 這個網站 測試自己的機器。如果沒有顯示旋轉的立方體，請到 我們的說明頁 或是 這裡 看 “Implementations” 項目。使用 Safari 請參考 這些</description>
    </item>
    
    <item>
      <title>05 核心概念</title>
      <link>https://franknine.github.io/cs291/lesson-01/05-core-ideas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://franknine.github.io/cs291/lesson-01/05-core-ideas/</guid>
      <description>請參考 這些小提示 以獲得最佳學習效果。</description>
    </item>
    
    <item>
      <title>06 互動性與 FPS</title>
      <link>https://franknine.github.io/cs291/lesson-01/06-interactivity-and-fps/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://franknine.github.io/cs291/lesson-01/06-interactivity-and-fps/</guid>
      <description></description>
    </item>
    
    <item>
      <title>07 FPS 展示</title>
      <link>https://franknine.github.io/cs291/lesson-01/07-fps-demo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://franknine.github.io/cs291/lesson-01/07-fps-demo/</guid>
      <description>試試這個互動式展示！ 如果不能運作請到課程維基尋找除錯資料。</description>
    </item>
    
    <item>
      <title>08 FPS 與畫面更新率</title>
      <link>https://franknine.github.io/cs291/lesson-01/08-fps-and-refresh-rate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://franknine.github.io/cs291/lesson-01/08-fps-and-refresh-rate/</guid>
      <description>維基動態模糊頁面 有基本的介紹。 你可以在 這個展示 看到動態模糊修正，使用 &amp;ldquo;b&amp;rdquo; 開關動態模糊，動態模糊開啟時地面應該會在移動時更加模糊。 有些應用程式會</description>
    </item>
    
    <item>
      <title>09 數學問題</title>
      <link>https://franknine.github.io/cs291/lesson-01/09-math-refresher/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://franknine.github.io/cs291/lesson-01/09-math-refresher/</guid>
      <description>我們簡化了問題。50 赫茲實際上是歐洲電視的隔行掃描頻率，真正的影格率其實是 25 赫茲。參考 這裡 以獲得更多電視系統的資訊。電腦沒有隔行掃描的機制，</description>
    </item>
    
    <item>
      <title>09A 數學問題（解答）</title>
      <link>https://franknine.github.io/cs291/lesson-01/09a-math-refresher/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://franknine.github.io/cs291/lesson-01/09a-math-refresher/</guid>
      <description></description>
    </item>
    
    <item>
      <title>10 CPU 週期</title>
      <link>https://franknine.github.io/cs291/lesson-01/10-cpu-cycles/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://franknine.github.io/cs291/lesson-01/10-cpu-cycles/</guid>
      <description></description>
    </item>
    
    <item>
      <title>11 眼睛</title>
      <link>https://franknine.github.io/cs291/lesson-01/11-the-eye/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://franknine.github.io/cs291/lesson-01/11-the-eye/</guid>
      <description>參考 維基介紹眼睛的頁面 以了解眼睛的神奇之處。 《Incognito》 是一本介紹大腦的好書。這本書的第一節講到大腦如何解讀眼睛所見的事物。</description>
    </item>
    
    <item>
      <title>12 針孔攝影機</title>
      <link>https://franknine.github.io/cs291/lesson-01/12-the-pinhole-camera/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://franknine.github.io/cs291/lesson-01/12-the-pinhole-camera/</guid>
      <description></description>
    </item>
    
    <item>
      <title>13 眼見為憑</title>
      <link>https://franknine.github.io/cs291/lesson-01/13-seeing-is-believing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://franknine.github.io/cs291/lesson-01/13-seeing-is-believing/</guid>
      <description>你可以在 http://persci.mit.edu/gallery/checkershadow 找到原始圖片，還有原理解釋。 這裡有這個錯覺得影片版本 http://www.youtube.com/watch?v=z9Sen1HT</description>
    </item>
    
    <item>
      <title>13A 眼見為憑（解答）</title>
      <link>https://franknine.github.io/cs291/lesson-01/13a-seeing-is-believing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://franknine.github.io/cs291/lesson-01/13a-seeing-is-believing/</guid>
      <description></description>
    </item>
    
    <item>
      <title>14 眼 vs. 攝影機</title>
      <link>https://franknine.github.io/cs291/lesson-01/14-eye-vs.-camera/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://franknine.github.io/cs291/lesson-01/14-eye-vs.-camera/</guid>
      <description>這個問題請比較人類的視覺系統（眼和腦一起）與相機的鏡片系統。</description>
    </item>
    
    <item>
      <title>14A 眼 vs. 攝影機（解答）</title>
      <link>https://franknine.github.io/cs291/lesson-01/14a-eye-vs.-camera/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://franknine.github.io/cs291/lesson-01/14a-eye-vs.-camera/</guid>
      <description></description>
    </item>
    
    <item>
      <title>15 視錐</title>
      <link>https://franknine.github.io/cs291/lesson-01/15-view-frustum/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://franknine.github.io/cs291/lesson-01/15-view-frustum/</guid>
      <description></description>
    </item>
    
    <item>
      <title>16 紗門</title>
      <link>https://franknine.github.io/cs291/lesson-01/16-screen-door/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://franknine.github.io/cs291/lesson-01/16-screen-door/</guid>
      <description>圖片來自 Wikimedia Commons。 參考 我的文章 以獲得關於 “frustum” 拼法的資訊。</description>
    </item>
    
    <item>
      <title>17 3D 場景</title>
      <link>https://franknine.github.io/cs291/lesson-01/17-3d-scene/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://franknine.github.io/cs291/lesson-01/17-3d-scene/</guid>
      <description>你可以在 這裡 找到影片中的展示，讓它載入再按開始。 Three.js 物件系統介紹請參考 這裡。</description>
    </item>
    
    <item>
      <title>18 多少像素？</title>
      <link>https://franknine.github.io/cs291/lesson-01/18-how-many-pixels/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://franknine.github.io/cs291/lesson-01/18-how-many-pixels/</guid>
      <description>答案要的是每秒多少像素，回答的時候請不要加上逗號或是小數點。</description>
    </item>
    
    <item>
      <title>18A 多少像素？（解答）</title>
      <link>https://franknine.github.io/cs291/lesson-01/18a-how-many-pixels/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://franknine.github.io/cs291/lesson-01/18a-how-many-pixels/</guid>
      <description></description>
    </item>
    
    <item>
      <title>19 光與繪圖</title>
      <link>https://franknine.github.io/cs291/lesson-01/19-light-and-rendering/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://franknine.github.io/cs291/lesson-01/19-light-and-rendering/</guid>
      <description>光子數量的估算</description>
    </item>
    
    <item>
      <title>20 多少電腦？</title>
      <link>https://franknine.github.io/cs291/lesson-01/20-how-many-computers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://franknine.github.io/cs291/lesson-01/20-how-many-computers/</guid>
      <description>我要向那些懂科技的阿罵致歉。我是想到我小孩的阿罵的電腦，它慢到可怕。 總之不只你的阿罵的電腦不能即時運算，你的電腦也不行。</description>
    </item>
    
    <item>
      <title>20A 多少電腦？（解答）</title>
      <link>https://franknine.github.io/cs291/lesson-01/20a-how-many-computers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://franknine.github.io/cs291/lesson-01/20a-how-many-computers/</guid>
      <description></description>
    </item>
    
    <item>
      <title>21 反轉流程</title>
      <link>https://franknine.github.io/cs291/lesson-01/21-reversing-the-process/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://franknine.github.io/cs291/lesson-01/21-reversing-the-process/</guid>
      <description></description>
    </item>
    
    <item>
      <title>22 茶壺的歷史</title>
      <link>https://franknine.github.io/cs291/lesson-01/22-history-of-the-teapot/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://franknine.github.io/cs291/lesson-01/22-history-of-the-teapot/</guid>
      <description>我在 2015 年 8/11 向 Jim Blinnthat 確認了茶壺變扁是因為比較好看。這裡 有 Blinn 與 3D 列印的茶壺的合照，攝於 SIGGRAPH 2015。 關於茶壺的歷史有很多文章 Frank Crow、S.J. Ba</description>
    </item>
    
    <item>
      <title>23 簡單材質</title>
      <link>https://franknine.github.io/cs291/lesson-01/23-simple-materials/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://franknine.github.io/cs291/lesson-01/23-simple-materials/</guid>
      <description>來自 Wikimedia Commons 的照片：拋光的金屬球體、玻璃球 與 燈泡。 試試這個球體的 展示。仔細看有些球體會對光源位置改變有反應。</description>
    </item>
    
    <item>
      <title>23A 簡單材質（解答）</title>
      <link>https://franknine.github.io/cs291/lesson-01/23a-simple-materials/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://franknine.github.io/cs291/lesson-01/23a-simple-materials/</guid>
      <description></description>
    </item>
    
    <item>
      <title>24 通過管線</title>
      <link>https://franknine.github.io/cs291/lesson-01/24-a-jog-down-the-pipeline/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://franknine.github.io/cs291/lesson-01/24-a-jog-down-the-pipeline/</guid>
      <description>我參與的書有詳細介紹管線，這章網路上可以試讀。 更詳盡的介紹請參考 這些文章。</description>
    </item>
    
    <item>
      <title>25 管線平行化</title>
      <link>https://franknine.github.io/cs291/lesson-01/25-pipeline-parallelism/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://franknine.github.io/cs291/lesson-01/25-pipeline-parallelism/</guid>
      <description>要注意我描述的是筆電桌電用的 GPU，行動裝置通常使用另外的 Tile-based 硬體結構。 Tile-based 演算法介紹 好消息是 WebGL 能驅動不同的硬體架構。</description>
    </item>
    
    <item>
      <title>26 進階紙箱工廠</title>
      <link>https://franknine.github.io/cs291/lesson-01/26-advanced-box-factory/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://franknine.github.io/cs291/lesson-01/26-advanced-box-factory/</guid>
      <description>我應該將「生產線每幾秒能產出一個新箱子？」改成「當生產線滿載時每幾秒能產出一個新箱子？」，抱歉造成混淆。這是一個真正的管線。每五秒第一個切割</description>
    </item>
    
    <item>
      <title>26A 進階紙箱工廠（解答）</title>
      <link>https://franknine.github.io/cs291/lesson-01/26a-advanced-box-factory/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://franknine.github.io/cs291/lesson-01/26a-advanced-box-factory/</guid>
      <description></description>
    </item>
    
    <item>
      <title>27 平行化</title>
      <link>https://franknine.github.io/cs291/lesson-01/27-parallelism/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://franknine.github.io/cs291/lesson-01/27-parallelism/</guid>
      <description></description>
    </item>
    
    <item>
      <title>28 瓶頸</title>
      <link>https://franknine.github.io/cs291/lesson-01/28-bottleneck/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://franknine.github.io/cs291/lesson-01/28-bottleneck/</guid>
      <description></description>
    </item>
    
    <item>
      <title>28A 瓶頸（解答）</title>
      <link>https://franknine.github.io/cs291/lesson-01/28a-bottleneck/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://franknine.github.io/cs291/lesson-01/28a-bottleneck/</guid>
      <description></description>
    </item>
    
    <item>
      <title>29 停頓與飢餓</title>
      <link>https://franknine.github.io/cs291/lesson-01/29-stalling-and-starving/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://franknine.github.io/cs291/lesson-01/29-stalling-and-starving/</guid>
      <description></description>
    </item>
    
    <item>
      <title>30 畫家演算法</title>
      <link>https://franknine.github.io/cs291/lesson-01/30-painters-algorithm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://franknine.github.io/cs291/lesson-01/30-painters-algorithm/</guid>
      <description></description>
    </item>
    
    <item>
      <title>31 有缺陷的畫家演算法</title>
      <link>https://franknine.github.io/cs291/lesson-01/31-flawed-painting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://franknine.github.io/cs291/lesson-01/31-flawed-painting/</guid>
      <description></description>
    </item>
    
    <item>
      <title>31A 有缺陷的畫家演算法（解答）</title>
      <link>https://franknine.github.io/cs291/lesson-01/31a-flawed-painting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://franknine.github.io/cs291/lesson-01/31a-flawed-painting/</guid>
      <description></description>
    </item>
    
    <item>
      <title>32 Z 緩衝區</title>
      <link>https://franknine.github.io/cs291/lesson-01/32-z-buffer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://franknine.github.io/cs291/lesson-01/32-z-buffer/</guid>
      <description>我讓 Z 深度在 0.0 到 1.0 區間以簡化描述，這也是 DirectX 的系統。在單元 7 我們會看到 WebGL 實際上是用 -1.0 到 1.0 區間。兩者只是值域不同，概念是相同的。</description>
    </item>
    
    <item>
      <title>33 Z 緩衝區運作原理</title>
      <link>https://franknine.github.io/cs291/lesson-01/33-how-the-z-buffer-works/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://franknine.github.io/cs291/lesson-01/33-how-the-z-buffer-works/</guid>
      <description></description>
    </item>
    
    <item>
      <title>34 Z 緩衝區最佳化</title>
      <link>https://franknine.github.io/cs291/lesson-01/34-z-buffer-optimization/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://franknine.github.io/cs291/lesson-01/34-z-buffer-optimization/</guid>
      <description></description>
    </item>
    
    <item>
      <title>34A Z 緩衝區最佳化（解答）</title>
      <link>https://franknine.github.io/cs291/lesson-01/34a-z-buffer-optimization/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://franknine.github.io/cs291/lesson-01/34a-z-buffer-optimization/</guid>
      <description></description>
    </item>
    
    <item>
      <title>35 WebGL 與 Three.js</title>
      <link>https://franknine.github.io/cs291/lesson-01/35-webgl-and-three.js/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://franknine.github.io/cs291/lesson-01/35-webgl-and-three.js/</guid>
      <description>Three.js 首頁 值得一看。 如果你已經懂圖學只是想學 Three.js，這個互動式投影片 可以快速帶過。 我 訪問過 Three.js 作者 - 我覺得他的背景很有意思。 WebGL 首頁在 這裡</description>
    </item>
    
    <item>
      <title>36 困難問題</title>
      <link>https://franknine.github.io/cs291/lesson-01/36-tricky-question/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://franknine.github.io/cs291/lesson-01/36-tricky-question/</guid>
      <description></description>
    </item>
    
    <item>
      <title>37 繪圖模式 0</title>
      <link>https://franknine.github.io/cs291/lesson-01/37-demo-rendering-mode-0/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://franknine.github.io/cs291/lesson-01/37-demo-rendering-mode-0/</guid>
      <description></description>
    </item>
    
    <item>
      <title>38 繪圖模式 1</title>
      <link>https://franknine.github.io/cs291/lesson-01/38-demo-rendering-mode-1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://franknine.github.io/cs291/lesson-01/38-demo-rendering-mode-1/</guid>
      <description></description>
    </item>
    
    <item>
      <title>39 繪圖模式 2</title>
      <link>https://franknine.github.io/cs291/lesson-01/39-demo-rendering-mode-2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://franknine.github.io/cs291/lesson-01/39-demo-rendering-mode-2/</guid>
      <description></description>
    </item>
    
    <item>
      <title>40 不同的繪圖方式</title>
      <link>https://franknine.github.io/cs291/lesson-01/40-different-rendering-options/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://franknine.github.io/cs291/lesson-01/40-different-rendering-options/</guid>
      <description>後兩個展示沒有使用 Z 緩衝區，所以發生了什麼事？</description>
    </item>
    
    <item>
      <title>40A 不同的繪圖方式（解答）</title>
      <link>https://franknine.github.io/cs291/lesson-01/40a-different-rendering-options/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://franknine.github.io/cs291/lesson-01/40a-different-rendering-options/</guid>
      <description></description>
    </item>
    
    <item>
      <title>41 結語</title>
      <link>https://franknine.github.io/cs291/lesson-01/41-conclusion/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://franknine.github.io/cs291/lesson-01/41-conclusion/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
