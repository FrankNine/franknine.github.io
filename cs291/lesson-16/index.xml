<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lesson 16 問題集 on Northern Wind</title>
    <link>https://www.chunfuchao.com/cs291/lesson-16/</link>
    <description>Recent content in Lesson 16 問題集 on Northern Wind</description>
    <generator>Hugo</generator>
    <language>zh-TW</language>
    <atom:link href="https://www.chunfuchao.com/cs291/lesson-16/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>01 近平面為零</title>
      <link>https://www.chunfuchao.com/cs291/lesson-16/01-near-plane-of-zero/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://www.chunfuchao.com/cs291/lesson-16/01-near-plane-of-zero/</guid>
      <description>&lt;iframe id=&#34;video&#34; width=&#34;100%&#34; height=&#34;400&#34; src=&#34;https://www.youtube.com/embed/HStuvn_YHOI?cc_load_policy=0&#34; frameborder=&#34;0&#34; allowfullscreen=&#34;true&#34;&gt;&#xD;&#xA;&lt;/iframe&gt;&#xD;&#xA;&lt;script src=&#34;https://www.chunfuchao.com/js/youtube.external.subtitle.min.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://www.chunfuchao.com/js/subtitles.parser.min.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://www.chunfuchao.com/js/loadsrt.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;  loadSRT(&#39;/cs291/srt/Lesson 16\/01 Near Plane of Zero - Interactive 3D Graphics-HStuvn_YHOI.srt&#39;, function(subtitles) {&#xD;&#xA;    var youtubeExternalSubtitle = new YoutubeExternalSubtitle.Subtitle(document.getElementById(&#39;video&#39;), subtitles);&#xD;&#xA;  });&#xD;&#xA;&lt;/script&gt;</description>
    </item>
    <item>
      <title>01A 近平面為零（解答）</title>
      <link>https://www.chunfuchao.com/cs291/lesson-16/01a-near-plane-of-zero/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://www.chunfuchao.com/cs291/lesson-16/01a-near-plane-of-zero/</guid>
      <description>&lt;iframe id=&#34;video&#34; width=&#34;100%&#34; height=&#34;400&#34; src=&#34;https://www.youtube.com/embed/QNMb9ICjivM?cc_load_policy=0&#34; frameborder=&#34;0&#34; allowfullscreen=&#34;true&#34;&gt;&#xD;&#xA;&lt;/iframe&gt;&#xD;&#xA;&lt;script src=&#34;https://www.chunfuchao.com/js/youtube.external.subtitle.min.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://www.chunfuchao.com/js/subtitles.parser.min.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://www.chunfuchao.com/js/loadsrt.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;  loadSRT(&#39;/cs291/srt/Lesson 16\/01A Near Plane of Zero - Interactive 3D Graphics-QNMb9ICjivM.srt&#39;, function(subtitles) {&#xD;&#xA;    var youtubeExternalSubtitle = new YoutubeExternalSubtitle.Subtitle(document.getElementById(&#39;video&#39;), subtitles);&#xD;&#xA;  });&#xD;&#xA;&lt;/script&gt;</description>
    </item>
    <item>
      <title>02 繪圖管線座標</title>
      <link>https://www.chunfuchao.com/cs291/lesson-16/02-graphics-pipeline-coordinates/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://www.chunfuchao.com/cs291/lesson-16/02-graphics-pipeline-coordinates/</guid>
      <description>&lt;iframe id=&#34;video&#34; width=&#34;100%&#34; height=&#34;400&#34; src=&#34;https://www.youtube.com/embed/v2GnTtRE0_Y?cc_load_policy=0&#34; frameborder=&#34;0&#34; allowfullscreen=&#34;true&#34;&gt;&#xD;&#xA;&lt;/iframe&gt;&#xD;&#xA;&lt;script src=&#34;https://www.chunfuchao.com/js/youtube.external.subtitle.min.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://www.chunfuchao.com/js/subtitles.parser.min.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://www.chunfuchao.com/js/loadsrt.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;  loadSRT(&#39;/cs291/srt/Lesson 16\/02 Graphics Pipeline Coordinates - Interactive 3D Graphics-v2GnTtRE0_Y.srt&#39;, function(subtitles) {&#xD;&#xA;    var youtubeExternalSubtitle = new YoutubeExternalSubtitle.Subtitle(document.getElementById(&#39;video&#39;), subtitles);&#xD;&#xA;  });&#xD;&#xA;&lt;/script&gt;&#xA;&lt;p&gt;這個問題的發想來自 Ronen Barzel，有獲得授權。&lt;a href=&#34;https://web.archive.org/web/20120821115643/http://graphics.ucsd.edu/courses/cse167_w06/&#34;&gt;他的圖學課程投影片&lt;/a&gt; 值得看過一遍。&lt;/p&gt;</description>
    </item>
    <item>
      <title>02A 繪圖管線座標（解答）</title>
      <link>https://www.chunfuchao.com/cs291/lesson-16/02a-graphics-pipeline-coordinates/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://www.chunfuchao.com/cs291/lesson-16/02a-graphics-pipeline-coordinates/</guid>
      <description>&lt;iframe id=&#34;video&#34; width=&#34;100%&#34; height=&#34;400&#34; src=&#34;https://www.youtube.com/embed/y4TR8kXlNIA?cc_load_policy=0&#34; frameborder=&#34;0&#34; allowfullscreen=&#34;true&#34;&gt;&#xD;&#xA;&lt;/iframe&gt;&#xD;&#xA;&lt;script src=&#34;https://www.chunfuchao.com/js/youtube.external.subtitle.min.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://www.chunfuchao.com/js/subtitles.parser.min.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://www.chunfuchao.com/js/loadsrt.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;  loadSRT(&#39;/cs291/srt/Lesson 16\/02A Graphics Pipeline Coordinates - Interactive 3D Graphics-y4TR8kXlNIA.srt&#39;, function(subtitles) {&#xD;&#xA;    var youtubeExternalSubtitle = new YoutubeExternalSubtitle.Subtitle(document.getElementById(&#39;video&#39;), subtitles);&#xD;&#xA;  });&#xD;&#xA;&lt;/script&gt;</description>
    </item>
    <item>
      <title>03 四個視埠</title>
      <link>https://www.chunfuchao.com/cs291/lesson-16/03-four-viewports/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://www.chunfuchao.com/cs291/lesson-16/03-four-viewports/</guid>
      <description>&lt;iframe id=&#34;video&#34; width=&#34;100%&#34; height=&#34;400&#34; src=&#34;https://www.youtube.com/embed/Sc4jW2fmogE?cc_load_policy=0&#34; frameborder=&#34;0&#34; allowfullscreen=&#34;true&#34;&gt;&#xD;&#xA;&lt;/iframe&gt;&#xD;&#xA;&lt;script src=&#34;https://www.chunfuchao.com/js/youtube.external.subtitle.min.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://www.chunfuchao.com/js/subtitles.parser.min.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://www.chunfuchao.com/js/loadsrt.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;  loadSRT(&#39;/cs291/srt/Lesson 16\/03 Four Viewports - Interactive 3D Graphics-Sc4jW2fmogE.srt&#39;, function(subtitles) {&#xD;&#xA;    var youtubeExternalSubtitle = new YoutubeExternalSubtitle.Subtitle(document.getElementById(&#39;video&#39;), subtitles);&#xD;&#xA;  });&#xD;&#xA;&lt;/script&gt;&#xA;&lt;p&gt;譯註：請移動到下一頁開始解題。&lt;br&gt;&#xA;由喝水鳥的建模可知鳥的臉是面向 -X。&lt;/p&gt;</description>
    </item>
    <item>
      <title>03 四個視埠（程式）</title>
      <link>https://www.chunfuchao.com/cs291/lesson-16/03p-four-viewports/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://www.chunfuchao.com/cs291/lesson-16/03p-four-viewports/</guid>
      <description>&lt;html&gt;&#xD;&#xA;&#xD;&#xA;&lt;head&gt;&#xD;&#xA;  &lt;link rel=&#34;stylesheet&#34; href=&#34;https://www.chunfuchao.com/codemirror/6.65.7/codemirror.min.css&#34;&gt;&#xD;&#xA;  &lt;script src=&#34;https://www.chunfuchao.com/codemirror/6.65.7/codemirror.min.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;  &lt;script src=&#34;https://www.chunfuchao.com/codemirror/6.65.7/mode/javascript/javascript.min.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;  &lt;script&gt;&#xD;&#xA;    document.addEventListener(&#34;DOMContentLoaded&#34;, function () {&#xD;&#xA;      var editor = CodeMirror.fromTextArea(document.getElementById(&#34;editor&#34;), {&#xD;&#xA;        lineNumbers: true,&#xD;&#xA;        mode: &#34;javascript&#34;,&#xD;&#xA;        theme: &#34;default&#34;&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      var frame = document.getElementById(&#34;preview&#34;);&#xD;&#xA;      var doc = frame.contentDocument || frame.contentWindow.document;&#xD;&#xA;&#xD;&#xA;      editor.on(&#34;change&#34;, function (instance) {&#xD;&#xA;        var content = instance.getValue();&#xD;&#xA;        updatePreview(content);&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      editor.setSize(null, document.body.clientHeight)&#xD;&#xA;&#xD;&#xA;      function updatePreview(scriptContent) {&#xD;&#xA;        var fullHTML = `&#xD;&#xA;            &lt;!DOCTYPE html&gt;&#xD;&#xA;            &lt;html&gt;&#xD;&#xA;            &lt;head&gt;&#xD;&#xA;                \r\n\u003cscript src=\u0022\/js\/cs291\/lib\/three.min.js\u0022\u003e\u003c\/script\u003e\r\n\u003cscript src=\u0022\/js\/cs291\/lib\/jquery-1.8.3.min.js\u0022\u003e\u003c\/script\u003e\r\n\u003cscript src=\u0022\/js\/cs291\/lib\/Coordinates.js\u0022\u003e\u003c\/script\u003e\r\n\u003cscript src=\u0022\/js\/cs291\/lib\/OrbitAndPanControls.js\u0022\u003e\u003c\/script\u003e\r\n\u003cscript src=\u0022\/js\/cs291\/lib\/dat.gui.min.js\u0022\u003e\u003c\/script\u003e\r\n\u003cscript src=\u0022\/js\/cs291\/lib\/uclass_BeveledBlockGeometry.js\u0022\u003e\u003c\/script\u003e\r\n&#xD;&#xA;                \x3Cscript&gt;&#xD;&#xA;                    try {&#xD;&#xA;                            ${scriptContent}&#xD;&#xA;                        } catch (e) {&#xD;&#xA;                            console.error(e);&#xD;&#xA;                        }&#xD;&#xA;                &lt;\/script&gt;&#xD;&#xA;            &lt;/head&gt;&#xD;&#xA;            &lt;body style=&#34;margin: 0; padding: 0; overflow: hidden&#34;&gt;&#xD;&#xA;                &lt;div id=&#34;container&#34;&gt;&lt;/div&gt;&#xD;&#xA;            &lt;/body&gt;&#xD;&#xA;            &lt;/html&gt;&#xD;&#xA;        `;&#xD;&#xA;&#xD;&#xA;        doc.open();&#xD;&#xA;        try {&#xD;&#xA;          doc.write(fullHTML);&#xD;&#xA;        } catch (e) {&#xD;&#xA;          console.error(e);&#xD;&#xA;        }&#xD;&#xA;        doc.close();&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      updatePreview(editor.getValue());&#xD;&#xA;    });&#xD;&#xA;  &lt;/script&gt;&#xD;&#xA;&lt;/head&gt;&#xD;&#xA;&#xD;&#xA;&lt;body style=&#34;height: 100%; margin: 0&#34;&gt;&#xD;&#xA;  &lt;div style=&#34;display: flex; flex-direction: row; height: 100vh&#34;&gt;&#xD;&#xA;    &lt;form style=&#34;width:50%&#34;&gt;&#xD;&#xA;      &lt;textarea id=&#34;editor&#34;&gt;&#xD;&#xA;&amp;#34;use strict&amp;#34;; // 參考 https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode&#xD;&#xA;////////////////////////////////////////////////////////////////////////////////&#xD;&#xA;// 建立四個視埠作業&#xD;&#xA;////////////////////////////////////////////////////////////////////////////////&#xD;&#xA;&#xD;&#xA;var camera, topCam, sideCam, frontCam;&#xD;&#xA;var scene, renderer;&#xD;&#xA;var cameraControls;&#xD;&#xA;&#xD;&#xA;var clock = new THREE.Clock();&#xD;&#xA;&#xD;&#xA;var canvasWidth;&#xD;&#xA;var canvasHeight;&#xD;&#xA;&#xD;&#xA;function fillScene() {&#xD;&#xA;&#x9;scene = new THREE.Scene();&#xD;&#xA;&#x9;scene.fog = new THREE.Fog( 0xDDDDDD, 2000, 4000 );&#xD;&#xA;&#xD;&#xA;&#x9;// 光源&#xD;&#xA;&#x9;scene.add( new THREE.AmbientLight( 0x222222 ) );&#xD;&#xA;&#xD;&#xA;&#x9;var light = new THREE.DirectionalLight( 0xFFFFFF, 0.7 );&#xD;&#xA;&#x9;light.position.set( 200, 500, 500 );&#xD;&#xA;&#xD;&#xA;&#x9;scene.add( light );&#xD;&#xA;&#xD;&#xA;&#x9;light = new THREE.DirectionalLight( 0xFFFFFF, 0.9 );&#xD;&#xA;&#x9;light.position.set( -200, -100, -400 );&#xD;&#xA;&#xD;&#xA;&#x9;scene.add( light );&#xD;&#xA;&#xD;&#xA;&#x9;// 材質&#xD;&#xA;&#x9;var headMaterial = new THREE.MeshLambertMaterial( );&#xD;&#xA;&#x9;headMaterial.color.r = 104/255;&#xD;&#xA;&#x9;headMaterial.color.g = 1/255;&#xD;&#xA;&#x9;headMaterial.color.b = 5/255;&#xD;&#xA;&#xD;&#xA;&#x9;var hatMaterial = new THREE.MeshPhongMaterial( { shininess: 100 } );&#xD;&#xA;&#x9;hatMaterial.color.r = 24/255;&#xD;&#xA;&#x9;hatMaterial.color.g = 38/255;&#xD;&#xA;&#x9;hatMaterial.color.b = 77/255;&#xD;&#xA;&#x9;hatMaterial.specular.setRGB( 0.5, 0.5, 0.5 );&#xD;&#xA;&#xD;&#xA;&#x9;var bodyMaterial = new THREE.MeshPhongMaterial( { shininess: 100 } );&#xD;&#xA;&#x9;bodyMaterial.color.setRGB( 31/255, 86/255, 169/255 );&#xD;&#xA;&#x9;bodyMaterial.specular.setRGB( 0.5, 0.5, 0.5 );&#xD;&#xA;&#xD;&#xA;&#x9;var glassMaterial = new THREE.MeshPhongMaterial( { color: 0x0, specular: 0xFFFFFF, shininess: 100, opacity: 0.3, transparent: true } );&#xD;&#xA;&#xD;&#xA;&#x9;var legMaterial = new THREE.MeshPhongMaterial( { shininess: 4 } );&#xD;&#xA;&#x9;legMaterial.color.setHex( 0xAdA79b );&#xD;&#xA;&#x9;legMaterial.specular.setRGB( 0.5, 0.5, 0.5 );&#xD;&#xA;&#xD;&#xA;&#x9;var footMaterial = new THREE.MeshPhongMaterial( { color: 0x960f0b, shininess: 30 } );&#xD;&#xA;&#x9;footMaterial.specular.setRGB( 0.5, 0.5, 0.5 );&#xD;&#xA;&#xD;&#xA;&#x9;var sphere, cylinder, cube;&#xD;&#xA;&#xD;&#xA;&#x9;var bevelRadius = 1.9;&#x9;// TODO: 2.0 會造成幾何問題&#xD;&#xA;&#xD;&#xA;&#x9;// 建模&#xD;&#xA;&#x9;// 基底&#xD;&#xA;&#x9;cube = new THREE.Mesh(&#xD;&#xA;&#x9;&#x9;new THREE.BeveledBlockGeometry( 20&amp;#43;64&amp;#43;110, 4, 2*77&amp;#43;12, bevelRadius ), footMaterial );&#xD;&#xA;&#x9;cube.position.x = -45;&#x9;// (20&amp;#43;32) - 寬度的一半 (20&amp;#43;64&amp;#43;110)/2&#xD;&#xA;&#x9;cube.position.y = 4/2;&#x9;// 高的的一半&#xD;&#xA;&#x9;cube.position.z = 0;&#x9;// 中心在原點&#xD;&#xA;&#x9;scene.add( cube );&#xD;&#xA;&#xD;&#xA;&#x9;// 腳掌&#xD;&#xA;&#x9;cube = new THREE.Mesh(&#xD;&#xA;&#x9;&#x9;new THREE.BeveledBlockGeometry( 20&amp;#43;64&amp;#43;110, 52, 6, bevelRadius ), footMaterial );&#xD;&#xA;&#x9;cube.position.x = -45;&#x9;// (20&amp;#43;32) - 寬度的一半 (20&amp;#43;64&amp;#43;110)/2&#xD;&#xA;&#x9;cube.position.y = 52/2;&#x9;// 高的的一半&#xD;&#xA;&#x9;cube.position.z = 77 &amp;#43; 6/2;&#x9;// 偏移 77 &amp;#43; 深度的一半 6/2&#xD;&#xA;&#x9;scene.add( cube );&#xD;&#xA;&#xD;&#xA;&#x9;cube = new THREE.Mesh(&#xD;&#xA;&#x9;&#x9;new THREE.BeveledBlockGeometry( 20&amp;#43;64&amp;#43;110, 52, 6, bevelRadius ), footMaterial );&#xD;&#xA;&#x9;cube.position.x = -45;&#x9;// (20&amp;#43;32) - 寬度的一半 (20&amp;#43;64&amp;#43;110)/2&#xD;&#xA;&#x9;cube.position.y = 52/2;&#x9;// 高的的一半&#xD;&#xA;&#x9;cube.position.z = -(77 &amp;#43; 6/2);&#x9;// 負的偏移 77 &amp;#43; 深度的一半 6/2&#xD;&#xA;&#x9;scene.add( cube );&#xD;&#xA;&#xD;&#xA;&#x9;cube = new THREE.Mesh(&#xD;&#xA;&#x9;&#x9;new THREE.BeveledBlockGeometry( 64, 104, 6, bevelRadius ), footMaterial );&#xD;&#xA;&#x9;cube.position.x = 0;&#x9;// X 方向在原點&#xD;&#xA;&#x9;cube.position.y = 104/2;&#xD;&#xA;&#x9;cube.position.z = 77 &amp;#43; 6/2;&#x9;// 負的偏移 77 &amp;#43; 深度的一半 6/2&#xD;&#xA;&#x9;scene.add( cube );&#xD;&#xA;&#xD;&#xA;&#x9;cube = new THREE.Mesh(&#xD;&#xA;&#x9;&#x9;new THREE.BeveledBlockGeometry( 64, 104, 6, bevelRadius ), footMaterial );&#xD;&#xA;&#x9;cube.position.x = 0;&#x9;// X 方向在原點&#xD;&#xA;&#x9;cube.position.y = 104/2;&#xD;&#xA;&#x9;cube.position.z = -(77 &amp;#43; 6/2);&#x9;// 負的偏移 77 &amp;#43; 深度的一半 6/2&#xD;&#xA;&#x9;scene.add( cube );&#xD;&#xA;&#xD;&#xA;&#x9;// 腳&#xD;&#xA;&#x9;cube = new THREE.Mesh(&#xD;&#xA;&#x9;&#x9;new THREE.BeveledBlockGeometry( 60, 282&amp;#43;4, 4, bevelRadius ), legMaterial );&#xD;&#xA;&#x9;cube.position.x = 0;&#x9;// X 方向在原點&#xD;&#xA;&#x9;cube.position.y = 104 &amp;#43; 282/2 - 2;&#xD;&#xA;&#x9;cube.position.z = 77 &amp;#43; 6/2;&#x9;// 負的偏移 77 &amp;#43; 深度的一半 6/2&#xD;&#xA;&#x9;scene.add( cube );&#xD;&#xA;&#xD;&#xA;&#x9;cube = new THREE.Mesh(&#xD;&#xA;&#x9;&#x9;new THREE.BeveledBlockGeometry( 60, 282&amp;#43;4, 4, bevelRadius ), legMaterial );&#xD;&#xA;&#x9;cube.position.x = 0;&#x9;// X 方向在原點&#xD;&#xA;&#x9;cube.position.y = 104 &amp;#43; 282/2 - 2;&#xD;&#xA;&#x9;cube.position.z = -(77 &amp;#43; 6/2);&#x9;// 負的偏移 77 &amp;#43; 深度的一半 6/2&#xD;&#xA;&#x9;scene.add( cube );&#xD;&#xA;&#xD;&#xA;&#x9;// 身體&#xD;&#xA;&#x9;sphere = new THREE.Mesh(&#xD;&#xA;&#x9;&#x9;new THREE.SphereGeometry( 104/2, 32, 16, 0, Math.PI * 2, Math.PI/2, Math.PI ), bodyMaterial );&#xD;&#xA;&#x9;sphere.position.x = 0;&#xD;&#xA;&#x9;sphere.position.y = 160;&#xD;&#xA;&#x9;sphere.position.z = 0;&#xD;&#xA;&#x9;scene.add( sphere );&#xD;&#xA;&#xD;&#xA;&#x9;// 半球的上蓋&#xD;&#xA;&#x9;cylinder = new THREE.Mesh(&#xD;&#xA;&#x9;&#x9;new THREE.CylinderGeometry( 104/2, 104/2, 0, 32 ), bodyMaterial );&#xD;&#xA;&#x9;cylinder.position.x = 0;&#xD;&#xA;&#x9;cylinder.position.y = 160;&#xD;&#xA;&#x9;cylinder.position.z = 0;&#xD;&#xA;&#x9;scene.add( cylinder );&#xD;&#xA;&#xD;&#xA;&#x9;cylinder = new THREE.Mesh(&#xD;&#xA;&#x9;&#x9;new THREE.CylinderGeometry( 12/2, 12/2, 390 - 100, 32 ), bodyMaterial );&#xD;&#xA;&#x9;cylinder.position.x = 0;&#xD;&#xA;&#x9;cylinder.position.y = 160 &amp;#43; 390/2 - 100;&#xD;&#xA;&#x9;cylinder.position.z = 0;&#xD;&#xA;&#x9;scene.add( cylinder );&#xD;&#xA;&#xD;&#xA;&#x9;// 玻璃&#xD;&#xA;&#x9;sphere = new THREE.Mesh(&#xD;&#xA;&#x9;&#x9;new THREE.SphereGeometry( 116/2, 32, 16 ), glassMaterial );&#xD;&#xA;&#x9;sphere.position.x = 0;&#xD;&#xA;&#x9;sphere.position.y = 160;&#xD;&#xA;&#x9;sphere.position.z = 0;&#xD;&#xA;&#x9;scene.add( sphere );&#xD;&#xA;&#xD;&#xA;&#x9;cylinder = new THREE.Mesh(&#xD;&#xA;&#x9;&#x9;new THREE.CylinderGeometry( 24/2, 24/2, 390, 32 ), glassMaterial );&#xD;&#xA;&#x9;cylinder.position.x = 0;&#xD;&#xA;&#x9;cylinder.position.y = 160 &amp;#43; 390/2;&#xD;&#xA;&#x9;cylinder.position.z = 0;&#xD;&#xA;&#x9;scene.add( cylinder );&#xD;&#xA;&#xD;&#xA;&#x9;// 頭&#xD;&#xA;&#x9;sphere = new THREE.Mesh(&#xD;&#xA;&#x9;&#x9;new THREE.SphereGeometry( 104/2, 32, 16 ), headMaterial );&#xD;&#xA;&#x9;sphere.position.x = 0;&#xD;&#xA;&#x9;sphere.position.y = 160 &amp;#43; 390;&#xD;&#xA;&#x9;sphere.position.z = 0;&#xD;&#xA;&#x9;scene.add( sphere );&#xD;&#xA;&#xD;&#xA;&#x9;// 帽子&#xD;&#xA;&#x9;cylinder = new THREE.Mesh(&#xD;&#xA;&#x9;&#x9;new THREE.CylinderGeometry( 142/2, 142/2, 10, 32 ), hatMaterial );&#xD;&#xA;&#x9;cylinder.position.x = 0;&#xD;&#xA;&#x9;cylinder.position.y = 160 &amp;#43; 390 &amp;#43; 40 &amp;#43; 10/2;&#xD;&#xA;&#x9;cylinder.position.z = 0;&#xD;&#xA;&#x9;scene.add( cylinder );&#xD;&#xA;&#xD;&#xA;&#x9;cylinder = new THREE.Mesh(&#xD;&#xA;&#x9;&#x9;new THREE.CylinderGeometry( 80/2, 80/2, 70, 32 ), hatMaterial );&#xD;&#xA;&#x9;cylinder.position.x = 0;&#xD;&#xA;&#x9;cylinder.position.y = 160 &amp;#43; 390 &amp;#43; 40 &amp;#43; 10 &amp;#43; 70/2;&#xD;&#xA;&#x9;cylinder.position.z = 0;&#xD;&#xA;&#x9;scene.add( cylinder );&#xD;&#xA;&#xD;&#xA;&#x9;var crossbarMaterial = new THREE.MeshPhongMaterial( { color: 0x808080, specular: 0xFFFFFF, shininess: 400 } );&#xD;&#xA;&#x9;var eyeMaterial = new THREE.MeshPhongMaterial( { color: 0x000000, specular: 0x303030, shininess: 4 } );&#xD;&#xA;&#xD;&#xA;&#x9;// 橫桿&#xD;&#xA;&#x9;cylinder = new THREE.Mesh(&#xD;&#xA;&#x9;&#x9;new THREE.CylinderGeometry( 5, 5, 200, 32 ), crossbarMaterial );&#xD;&#xA;&#x9;cylinder.position.set( 0, 360, 0 );&#xD;&#xA;&#x9;cylinder.rotation.x = 90 * Math.PI / 180.0;&#xD;&#xA;&#x9;scene.add( cylinder );&#xD;&#xA;&#xD;&#xA;&#x9;// 鼻子&#xD;&#xA;&#x9;cylinder = new THREE.Mesh(&#xD;&#xA;&#x9;&#x9;new THREE.CylinderGeometry( 6, 14, 70, 32 ), headMaterial );&#xD;&#xA;&#x9;cylinder.position.set( -70, 530, 0 );&#xD;&#xA;&#x9;cylinder.rotation.z = 90 * Math.PI / 180.0;&#xD;&#xA;&#x9;scene.add( cylinder );&#xD;&#xA;&#xD;&#xA;&#x9;// 眼睛&#xD;&#xA;&#x9;var sphGeom = new THREE.SphereGeometry( 10, 32, 16 );&#xD;&#xA;&#xD;&#xA;&#x9;// 左眼&#xD;&#xA;&#x9;sphere = new THREE.Mesh( sphGeom, eyeMaterial );&#xD;&#xA;&#x9;sphere.position.set( -48, 560, 0 );&#xD;&#xA;&#x9;var eye = new THREE.Object3D();&#xD;&#xA;&#x9;eye.add( sphere );&#xD;&#xA;&#x9;eye.rotation.y = 20 * Math.PI / 180.0;&#xD;&#xA;&#x9;scene.add( eye );&#xD;&#xA;&#xD;&#xA;&#x9;// 右眼&#xD;&#xA;&#x9;sphere = new THREE.Mesh( sphGeom, eyeMaterial );&#xD;&#xA;&#x9;sphere.position.set( -48, 560, 0 );&#xD;&#xA;&#x9;eye = new THREE.Object3D();&#xD;&#xA;&#x9;eye.add( sphere );&#xD;&#xA;&#x9;eye.rotation.y = -20 * Math.PI / 180.0;&#xD;&#xA;&#x9;scene.add( eye );&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function init() {&#xD;&#xA;&#x9;canvasWidth = window.innerWidth;&#xD;&#xA;&#x9;canvasHeight = window.innerHeight;&#xD;&#xA;&#x9;var aspectRatio = canvasWidth/canvasHeight;&#xD;&#xA;&#xD;&#xA;&#x9;// RENDERER&#xD;&#xA;&#x9;renderer = new THREE.WebGLRenderer( { antialias: true } );&#xD;&#xA;&#x9;renderer.gammaInput = true;&#xD;&#xA;&#x9;renderer.gammaOutput = true;&#xD;&#xA;&#x9;renderer.setSize(canvasWidth, canvasHeight);&#xD;&#xA;&#x9;renderer.setClearColorHex( 0xDDDDDD, 1.0 );&#xD;&#xA;&#x9;// 繪製多個視埠時不要清除畫面&#xD;&#xA;&#x9;renderer.autoClear = false;&#xD;&#xA;&#xD;&#xA;&#x9;var container = document.getElementById(&amp;#39;container&amp;#39;);&#xD;&#xA;&#x9;container.appendChild( renderer.domElement );&#xD;&#xA;&#xD;&#xA;&#x9;// 攝影機&#xD;&#xA;&#x9;camera = new THREE.PerspectiveCamera( 45, canvasWidth / canvasHeight, 1, 4000 );&#xD;&#xA;&#x9;camera.position.set( -1160, 310, -600 );&#xD;&#xA;&#xD;&#xA;&#x9;// OrthographicCamera( left, right, top, bottom, near, far )&#xD;&#xA;&#x9;var viewSize = 1100;&#xD;&#xA;&#x9;topCam = new THREE.OrthographicCamera(&#xD;&#xA;&#x9;&#x9;-aspectRatio*viewSize / 2, aspectRatio*viewSize / 2,&#xD;&#xA;&#x9;&#x9;viewSize / 2, -viewSize / 2,&#xD;&#xA;&#x9;&#x9;-1000, 1000 );&#xD;&#xA;&#x9;// 將 X 設為 Up 向量&#xD;&#xA;&#x9;topCam.up.set( 1, 0, 0 );&#xD;&#xA;&#xD;&#xA;&#x9;// 控制&#xD;&#xA;&#x9;cameraControls = new THREE.OrbitAndPanControls(camera, renderer.domElement);&#xD;&#xA;&#x9;cameraControls.target.set(0,310,0);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function drawHelpers() {&#xD;&#xA;&#x9;Coordinates.drawGround({size:10000});&#xD;&#xA;&#x9;Coordinates.drawGrid({size:10000,scale:0.01});&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function addToDOM() {&#xD;&#xA;&#x9;var container = document.getElementById(&amp;#39;container&amp;#39;);&#xD;&#xA;&#x9;var canvas = container.getElementsByTagName(&amp;#39;canvas&amp;#39;);&#xD;&#xA;&#x9;if (canvas.length&amp;gt;0) {&#xD;&#xA;&#x9;&#x9;container.removeChild(canvas[0]);&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;container.appendChild( renderer.domElement );&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function animate() {&#xD;&#xA;&#x9;window.requestAnimationFrame(animate);&#xD;&#xA;&#x9;render();&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function render() {&#xD;&#xA;&#x9;var delta = clock.getDelta();&#xD;&#xA;&#x9;cameraControls.update(delta);&#xD;&#xA;&#xD;&#xA;&#x9;// 用適當的顏色清除螢幕&#xD;&#xA;&#x9;renderer.clear();&#xD;&#xA;&#xD;&#xA;&#x9;// 透視攝影機&#xD;&#xA;&#x9;renderer.setViewport( 0, 0, 0.5*canvasWidth, 0.5*canvasHeight );&#xD;&#xA;&#x9;renderer.render( scene, camera );&#xD;&#xA;&#xD;&#xA;&#x9;// 俯視角&#xD;&#xA;&#x9;topCam.position.copy( cameraControls.target );&#xD;&#xA;&#x9;// 往上移然後往下看向鳥&#xD;&#xA;&#x9;topCam.position.y &amp;#43;=1 ;&#xD;&#xA;&#x9;topCam.lookAt( cameraControls.target );&#xD;&#xA;&#x9;renderer.setViewport( 0.5*canvasWidth, 0.5*canvasHeight, 0.5*canvasWidth, 0.5*canvasHeight );&#xD;&#xA;&#x9;renderer.render( scene, topCam );&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;document.addEventListener(&amp;#34;DOMContentLoaded&amp;#34;, function () {&#xD;&#xA;&#x9;try {&#xD;&#xA;&#x9;&#x9;init();&#xD;&#xA;&#x9;&#x9;fillScene();&#xD;&#xA;&#x9;&#x9;drawHelpers();&#xD;&#xA;&#x9;&#x9;addToDOM();&#xD;&#xA;&#x9;&#x9;animate();&#xD;&#xA;&#x9;} catch(e) {&#xD;&#xA;&#x9;&#x9;var errorReport = &amp;#34;你的程式遇到不可復原的錯誤，無法繪製 Canvas。錯誤是：&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;&amp;#34;;&#xD;&#xA;&#x9;&#x9;$(&amp;#39;#container&amp;#39;).append(errorReport&amp;#43;e);&#xD;&#xA;&#x9;}&#xD;&#xA;})&#xD;&#xA;&lt;/textarea&gt;&#xD;&#xA;    &lt;/form&gt;&#xD;&#xA;    &lt;iframe id=&#34;preview&#34; src=&#34;about:blank&#34; style=&#34;flex-grow: 1&#34;&gt;&lt;/iframe&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&lt;/body&gt;&#xD;&#xA;&#xD;&#xA;&lt;/html&gt;</description>
    </item>
    <item>
      <title>03A 四個視埠（解答）</title>
      <link>https://www.chunfuchao.com/cs291/lesson-16/03a-four-viewports/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://www.chunfuchao.com/cs291/lesson-16/03a-four-viewports/</guid>
      <description>&lt;iframe id=&#34;video&#34; width=&#34;100%&#34; height=&#34;400&#34; src=&#34;https://www.youtube.com/embed/i7SDse8wxzI?cc_load_policy=0&#34; frameborder=&#34;0&#34; allowfullscreen=&#34;true&#34;&gt;&#xD;&#xA;&lt;/iframe&gt;&#xD;&#xA;&lt;script src=&#34;https://www.chunfuchao.com/js/youtube.external.subtitle.min.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://www.chunfuchao.com/js/subtitles.parser.min.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://www.chunfuchao.com/js/loadsrt.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;  loadSRT(&#39;/cs291/srt/Lesson 16\/03A Four Viewports - Interactive 3D Graphics-i7SDse8wxzI.srt&#39;, function(subtitles) {&#xD;&#xA;    var youtubeExternalSubtitle = new YoutubeExternalSubtitle.Subtitle(document.getElementById(&#39;video&#39;), subtitles);&#xD;&#xA;  });&#xD;&#xA;&lt;/script&gt;&#xA;&lt;p&gt;解答：在 init() 的 topCam 後加入：&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;frontCam = new THREE.OrthographicCamera(&#xD;&#xA;&#x9;-aspectRatio*viewSize / 2, aspectRatio*viewSize / 2,&#xD;&#xA;&#x9;viewSize / 2, -viewSize / 2,&#xD;&#xA;&#x9;-1000, 1000 );&#xD;&#xA;frontCam.up.set( 0, 1, 0 );&#xD;&#xA;sideCam = new THREE.OrthographicCamera(&#xD;&#xA;&#x9;-aspectRatio*viewSize / 2, aspectRatio*viewSize / 2,&#xD;&#xA;&#x9;viewSize / 2, -viewSize / 2,&#xD;&#xA;&#x9;-1000, 1000 );&#xD;&#xA;sideCam.up.set( 0, 1, 0 );&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在 render() 最後加入：&lt;/p&gt;</description>
    </item>
    <item>
      <title>04 後照攝影機</title>
      <link>https://www.chunfuchao.com/cs291/lesson-16/04-rear-view-camera/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://www.chunfuchao.com/cs291/lesson-16/04-rear-view-camera/</guid>
      <description>&lt;iframe id=&#34;video&#34; width=&#34;100%&#34; height=&#34;400&#34; src=&#34;https://www.youtube.com/embed/PI7eT_H95F0?cc_load_policy=0&#34; frameborder=&#34;0&#34; allowfullscreen=&#34;true&#34;&gt;&#xD;&#xA;&lt;/iframe&gt;&#xD;&#xA;&lt;script src=&#34;https://www.chunfuchao.com/js/youtube.external.subtitle.min.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://www.chunfuchao.com/js/subtitles.parser.min.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://www.chunfuchao.com/js/loadsrt.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;  loadSRT(&#39;/cs291/srt/Lesson 16\/04 Rear View Camera - Interactive 3D Graphics-PI7eT_H95F0.srt&#39;, function(subtitles) {&#xD;&#xA;    var youtubeExternalSubtitle = new YoutubeExternalSubtitle.Subtitle(document.getElementById(&#39;video&#39;), subtitles);&#xD;&#xA;  });&#xD;&#xA;&lt;/script&gt;&#xA;&lt;p&gt;譯註：請移動到下一頁開始解題。&lt;/p&gt;</description>
    </item>
    <item>
      <title>04 後照攝影機（程式）</title>
      <link>https://www.chunfuchao.com/cs291/lesson-16/04p-rear-view-camera/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://www.chunfuchao.com/cs291/lesson-16/04p-rear-view-camera/</guid>
      <description>&lt;html&gt;&#xD;&#xA;&#xD;&#xA;&lt;head&gt;&#xD;&#xA;  &lt;link rel=&#34;stylesheet&#34; href=&#34;https://www.chunfuchao.com/codemirror/6.65.7/codemirror.min.css&#34;&gt;&#xD;&#xA;  &lt;script src=&#34;https://www.chunfuchao.com/codemirror/6.65.7/codemirror.min.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;  &lt;script src=&#34;https://www.chunfuchao.com/codemirror/6.65.7/mode/javascript/javascript.min.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;  &lt;script&gt;&#xD;&#xA;    document.addEventListener(&#34;DOMContentLoaded&#34;, function () {&#xD;&#xA;      var editor = CodeMirror.fromTextArea(document.getElementById(&#34;editor&#34;), {&#xD;&#xA;        lineNumbers: true,&#xD;&#xA;        mode: &#34;javascript&#34;,&#xD;&#xA;        theme: &#34;default&#34;&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      var frame = document.getElementById(&#34;preview&#34;);&#xD;&#xA;      var doc = frame.contentDocument || frame.contentWindow.document;&#xD;&#xA;&#xD;&#xA;      editor.on(&#34;change&#34;, function (instance) {&#xD;&#xA;        var content = instance.getValue();&#xD;&#xA;        updatePreview(content);&#xD;&#xA;      });&#xD;&#xA;&#xD;&#xA;      editor.setSize(null, document.body.clientHeight)&#xD;&#xA;&#xD;&#xA;      function updatePreview(scriptContent) {&#xD;&#xA;        var fullHTML = `&#xD;&#xA;            &lt;!DOCTYPE html&gt;&#xD;&#xA;            &lt;html&gt;&#xD;&#xA;            &lt;head&gt;&#xD;&#xA;                \r\n\u003cscript src=\u0022\/js\/cs291\/lib\/jquery-1.8.3.min.js\u0022\u003e\u003c\/script\u003e\r\n\u003cscript src=\u0022\/js\/cs291\/lib\/three.min.js\u0022\u003e\u003c\/script\u003e\r\n\u003cscript src=\u0022\/js\/cs291\/lib\/Coordinates.js\u0022\u003e\u003c\/script\u003e\r\n\u003cscript src=\u0022\/js\/cs291\/lib\/OrbitAndPanControls.js\u0022\u003e\u003c\/script\u003e\r\n\u003cscript src=\u0022\/js\/cs291\/lib\/dat.gui.min.js\u0022\u003e\u003c\/script\u003e\r\n\u003cscript src=\u0022\/js\/cs291\/lib\/uclass_BeveledBlockGeometry.js\u0022\u003e\u003c\/script\u003e\r\n&#xD;&#xA;                \x3Cscript&gt;&#xD;&#xA;                    try {&#xD;&#xA;                            ${scriptContent}&#xD;&#xA;                        } catch (e) {&#xD;&#xA;                            console.error(e);&#xD;&#xA;                        }&#xD;&#xA;                &lt;\/script&gt;&#xD;&#xA;            &lt;/head&gt;&#xD;&#xA;            &lt;body style=&#34;margin: 0; padding: 0; overflow: hidden&#34;&gt;&#xD;&#xA;                &lt;div id=&#34;container&#34;&gt;&lt;/div&gt;&#xD;&#xA;            &lt;/body&gt;&#xD;&#xA;            &lt;/html&gt;&#xD;&#xA;        `;&#xD;&#xA;&#xD;&#xA;        doc.open();&#xD;&#xA;        try {&#xD;&#xA;          doc.write(fullHTML);&#xD;&#xA;        } catch (e) {&#xD;&#xA;          console.error(e);&#xD;&#xA;        }&#xD;&#xA;        doc.close();&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      updatePreview(editor.getValue());&#xD;&#xA;    });&#xD;&#xA;  &lt;/script&gt;&#xD;&#xA;&lt;/head&gt;&#xD;&#xA;&#xD;&#xA;&lt;body style=&#34;height: 100%; margin: 0&#34;&gt;&#xD;&#xA;  &lt;div style=&#34;display: flex; flex-direction: row; height: 100vh&#34;&gt;&#xD;&#xA;    &lt;form style=&#34;width:50%&#34;&gt;&#xD;&#xA;      &lt;textarea id=&#34;editor&#34;&gt;&#xD;&#xA;&amp;#34;use strict&amp;#34;; // 參考 https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode&#xD;&#xA;////////////////////////////////////////////////////////////////////////////////&#xD;&#xA;// 後照攝影機作業&#xD;&#xA;////////////////////////////////////////////////////////////////////////////////&#xD;&#xA;&#xD;&#xA;var camera, rearCam, scene, renderer;&#xD;&#xA;var cameraControls;&#xD;&#xA;&#xD;&#xA;var clock = new THREE.Clock();&#xD;&#xA;&#xD;&#xA;var canvasWidth;&#xD;&#xA;var canvasHeight;&#xD;&#xA;var rearTarget;&#xD;&#xA;&#xD;&#xA;function fillScene() {&#xD;&#xA;&#x9;scene = new THREE.Scene();&#xD;&#xA;&#x9;scene.fog = new THREE.Fog( 0xDDDDDD, 3000, 4000 );&#xD;&#xA;&#xD;&#xA;&#x9;// 光源&#xD;&#xA;&#x9;scene.add( new THREE.AmbientLight( 0x222222 ) );&#xD;&#xA;&#xD;&#xA;&#x9;var light = new THREE.DirectionalLight( 0xFFFFFF, 0.7 );&#xD;&#xA;&#x9;light.position.set( 200, 500, 500 );&#xD;&#xA;&#xD;&#xA;&#x9;scene.add( light );&#xD;&#xA;&#xD;&#xA;&#x9;light = new THREE.DirectionalLight( 0xFFFFFF, 0.9 );&#xD;&#xA;&#x9;light.position.set( -200, -100, -400 );&#xD;&#xA;&#xD;&#xA;&#x9;scene.add( light );&#xD;&#xA;&#xD;&#xA;&#x9;// 一些物件&#xD;&#xA;&#x9;var x,z;&#xD;&#xA;&#xD;&#xA;&#x9;for ( x = -4500; x &amp;lt;= 4500; x &amp;#43;= 1000 ) {&#xD;&#xA;&#x9;&#x9;for ( z = -4500; z &amp;lt;= 4500; z &amp;#43;= 1000 ) {&#xD;&#xA;&#x9;&#x9;&#x9;var coneMaterial = new THREE.MeshLambertMaterial();&#xD;&#xA;&#x9;&#x9;&#x9;// 色輪&#xD;&#xA;&#x9;&#x9;&#x9;var coneDistance = Math.sqrt( x*x &amp;#43; z*z );&#xD;&#xA;&#x9;&#x9;&#x9;// 將值從角度轉換到 2*PI 範圍&#xD;&#xA;&#x9;&#x9;&#x9;var colorHue = Math.acos( x / coneDistance );&#xD;&#xA;&#x9;&#x9;&#x9;if ( z &amp;gt; 0 )&#xD;&#xA;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;colorHue = Math.PI*2 - colorHue;&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;var colorSat = 1 - (coneDistance / 6364);&#xD;&#xA;&#x9;&#x9;&#x9;coneMaterial.color.setHSL((colorHue&amp;#43;1)/(Math.PI*2), colorSat, 0.6 );&#xD;&#xA;&#x9;&#x9;&#x9;coneMaterial.ambient.copy( coneMaterial.color );&#xD;&#xA;&#x9;&#x9;&#x9;var cone = new THREE.Mesh(&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;new THREE.CylinderGeometry( 100 - colorSat*100, colorSat*100, 300 ), coneMaterial );&#xD;&#xA;&#x9;&#x9;&#x9;cone.position.set( x, 150, z );&#xD;&#xA;&#x9;&#x9;&#x9;scene.add( cone );&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;// 材質&#xD;&#xA;&#x9;var headMaterial = new THREE.MeshLambertMaterial( );&#xD;&#xA;&#x9;headMaterial.color.r = 104/255;&#xD;&#xA;&#x9;headMaterial.color.g = 1/255;&#xD;&#xA;&#x9;headMaterial.color.b = 5/255;&#xD;&#xA;&#xD;&#xA;&#x9;var hatMaterial = new THREE.MeshPhongMaterial( { shininess: 100 } );&#xD;&#xA;&#x9;hatMaterial.color.r = 24/255;&#xD;&#xA;&#x9;hatMaterial.color.g = 38/255;&#xD;&#xA;&#x9;hatMaterial.color.b = 77/255;&#xD;&#xA;&#x9;hatMaterial.specular.setRGB( 0.5, 0.5, 0.5 );&#xD;&#xA;&#xD;&#xA;&#x9;var bodyMaterial = new THREE.MeshPhongMaterial( { shininess: 100 } );&#xD;&#xA;&#x9;bodyMaterial.color.setRGB( 31/255, 86/255, 169/255 );&#xD;&#xA;&#x9;bodyMaterial.specular.setRGB( 0.5, 0.5, 0.5 );&#xD;&#xA;&#xD;&#xA;&#x9;var glassMaterial = new THREE.MeshPhongMaterial( { color: 0x0, specular: 0xFFFFFF, shininess: 100, opacity: 0.3, transparent: true } );&#xD;&#xA;&#xD;&#xA;&#x9;var legMaterial = new THREE.MeshPhongMaterial( { shininess: 4 } );&#xD;&#xA;&#x9;legMaterial.color.setHex( 0xAdA79b );&#xD;&#xA;&#x9;legMaterial.specular.setRGB( 0.5, 0.5, 0.5 );&#xD;&#xA;&#xD;&#xA;&#x9;var footMaterial = new THREE.MeshPhongMaterial( { color: 0x960f0b, shininess: 30 } );&#xD;&#xA;&#x9;footMaterial.specular.setRGB( 0.5, 0.5, 0.5 );&#xD;&#xA;&#xD;&#xA;&#x9;var sphere, cylinder, cube;&#xD;&#xA;&#xD;&#xA;&#x9;var bevelRadius = 1.9;&#x9;// TODO: 2.0 會造成幾何問題&#xD;&#xA;&#xD;&#xA;&#x9;// 建模&#xD;&#xA;&#x9;// 基底&#xD;&#xA;&#x9;cube = new THREE.Mesh(&#xD;&#xA;&#x9;&#x9;new THREE.BeveledBlockGeometry( 20&amp;#43;64&amp;#43;110, 4, 2*77&amp;#43;12, bevelRadius ), footMaterial );&#xD;&#xA;&#x9;cube.position.x = -45;&#x9;// (20&amp;#43;32) - 寬度的一半 (20&amp;#43;64&amp;#43;110)/2&#xD;&#xA;&#x9;cube.position.y = 4/2;&#x9;// 高的的一半&#xD;&#xA;&#x9;cube.position.z = 0;&#x9;// 中心在原點&#xD;&#xA;&#x9;scene.add( cube );&#xD;&#xA;&#xD;&#xA;&#x9;// 腳掌&#xD;&#xA;&#x9;cube = new THREE.Mesh(&#xD;&#xA;&#x9;&#x9;new THREE.BeveledBlockGeometry( 20&amp;#43;64&amp;#43;110, 52, 6, bevelRadius ), footMaterial );&#xD;&#xA;&#x9;cube.position.x = -45;&#x9;// (20&amp;#43;32) - 寬度的一半 (20&amp;#43;64&amp;#43;110)/2&#xD;&#xA;&#x9;cube.position.y = 52/2;&#x9;// 高的的一半&#xD;&#xA;&#x9;cube.position.z = 77 &amp;#43; 6/2;&#x9;// 偏移 77 &amp;#43; 深度的一半 6/2&#xD;&#xA;&#x9;scene.add( cube );&#xD;&#xA;&#xD;&#xA;&#x9;cube = new THREE.Mesh(&#xD;&#xA;&#x9;&#x9;new THREE.BeveledBlockGeometry( 20&amp;#43;64&amp;#43;110, 52, 6, bevelRadius ), footMaterial );&#xD;&#xA;&#x9;cube.position.x = -45;&#x9;// (20&amp;#43;32) - 寬度的一半 (20&amp;#43;64&amp;#43;110)/2&#xD;&#xA;&#x9;cube.position.y = 52/2;&#x9;// 高的的一半&#xD;&#xA;&#x9;cube.position.z = -(77 &amp;#43; 6/2);&#x9;// 負的偏移 77 &amp;#43; 深度的一半 6/2&#xD;&#xA;&#x9;scene.add( cube );&#xD;&#xA;&#xD;&#xA;&#x9;cube = new THREE.Mesh(&#xD;&#xA;&#x9;&#x9;new THREE.BeveledBlockGeometry( 64, 104, 6, bevelRadius ), footMaterial );&#xD;&#xA;&#x9;cube.position.x = 0;&#x9;// X 方向在原點&#xD;&#xA;&#x9;cube.position.y = 104/2;&#xD;&#xA;&#x9;cube.position.z = 77 &amp;#43; 6/2;&#x9;// 負的偏移 77 &amp;#43; 深度的一半 6/2&#xD;&#xA;&#x9;scene.add( cube );&#xD;&#xA;&#xD;&#xA;&#x9;cube = new THREE.Mesh(&#xD;&#xA;&#x9;&#x9;new THREE.BeveledBlockGeometry( 64, 104, 6, bevelRadius ), footMaterial );&#xD;&#xA;&#x9;cube.position.x = 0;&#x9;// X 方向在原點&#xD;&#xA;&#x9;cube.position.y = 104/2;&#xD;&#xA;&#x9;cube.position.z = -(77 &amp;#43; 6/2);&#x9;// 負的偏移 77 &amp;#43; 深度的一半 6/2&#xD;&#xA;&#x9;scene.add( cube );&#xD;&#xA;&#xD;&#xA;&#x9;// 腳&#xD;&#xA;&#x9;cube = new THREE.Mesh(&#xD;&#xA;&#x9;&#x9;new THREE.BeveledBlockGeometry( 60, 282&amp;#43;4, 4, bevelRadius ), legMaterial );&#xD;&#xA;&#x9;cube.position.x = 0;&#x9;// X 方向在原點&#xD;&#xA;&#x9;cube.position.y = 104 &amp;#43; 282/2 - 2;&#xD;&#xA;&#x9;cube.position.z = 77 &amp;#43; 6/2;&#x9;// 負的偏移 77 &amp;#43; 深度的一半 6/2&#xD;&#xA;&#x9;scene.add( cube );&#xD;&#xA;&#xD;&#xA;&#x9;cube = new THREE.Mesh(&#xD;&#xA;&#x9;&#x9;new THREE.BeveledBlockGeometry( 60, 282&amp;#43;4, 4, bevelRadius ), legMaterial );&#xD;&#xA;&#x9;cube.position.x = 0;&#x9;// X 方向在原點&#xD;&#xA;&#x9;cube.position.y = 104 &amp;#43; 282/2 - 2;&#xD;&#xA;&#x9;cube.position.z = -(77 &amp;#43; 6/2);&#x9;// 負的偏移 77 &amp;#43; 深度的一半 6/2&#xD;&#xA;&#x9;scene.add( cube );&#xD;&#xA;&#xD;&#xA;&#x9;// 身體&#xD;&#xA;&#x9;sphere = new THREE.Mesh(&#xD;&#xA;&#x9;&#x9;new THREE.SphereGeometry( 104/2, 32, 16, 0, Math.PI * 2, Math.PI/2, Math.PI ), bodyMaterial );&#xD;&#xA;&#x9;sphere.position.x = 0;&#xD;&#xA;&#x9;sphere.position.y = 160;&#xD;&#xA;&#x9;sphere.position.z = 0;&#xD;&#xA;&#x9;scene.add( sphere );&#xD;&#xA;&#xD;&#xA;&#x9;// 半球的上蓋&#xD;&#xA;&#x9;cylinder = new THREE.Mesh(&#xD;&#xA;&#x9;&#x9;new THREE.CylinderGeometry( 104/2, 104/2, 0, 32 ), bodyMaterial );&#xD;&#xA;&#x9;cylinder.position.x = 0;&#xD;&#xA;&#x9;cylinder.position.y = 160;&#xD;&#xA;&#x9;cylinder.position.z = 0;&#xD;&#xA;&#x9;scene.add( cylinder );&#xD;&#xA;&#xD;&#xA;&#x9;cylinder = new THREE.Mesh(&#xD;&#xA;&#x9;&#x9;new THREE.CylinderGeometry( 12/2, 12/2, 390 - 100, 32 ), bodyMaterial );&#xD;&#xA;&#x9;cylinder.position.x = 0;&#xD;&#xA;&#x9;cylinder.position.y = 160 &amp;#43; 390/2 - 100;&#xD;&#xA;&#x9;cylinder.position.z = 0;&#xD;&#xA;&#x9;scene.add( cylinder );&#xD;&#xA;&#xD;&#xA;&#x9;// 玻璃&#xD;&#xA;&#x9;sphere = new THREE.Mesh(&#xD;&#xA;&#x9;&#x9;new THREE.SphereGeometry( 116/2, 32, 16 ), glassMaterial );&#xD;&#xA;&#x9;sphere.position.x = 0;&#xD;&#xA;&#x9;sphere.position.y = 160;&#xD;&#xA;&#x9;sphere.position.z = 0;&#xD;&#xA;&#x9;scene.add( sphere );&#xD;&#xA;&#xD;&#xA;&#x9;cylinder = new THREE.Mesh(&#xD;&#xA;&#x9;&#x9;new THREE.CylinderGeometry( 24/2, 24/2, 390, 32 ), glassMaterial );&#xD;&#xA;&#x9;cylinder.position.x = 0;&#xD;&#xA;&#x9;cylinder.position.y = 160 &amp;#43; 390/2;&#xD;&#xA;&#x9;cylinder.position.z = 0;&#xD;&#xA;&#x9;scene.add( cylinder );&#xD;&#xA;&#xD;&#xA;&#x9;// 頭&#xD;&#xA;&#x9;sphere = new THREE.Mesh(&#xD;&#xA;&#x9;&#x9;new THREE.SphereGeometry( 104/2, 32, 16 ), headMaterial );&#xD;&#xA;&#x9;sphere.position.x = 0;&#xD;&#xA;&#x9;sphere.position.y = 160 &amp;#43; 390;&#xD;&#xA;&#x9;sphere.position.z = 0;&#xD;&#xA;&#x9;scene.add( sphere );&#xD;&#xA;&#xD;&#xA;&#x9;// 帽子&#xD;&#xA;&#x9;cylinder = new THREE.Mesh(&#xD;&#xA;&#x9;&#x9;new THREE.CylinderGeometry( 142/2, 142/2, 10, 32 ), hatMaterial );&#xD;&#xA;&#x9;cylinder.position.x = 0;&#xD;&#xA;&#x9;cylinder.position.y = 160 &amp;#43; 390 &amp;#43; 40 &amp;#43; 10/2;&#xD;&#xA;&#x9;cylinder.position.z = 0;&#xD;&#xA;&#x9;scene.add( cylinder );&#xD;&#xA;&#xD;&#xA;&#x9;cylinder = new THREE.Mesh(&#xD;&#xA;&#x9;&#x9;new THREE.CylinderGeometry( 80/2, 80/2, 70, 32 ), hatMaterial );&#xD;&#xA;&#x9;cylinder.position.x = 0;&#xD;&#xA;&#x9;cylinder.position.y = 160 &amp;#43; 390 &amp;#43; 40 &amp;#43; 10 &amp;#43; 70/2;&#xD;&#xA;&#x9;cylinder.position.z = 0;&#xD;&#xA;&#x9;scene.add( cylinder );&#xD;&#xA;&#xD;&#xA;&#x9;var crossbarMaterial = new THREE.MeshPhongMaterial( { color: 0x808080, specular: 0xFFFFFF, shininess: 400 } );&#xD;&#xA;&#x9;var eyeMaterial = new THREE.MeshPhongMaterial( { color: 0x000000, specular: 0x303030, shininess: 4 } );&#xD;&#xA;&#xD;&#xA;&#x9;// 橫桿&#xD;&#xA;&#x9;cylinder = new THREE.Mesh(&#xD;&#xA;&#x9;&#x9;new THREE.CylinderGeometry( 5, 5, 200, 32 ), crossbarMaterial );&#xD;&#xA;&#x9;cylinder.position.set( 0, 360, 0 );&#xD;&#xA;&#x9;cylinder.rotation.x = 90 * Math.PI / 180.0;&#xD;&#xA;&#x9;scene.add( cylinder );&#xD;&#xA;&#xD;&#xA;&#x9;// 鼻子&#xD;&#xA;&#x9;cylinder = new THREE.Mesh(&#xD;&#xA;&#x9;&#x9;new THREE.CylinderGeometry( 6, 14, 70, 32 ), headMaterial );&#xD;&#xA;&#x9;cylinder.position.set( -70, 530, 0 );&#xD;&#xA;&#x9;cylinder.rotation.z = 90 * Math.PI / 180.0;&#xD;&#xA;&#x9;scene.add( cylinder );&#xD;&#xA;&#xD;&#xA;&#x9;// 眼睛&#xD;&#xA;&#x9;var sphGeom = new THREE.SphereGeometry( 10, 32, 16 );&#xD;&#xA;&#xD;&#xA;&#x9;// 左眼&#xD;&#xA;&#x9;sphere = new THREE.Mesh( sphGeom, eyeMaterial );&#xD;&#xA;&#x9;sphere.position.set( -48, 560, 0 );&#xD;&#xA;&#x9;var eye = new THREE.Object3D();&#xD;&#xA;&#x9;eye.add( sphere );&#xD;&#xA;&#x9;eye.rotation.y = 20 * Math.PI / 180.0;&#xD;&#xA;&#x9;scene.add( eye );&#xD;&#xA;&#xD;&#xA;&#x9;// 右眼&#xD;&#xA;&#x9;sphere = new THREE.Mesh( sphGeom, eyeMaterial );&#xD;&#xA;&#x9;sphere.position.set( -48, 560, 0 );&#xD;&#xA;&#x9;eye = new THREE.Object3D();&#xD;&#xA;&#x9;eye.add( sphere );&#xD;&#xA;&#x9;eye.rotation.y = -20 * Math.PI / 180.0;&#xD;&#xA;&#x9;scene.add( eye );&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function init() {&#xD;&#xA;&#x9;canvasWidth = window.innerWidth;&#xD;&#xA;&#x9;canvasHeight = window.innerHeight;&#xD;&#xA;&#xD;&#xA;&#x9;// 配置一次，而非每影格配置&#xD;&#xA;&#x9;rearTarget = new THREE.Vector3();&#xD;&#xA;&#xD;&#xA;&#x9;// RENDERER&#xD;&#xA;&#x9;renderer = new THREE.WebGLRenderer( { antialias: true } );&#xD;&#xA;&#x9;renderer.gammaInput = true;&#xD;&#xA;&#x9;renderer.gammaOutput = true;&#xD;&#xA;&#x9;renderer.setSize(canvasWidth, canvasHeight);&#xD;&#xA;&#x9;renderer.setClearColorHex( 0xDDDDDD, 1.0 );&#xD;&#xA;&#x9;// 第二視埠繪製時不要清除螢幕&#xD;&#xA;&#x9;renderer.autoClear = false;&#xD;&#xA;&#xD;&#xA;&#x9;// 攝影機&#xD;&#xA;&#x9;camera = new THREE.PerspectiveCamera( 45, canvasWidth / canvasHeight, 1, 7000 );&#xD;&#xA;&#x9;camera.position.set( -810, 310, -1230 );&#xD;&#xA;&#x9;rearCam = new THREE.PerspectiveCamera( 45, canvasWidth / canvasHeight, 1, 7000 );&#xD;&#xA;&#x9;rearCam.position.set( -810, 310, -1230 );&#xD;&#xA;&#x9;rearCam.lookAt( new THREE.Vector3( 0, 0, 0 ) );&#xD;&#xA;&#xD;&#xA;&#x9;// 控制&#xD;&#xA;&#x9;cameraControls = new THREE.OrbitAndPanControls(camera, renderer.domElement);&#xD;&#xA;&#x9;cameraControls.target.set(0,130,0);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function drawHelpers() {&#xD;&#xA;&#x9;Coordinates.drawGround({size:10000});&#xD;&#xA;&#x9;Coordinates.drawGrid({size:10000,scale:0.01});&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function addToDOM() {&#xD;&#xA;&#x9;var container = document.getElementById(&amp;#39;container&amp;#39;);&#xD;&#xA;&#x9;var canvas = container.getElementsByTagName(&amp;#39;canvas&amp;#39;);&#xD;&#xA;&#x9;if (canvas.length&amp;gt;0) {&#xD;&#xA;&#x9;&#x9;container.removeChild(canvas[0]);&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;container.appendChild( renderer.domElement );&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function animate() {&#xD;&#xA;&#x9;window.requestAnimationFrame(animate);&#xD;&#xA;&#x9;render();&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function render() {&#xD;&#xA;&#x9;var delta = clock.getDelta();&#xD;&#xA;&#x9;cameraControls.update(delta);&#xD;&#xA;&#xD;&#xA;&#x9;renderer.enableScissorTest( false );&#xD;&#xA;&#x9;renderer.setViewport( 0, 0, canvasWidth, canvasHeight );&#xD;&#xA;&#x9;renderer.clear();&#xD;&#xA;&#x9;renderer.render( scene, camera );&#xD;&#xA;&#xD;&#xA;&#x9;// 學生作業：設定 rearCam 使它看向相反方向&#xD;&#xA;&#xD;&#xA;&#x9;// 後照 render&#xD;&#xA;&#x9;renderer.enableScissorTest( true );&#xD;&#xA;&#x9;// setScissor 在這裡可以改成只設定一次&#xD;&#xA;&#x9;// 因為範圍不會改變&#xD;&#xA;&#x9;renderer.setScissor( 0.75 * canvasWidth, 0.75 * canvasHeight,&#xD;&#xA;&#x9;&#x9;0.25 * canvasWidth, 0.25 * canvasHeight );&#xD;&#xA;&#x9;renderer.setViewport( 0.75 * canvasWidth, 0.75 * canvasHeight,&#xD;&#xA;&#x9;&#x9;0.25 * canvasWidth, 0.25 * canvasHeight );&#xD;&#xA;&#x9;renderer.clear();&#xD;&#xA;&#x9;renderer.render( scene, rearCam );&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;document.addEventListener(&amp;#34;DOMContentLoaded&amp;#34;, function () {&#xD;&#xA;&#x9;try {&#xD;&#xA;&#x9;&#x9;init();&#xD;&#xA;&#x9;&#x9;fillScene();&#xD;&#xA;&#x9;&#x9;drawHelpers();&#xD;&#xA;&#x9;&#x9;addToDOM();&#xD;&#xA;&#x9;&#x9;animate();&#xD;&#xA;&#x9;} catch(e) {&#xD;&#xA;&#x9;&#x9;var errorReport = &amp;#34;你的程式遇到不可復原的錯誤，無法繪製 Canvas。錯誤是：&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;&amp;#34;;&#xD;&#xA;&#x9;&#x9;$(&amp;#39;#container&amp;#39;).append(errorReport&amp;#43;e);&#xD;&#xA;&#x9;}&#xD;&#xA;})&#xD;&#xA;&lt;/textarea&gt;&#xD;&#xA;    &lt;/form&gt;&#xD;&#xA;    &lt;iframe id=&#34;preview&#34; src=&#34;about:blank&#34; style=&#34;flex-grow: 1&#34;&gt;&lt;/iframe&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&lt;/body&gt;&#xD;&#xA;&#xD;&#xA;&lt;/html&gt;</description>
    </item>
    <item>
      <title>04A 後照攝影機（解答）</title>
      <link>https://www.chunfuchao.com/cs291/lesson-16/04a-rear-view-camera/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://www.chunfuchao.com/cs291/lesson-16/04a-rear-view-camera/</guid>
      <description>&lt;iframe id=&#34;video&#34; width=&#34;100%&#34; height=&#34;400&#34; src=&#34;https://www.youtube.com/embed/nIwFuOV0RSE?cc_load_policy=0&#34; frameborder=&#34;0&#34; allowfullscreen=&#34;true&#34;&gt;&#xD;&#xA;&lt;/iframe&gt;&#xD;&#xA;&lt;script src=&#34;https://www.chunfuchao.com/js/youtube.external.subtitle.min.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://www.chunfuchao.com/js/subtitles.parser.min.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://www.chunfuchao.com/js/loadsrt.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;  loadSRT(&#39;/cs291/srt/Lesson 16\/04A Rear View Camera - Interactive 3D Graphics-nIwFuOV0RSE.srt&#39;, function(subtitles) {&#xD;&#xA;    var youtubeExternalSubtitle = new YoutubeExternalSubtitle.Subtitle(document.getElementById(&#39;video&#39;), subtitles);&#xD;&#xA;  });&#xD;&#xA;&lt;/script&gt;&#xA;&lt;p&gt;解答：在 render() 的 後照 Renderer 前加入：&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;rearCam.position.copy( camera.position );&#xD;&#xA;rearTarget.copy( camera.position );&#xD;&#xA;rearTarget.sub( cameraControls.target );&#xD;&#xA;rearTarget.add( camera.position );&#xD;&#xA;rearCam.lookAt( rearTarget );&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>05 除以零</title>
      <link>https://www.chunfuchao.com/cs291/lesson-16/05-division-by-zero/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://www.chunfuchao.com/cs291/lesson-16/05-division-by-zero/</guid>
      <description>&lt;iframe id=&#34;video&#34; width=&#34;100%&#34; height=&#34;400&#34; src=&#34;https://www.youtube.com/embed/6M9j5xO0fH8?cc_load_policy=0&#34; frameborder=&#34;0&#34; allowfullscreen=&#34;true&#34;&gt;&#xD;&#xA;&lt;/iframe&gt;&#xD;&#xA;&lt;script src=&#34;https://www.chunfuchao.com/js/youtube.external.subtitle.min.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://www.chunfuchao.com/js/subtitles.parser.min.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://www.chunfuchao.com/js/loadsrt.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;  loadSRT(&#39;/cs291/srt/Lesson 16\/05 Division by Zero - Interactive 3D Graphics-6M9j5xO0fH8.srt&#39;, function(subtitles) {&#xD;&#xA;    var youtubeExternalSubtitle = new YoutubeExternalSubtitle.Subtitle(document.getElementById(&#39;video&#39;), subtitles);&#xD;&#xA;  });&#xD;&#xA;&lt;/script&gt;</description>
    </item>
    <item>
      <title>05A 除以零（解答）</title>
      <link>https://www.chunfuchao.com/cs291/lesson-16/05a-division-by-zero/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://www.chunfuchao.com/cs291/lesson-16/05a-division-by-zero/</guid>
      <description>&lt;iframe id=&#34;video&#34; width=&#34;100%&#34; height=&#34;400&#34; src=&#34;https://www.youtube.com/embed/emoumSQWxbk?cc_load_policy=0&#34; frameborder=&#34;0&#34; allowfullscreen=&#34;true&#34;&gt;&#xD;&#xA;&lt;/iframe&gt;&#xD;&#xA;&lt;script src=&#34;https://www.chunfuchao.com/js/youtube.external.subtitle.min.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://www.chunfuchao.com/js/subtitles.parser.min.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://www.chunfuchao.com/js/loadsrt.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;  loadSRT(&#39;/cs291/srt/Lesson 16\/05A Division by Zero - Interactive 3D Graphics-emoumSQWxbk.srt&#39;, function(subtitles) {&#xD;&#xA;    var youtubeExternalSubtitle = new YoutubeExternalSubtitle.Subtitle(document.getElementById(&#39;video&#39;), subtitles);&#xD;&#xA;  });&#xD;&#xA;&lt;/script&gt;</description>
    </item>
    <item>
      <title>06 攝影機矩陣配對</title>
      <link>https://www.chunfuchao.com/cs291/lesson-16/06-camera-matrices-matching/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://www.chunfuchao.com/cs291/lesson-16/06-camera-matrices-matching/</guid>
      <description>&lt;iframe id=&#34;video&#34; width=&#34;100%&#34; height=&#34;400&#34; src=&#34;https://www.youtube.com/embed/isujmwi2Wos?cc_load_policy=0&#34; frameborder=&#34;0&#34; allowfullscreen=&#34;true&#34;&gt;&#xD;&#xA;&lt;/iframe&gt;&#xD;&#xA;&lt;script src=&#34;https://www.chunfuchao.com/js/youtube.external.subtitle.min.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://www.chunfuchao.com/js/subtitles.parser.min.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://www.chunfuchao.com/js/loadsrt.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;  loadSRT(&#39;/cs291/srt/Lesson 16\/06 Camera Matrices Matching - Interactive 3D Graphics-isujmwi2Wos.srt&#39;, function(subtitles) {&#xD;&#xA;    var youtubeExternalSubtitle = new YoutubeExternalSubtitle.Subtitle(document.getElementById(&#39;video&#39;), subtitles);&#xD;&#xA;  });&#xD;&#xA;&lt;/script&gt;</description>
    </item>
    <item>
      <title>06A 攝影機矩陣配對（解答）</title>
      <link>https://www.chunfuchao.com/cs291/lesson-16/06a-camera-matrices-matching/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://www.chunfuchao.com/cs291/lesson-16/06a-camera-matrices-matching/</guid>
      <description>&lt;iframe id=&#34;video&#34; width=&#34;100%&#34; height=&#34;400&#34; src=&#34;https://www.youtube.com/embed/XHJetliQqPA?cc_load_policy=0&#34; frameborder=&#34;0&#34; allowfullscreen=&#34;true&#34;&gt;&#xD;&#xA;&lt;/iframe&gt;&#xD;&#xA;&lt;script src=&#34;https://www.chunfuchao.com/js/youtube.external.subtitle.min.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://www.chunfuchao.com/js/subtitles.parser.min.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://www.chunfuchao.com/js/loadsrt.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;  loadSRT(&#39;/cs291/srt/Lesson 16\/06A Camera Matrices Matching - Interactive 3D Graphics-XHJetliQqPA.srt&#39;, function(subtitles) {&#xD;&#xA;    var youtubeExternalSubtitle = new YoutubeExternalSubtitle.Subtitle(document.getElementById(&#39;video&#39;), subtitles);&#xD;&#xA;  });&#xD;&#xA;&lt;/script&gt;</description>
    </item>
  </channel>
</rss>
